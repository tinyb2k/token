"use strict";function e(e){return e&&"object"==typeof e&&"default"in e?e.default:e}Object.defineProperty(exports,"__esModule",{value:!0});var t=e(require("tiny-invariant"));require("tiny-warning");var n=e(require("lodash/flatten")),a=require("@ethersproject/bytes"),r=require("@ethersproject/wallet"),i=require("@ethersproject/hash"),s=require("@ethersproject/bignumber"),p=require("@ethersproject/abi"),y=e(require("date-fns/getUnixTime"));require("@ethersproject/address");var u=require("ethers"),o=require("uuid"),d=e(require("lodash/padEnd")),l=e(require("lodash/padStart")),m=e(require("isomorphic-unfetch")),c=require("query-string");function T(e,t,n,a,r,i,s){try{var p=e[i](s),y=p.value}catch(e){return void n(e)}p.done?t(y):Promise.resolve(y).then(a,r)}function b(e){return function(){var t=this,n=arguments;return new Promise((function(a,r){var i=e.apply(t,n);function s(e){T(i,a,r,s,p,"next",e)}function p(e){T(i,a,r,s,p,"throw",e)}s(void 0)}))}}function k(){return(k=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}function f(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,x(e,t)}function A(e){return(A=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function x(e,t){return(x=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function g(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}function v(e,t,n){return(v=g()?Reflect.construct:function(e,t,n){var a=[null];a.push.apply(a,t);var r=new(Function.bind.apply(e,a));return n&&x(r,n.prototype),r}).apply(null,arguments)}function h(e){var t="function"==typeof Map?new Map:void 0;return(h=function(e){if(null===e||-1===Function.toString.call(e).indexOf("[native code]"))return e;if("function"!=typeof e)throw new TypeError("Super expression must either be null or a function");if(void 0!==t){if(t.has(e))return t.get(e);t.set(e,n)}function n(){return v(e,arguments,A(this).constructor)}return n.prototype=Object.create(e.prototype,{constructor:{value:n,enumerable:!1,writable:!0,configurable:!0}}),x(n,e)})(e)}var E,O,R,F,I=(function(e){var t=function(e){var t=Object.prototype,n=t.hasOwnProperty,a="function"==typeof Symbol?Symbol:{},r=a.iterator||"@@iterator",i=a.asyncIterator||"@@asyncIterator",s=a.toStringTag||"@@toStringTag";function p(e,t,n){return Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{p({},"")}catch(e){p=function(e,t,n){return e[t]=n}}function y(e,t,n,a){var r=Object.create((t&&t.prototype instanceof d?t:d).prototype),i=new h(a||[]);return r._invoke=function(e,t,n){var a="suspendedStart";return function(r,i){if("executing"===a)throw new Error("Generator is already running");if("completed"===a){if("throw"===r)throw i;return{value:void 0,done:!0}}for(n.method=r,n.arg=i;;){var s=n.delegate;if(s){var p=x(s,n);if(p){if(p===o)continue;return p}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if("suspendedStart"===a)throw a="completed",n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);a="executing";var y=u(e,t,n);if("normal"===y.type){if(a=n.done?"completed":"suspendedYield",y.arg===o)continue;return{value:y.arg,done:n.done}}"throw"===y.type&&(a="completed",n.method="throw",n.arg=y.arg)}}}(e,n,i),r}function u(e,t,n){try{return{type:"normal",arg:e.call(t,n)}}catch(e){return{type:"throw",arg:e}}}e.wrap=y;var o={};function d(){}function l(){}function m(){}var c={};p(c,r,(function(){return this}));var T=Object.getPrototypeOf,b=T&&T(T(E([])));b&&b!==t&&n.call(b,r)&&(c=b);var k=m.prototype=d.prototype=Object.create(c);function f(e){["next","throw","return"].forEach((function(t){p(e,t,(function(e){return this._invoke(t,e)}))}))}function A(e,t){var a;this._invoke=function(r,i){function s(){return new t((function(a,s){!function a(r,i,s,p){var y=u(e[r],e,i);if("throw"!==y.type){var o=y.arg,d=o.value;return d&&"object"==typeof d&&n.call(d,"__await")?t.resolve(d.__await).then((function(e){a("next",e,s,p)}),(function(e){a("throw",e,s,p)})):t.resolve(d).then((function(e){o.value=e,s(o)}),(function(e){return a("throw",e,s,p)}))}p(y.arg)}(r,i,a,s)}))}return a=a?a.then(s,s):s()}}function x(e,t){var n=e.iterator[t.method];if(void 0===n){if(t.delegate=null,"throw"===t.method){if(e.iterator.return&&(t.method="return",t.arg=void 0,x(e,t),"throw"===t.method))return o;t.method="throw",t.arg=new TypeError("The iterator does not provide a 'throw' method")}return o}var a=u(n,e.iterator,t.arg);if("throw"===a.type)return t.method="throw",t.arg=a.arg,t.delegate=null,o;var r=a.arg;return r?r.done?(t[e.resultName]=r.value,t.next=e.nextLoc,"return"!==t.method&&(t.method="next",t.arg=void 0),t.delegate=null,o):r:(t.method="throw",t.arg=new TypeError("iterator result is not an object"),t.delegate=null,o)}function g(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function v(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function h(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(g,this),this.reset(!0)}function E(e){if(e){var t=e[r];if(t)return t.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var a=-1,i=function t(){for(;++a<e.length;)if(n.call(e,a))return t.value=e[a],t.done=!1,t;return t.value=void 0,t.done=!0,t};return i.next=i}}return{next:O}}function O(){return{value:void 0,done:!0}}return l.prototype=m,p(k,"constructor",m),p(m,"constructor",l),l.displayName=p(m,s,"GeneratorFunction"),e.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===l||"GeneratorFunction"===(t.displayName||t.name))},e.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,m):(e.__proto__=m,p(e,s,"GeneratorFunction")),e.prototype=Object.create(k),e},e.awrap=function(e){return{__await:e}},f(A.prototype),p(A.prototype,i,(function(){return this})),e.AsyncIterator=A,e.async=function(t,n,a,r,i){void 0===i&&(i=Promise);var s=new A(y(t,n,a,r),i);return e.isGeneratorFunction(n)?s:s.next().then((function(e){return e.done?e.value:s.next()}))},f(k),p(k,s,"Generator"),p(k,r,(function(){return this})),p(k,"toString",(function(){return"[object Generator]"})),e.keys=function(e){var t=[];for(var n in e)t.push(n);return t.reverse(),function n(){for(;t.length;){var a=t.pop();if(a in e)return n.value=a,n.done=!1,n}return n.done=!0,n}},e.values=E,h.prototype={constructor:h,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(v),!e)for(var t in this)"t"===t.charAt(0)&&n.call(this,t)&&!isNaN(+t.slice(1))&&(this[t]=void 0)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var t=this;function a(n,a){return s.type="throw",s.arg=e,t.next=n,a&&(t.method="next",t.arg=void 0),!!a}for(var r=this.tryEntries.length-1;r>=0;--r){var i=this.tryEntries[r],s=i.completion;if("root"===i.tryLoc)return a("end");if(i.tryLoc<=this.prev){var p=n.call(i,"catchLoc"),y=n.call(i,"finallyLoc");if(p&&y){if(this.prev<i.catchLoc)return a(i.catchLoc,!0);if(this.prev<i.finallyLoc)return a(i.finallyLoc)}else if(p){if(this.prev<i.catchLoc)return a(i.catchLoc,!0)}else{if(!y)throw new Error("try statement without catch or finally");if(this.prev<i.finallyLoc)return a(i.finallyLoc)}}}},abrupt:function(e,t){for(var a=this.tryEntries.length-1;a>=0;--a){var r=this.tryEntries[a];if(r.tryLoc<=this.prev&&n.call(r,"finallyLoc")&&this.prev<r.finallyLoc){var i=r;break}}i&&("break"===e||"continue"===e)&&i.tryLoc<=t&&t<=i.finallyLoc&&(i=null);var s=i?i.completion:{};return s.type=e,s.arg=t,i?(this.method="next",this.next=i.finallyLoc,o):this.complete(s)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),o},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.finallyLoc===e)return this.complete(n.completion,n.afterLoc),v(n),o}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.tryLoc===e){var a=n.completion;if("throw"===a.type){var r=a.arg;v(n)}return r}}throw new Error("illegal catch attempt")},delegateYield:function(e,t,n){return this.delegate={iterator:E(e),resultName:t,nextLoc:n},"next"===this.method&&(this.arg=void 0),o}},e}(e.exports);try{regeneratorRuntime=t}catch(e){"object"==typeof globalThis?globalThis.regeneratorRuntime=t:Function("r","regeneratorRuntime = r")(t)}}(F={exports:{}}),F.exports),S=s.BigNumber.from(0),C="0x0000000000000000000000000000000000000000";(E=exports.AssetProxyId||(exports.AssetProxyId={})).ERC20="0xf47261b0",E.ERC721="0x02571792",E.MultiAsset="0x94cfcdd7",E.ERC1155="0xa7cb5fb7",E.StaticCall="0xc339d10a",E.ERC20Bridge="0xdc1600f3",(O=exports.SupportedChainIdsV3||(exports.SupportedChainIdsV3={}))[O.Mainnet=1]="Mainnet",O[O.Ropsten=3]="Ropsten",O[O.Rinkeby=4]="Rinkeby",O[O.Kovan=42]="Kovan",O[O.Ganache=1337]="Ganache",O[O.BSC=56]="BSC",O[O.Polygon=137]="Polygon",O[O.PolygonMumbai=80001]="PolygonMumbai",O[O.Avalanche=43114]="Avalanche",(R=exports.OrderStatusV3||(exports.OrderStatusV3={}))[R.Invalid=0]="Invalid",R[R.InvalidMakerAssetAmount=1]="InvalidMakerAssetAmount",R[R.InvalidTakerAssetAmount=2]="InvalidTakerAssetAmount",R[R.Fillable=3]="Fillable",R[R.Expired=4]="Expired",R[R.FullyFilled=5]="FullyFilled",R[R.Cancelled=6]="Cancelled";var L,w={0:"Invalid",1:"InvalidMakerAssetAmount",2:"InvalidTakerAssetAmount",3:"Fillable",4:"Expired",5:"FullyFilled",6:"Cancelled"};(exports.ORDER_BUILDER_ERROR_CODES||(exports.ORDER_BUILDER_ERROR_CODES={})).MISSING_CONTRACT_WRAPPERS_ERROR="MISSING_CONTRACT_WRAPPERS_ERROR",(L=exports.SupportedTokenTypes||(exports.SupportedTokenTypes={})).ERC20="ERC20",L.ERC721="ERC721",L.ERC1155="ERC1155";var D,N={Order:[{name:"makerAddress",type:"address"},{name:"takerAddress",type:"address"},{name:"feeRecipientAddress",type:"address"},{name:"senderAddress",type:"address"},{name:"makerAssetAmount",type:"uint256"},{name:"takerAssetAmount",type:"uint256"},{name:"makerFee",type:"uint256"},{name:"takerFee",type:"uint256"},{name:"expirationTimeSeconds",type:"uint256"},{name:"salt",type:"uint256"},{name:"makerAssetData",type:"bytes"},{name:"takerAssetData",type:"bytes"},{name:"makerFeeAssetData",type:"bytes"},{name:"takerFeeAssetData",type:"bytes"}]};(D=exports.RevertReason||(exports.RevertReason={})).OrderUnfillable="ORDER_UNFILLABLE",D.InvalidMaker="INVALID_MAKER",D.InvalidTaker="INVALID_TAKER",D.InvalidSender="INVALID_SENDER",D.InvalidOrderSignature="INVALID_ORDER_SIGNATURE",D.InvalidTakerAmount="INVALID_TAKER_AMOUNT",D.DivisionByZero="DIVISION_BY_ZERO",D.RoundingError="ROUNDING_ERROR",D.InvalidSignature="INVALID_SIGNATURE",D.SignatureIllegal="SIGNATURE_ILLEGAL",D.SignatureInvalid="SIGNATURE_INVALID",D.SignatureUnsupported="SIGNATURE_UNSUPPORTED",D.TakerOverpay="TAKER_OVERPAY",D.OrderOverfill="ORDER_OVERFILL",D.InvalidFillPrice="INVALID_FILL_PRICE",D.InvalidNewOrderEpoch="INVALID_NEW_ORDER_EPOCH",D.CompleteFillFailed="COMPLETE_FILL_FAILED",D.NegativeSpreadRequired="NEGATIVE_SPREAD_REQUIRED",D.ReentrancyIllegal="REENTRANCY_ILLEGAL",D.InvalidTxHash="INVALID_TX_HASH",D.InvalidTxSignature="INVALID_TX_SIGNATURE",D.FailedExecution="FAILED_EXECUTION",D.LengthGreaterThan0Required="LENGTH_GREATER_THAN_0_REQUIRED",D.LengthGreaterThan3Required="LENGTH_GREATER_THAN_3_REQUIRED",D.LengthGreaterThan131Required="LENGTH_GREATER_THAN_131_REQUIRED",D.Length0Required="LENGTH_0_REQUIRED",D.Length65Required="LENGTH_65_REQUIRED",D.InvalidAmount="INVALID_AMOUNT",D.TransferFailed="TRANSFER_FAILED",D.SenderNotAuthorized="SENDER_NOT_AUTHORIZED",D.TargetNotAuthorized="TARGET_NOT_AUTHORIZED",D.TargetAlreadyAuthorized="TARGET_ALREADY_AUTHORIZED",D.IndexOutOfBounds="INDEX_OUT_OF_BOUNDS",D.AuthorizedAddressMismatch="AUTHORIZED_ADDRESS_MISMATCH",D.OnlyContractOwner="ONLY_CONTRACT_OWNER",D.MakerNotWhitelisted="MAKER_NOT_WHITELISTED",D.TakerNotWhitelisted="TAKER_NOT_WHITELISTED",D.AssetProxyDoesNotExist="ASSET_PROXY_DOES_NOT_EXIST",D.LengthMismatch="LENGTH_MISMATCH",D.LibBytesGreaterThanZeroLengthRequired="GREATER_THAN_ZERO_LENGTH_REQUIRED",D.LibBytesGreaterOrEqualTo4LengthRequired="GREATER_OR_EQUAL_TO_4_LENGTH_REQUIRED",D.LibBytesGreaterOrEqualTo20LengthRequired="GREATER_OR_EQUAL_TO_20_LENGTH_REQUIRED",D.LibBytesGreaterOrEqualTo32LengthRequired="GREATER_OR_EQUAL_TO_32_LENGTH_REQUIRED",D.LibBytesGreaterOrEqualToNestedBytesLengthRequired="GREATER_OR_EQUAL_TO_NESTED_BYTES_LENGTH_REQUIRED",D.LibBytesGreaterOrEqualToSourceBytesLengthRequired="GREATER_OR_EQUAL_TO_SOURCE_BYTES_LENGTH_REQUIRED",D.Erc20InsufficientBalance="ERC20_INSUFFICIENT_BALANCE",D.Erc20InsufficientAllowance="ERC20_INSUFFICIENT_ALLOWANCE",D.FeePercentageTooLarge="FEE_PERCENTAGE_TOO_LARGE",D.ValueGreaterThanZero="VALUE_GREATER_THAN_ZERO",D.InvalidMsgValue="INVALID_MSG_VALUE",D.InsufficientEthRemaining="INSUFFICIENT_ETH_REMAINING",D.Uint256Overflow="UINT256_OVERFLOW",D.Erc721ZeroToAddress="ERC721_ZERO_TO_ADDRESS",D.Erc721OwnerMismatch="ERC721_OWNER_MISMATCH",D.Erc721InvalidSpender="ERC721_INVALID_SPENDER",D.Erc721ZeroOwner="ERC721_ZERO_OWNER",D.Erc721InvalidSelector="ERC721_INVALID_SELECTOR",D.WalletError="WALLET_ERROR",D.ValidatorError="VALIDATOR_ERROR",D.InvalidFunctionSelector="INVALID_FUNCTION_SELECTOR",D.InvalidAssetData="INVALID_ASSET_DATA",D.InvalidAssetProxy="INVALID_ASSET_PROXY",D.UnregisteredAssetProxy="UNREGISTERED_ASSET_PROXY",D.TxFullyConfirmed="TX_FULLY_CONFIRMED",D.TxNotFullyConfirmed="TX_NOT_FULLY_CONFIRMED",D.TimeLockIncomplete="TIME_LOCK_INCOMPLETE",D.InvalidFreeMemoryPtr="INVALID_FREE_MEMORY_PTR",D.AuctionInvalidAmount="INVALID_AMOUNT",D.AuctionExpired="AUCTION_EXPIRED",D.AuctionNotStarted="AUCTION_NOT_STARTED",D.AuctionInvalidBeginTime="INVALID_BEGIN_TIME",D.InvalidAssetDataEnd="INVALID_ASSET_DATA_END",D.InvalidOrBlockedExchangeSelector="INVALID_OR_BLOCKED_EXCHANGE_SELECTOR",D.BalanceQueryFailed="BALANCE_QUERY_FAILED",D.AtLeastOneAddressDoesNotMeetBalanceThreshold="AT_LEAST_ONE_ADDRESS_DOES_NOT_MEET_BALANCE_THRESHOLD",D.FromLessThanToRequired="FROM_LESS_THAN_TO_REQUIRED",D.ToLessThanLengthRequired="TO_LESS_THAN_LENGTH_REQUIRED",D.InvalidApprovalSignature="INVALID_APPROVAL_SIGNATURE",D.ApprovalExpired="APPROVAL_EXPIRED",D.InvalidOrigin="INVALID_ORIGIN",D.AmountEqualToOneRequired="AMOUNT_EQUAL_TO_ONE_REQUIRED",D.BadReceiverReturnValue="BAD_RECEIVER_RETURN_VALUE",D.CannotTransferToAddressZero="CANNOT_TRANSFER_TO_ADDRESS_ZERO",D.InsufficientAllowance="INSUFFICIENT_ALLOWANCE",D.NFTNotOwnedByFromAddress="NFT_NOT_OWNED_BY_FROM_ADDRESS",D.OwnersAndIdsMustHaveSameLength="OWNERS_AND_IDS_MUST_HAVE_SAME_LENGTH",D.TokenAndValuesLengthMismatch="TOKEN_AND_VALUES_LENGTH_MISMATCH",D.TransferRejected="TRANSFER_REJECTED",D.Uint256Underflow="UINT256_UNDERFLOW",D.InvalidIdsOffset="INVALID_IDS_OFFSET",D.InvalidValuesOffset="INVALID_VALUES_OFFSET",D.InvalidDataOffset="INVALID_DATA_OFFSET",D.InvalidAssetDataLength="INVALID_ASSET_DATA_LENGTH",D.InvalidStaticCallDataOffset="INVALID_STATIC_CALL_DATA_OFFSET",D.TargetNotEven="TARGET_NOT_EVEN",D.UnexpectedStaticCallResult="UNEXPECTED_STATIC_CALL_RESULT",D.TransfersSuccessful="TRANSFERS_SUCCESSFUL",D.InsufficientFunds="INSUFFICIENT_FUNDS",D.TxAlreadyExecuted="TX_ALREADY_EXECUTED",D.DefaultTimeLockIncomplete="DEFAULT_TIME_LOCK_INCOMPLETE",D.CustomTimeLockIncomplete="CUSTOM_TIME_LOCK_INCOMPLETE",D.EqualLengthsRequired="EQUAL_LENGTHS_REQUIRED",D.OnlyCallableByWallet="ONLY_CALLABLE_BY_WALLET";var _=s.BigNumber.from(2524604400),P=function(e,t){return{name:"0x Protocol",version:"3.0.0",chainId:e.toString(10),verifyingContract:t}},M=function(e){var t;return{makerAddress:e.makerAddress.toLowerCase(),takerAddress:e.takerAddress.toLowerCase(),feeRecipientAddress:e.feeRecipientAddress.toLowerCase(),senderAddress:e.senderAddress.toLowerCase(),makerAssetAmount:e.makerAssetAmount.toString(),takerAssetAmount:e.takerAssetAmount.toString(),makerFee:e.makerFee.toString(),takerFee:e.takerFee.toString(),expirationTimeSeconds:e.expirationTimeSeconds.toString(),salt:e.salt.toString(),makerAssetData:e.makerAssetData.toLowerCase(),takerAssetData:e.takerAssetData.toLowerCase(),makerFeeAssetData:e.makerFeeAssetData.toLowerCase(),takerFeeAssetData:e.takerFeeAssetData.toLowerCase(),signature:null==(t=e.signature)?void 0:t.toLowerCase()}},V=function(){return y(new Date).toString(10)},B=function(e){function t(t,n){var a;return a=e.call(this,t||"")||this,"object"==typeof n&&null!==n&&(n.code&&(a.code=String(n.code)),n.expected&&(a.expected=!0),n.transient&&(a.transient=!0),n.cause&&(a.cause=n.cause)),Error.captureStackTrace&&Error.captureStackTrace(function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(a),a.constructor),a}return f(t,e),t}(h(Error)),U=function(e){function t(t){var n,a="UnexpectedAssetTypeError";return(n=e.call(this,"Unexpected asset type "+(null!=t?t:"unknown"),{expected:!0,code:a})||this).name=a,n}return f(t,e),t}(B),G=function(e){function t(t){var n,a="UnsupportedChainId";return(n=e.call(this,"Unexpected chainId "+t+". If you want to use that chain, please provide custom zeroex addresses",{expected:!0,code:a})||this).name=a,n}return f(t,e),t}(B),H=function(e){return s.BigNumber.from(e)},q=function(e){return e.map(H)},W=function(e){return a.hexConcat([exports.AssetProxyId.ERC20,p.defaultAbiCoder.encode(["address"],[e])])},j=function(e){a.hexDataLength(e);var t=a.hexDataSlice(e,0,4),n=a.hexDataSlice(e,4),r=p.defaultAbiCoder.decode(["address"],n)[0];return{assetProxyId:t.toLowerCase(),tokenAddress:r.toLowerCase()}},Q=function(e,t){return a.hexConcat([exports.AssetProxyId.ERC721,p.defaultAbiCoder.encode(["address","uint256"],[e,t])])},K=function(e){var t=a.hexDataSlice(e,0,4),n=a.hexDataSlice(e,4),r=p.defaultAbiCoder.decode(["address","uint256"],n),i=r[0],s=r[1];return{assetProxyId:t.toLowerCase(),tokenAddress:i.toLowerCase(),tokenId:s.toString()}},Z=function(e,t,n,r){return a.hexConcat([exports.AssetProxyId.ERC1155,p.defaultAbiCoder.encode(["address","uint256[]","uint256[]","bytes"],[e,t,n,r])])},Y=function(e){var t=a.hexDataSlice(e,0,4),n=a.hexDataSlice(e,4),r=p.defaultAbiCoder.decode(["address","uint256[]","uint256[]","bytes"],n),i=r[0],s=r[1],y=r[2],u=r[3];return{assetProxyId:t.toLowerCase(),tokenAddress:i.toLowerCase(),tokenIds:s.map((function(e){return e.toString()})),tokenValues:y.map((function(e){return e.toString()})),callbackData:u}},X=function(e,t){return a.hexConcat([exports.AssetProxyId.MultiAsset,p.defaultAbiCoder.encode(["uint256[]","bytes[]"],[e,t])])},z=function(e){var t=a.hexDataSlice(e,0,4),n=a.hexDataSlice(e,4),r=p.defaultAbiCoder.decode(["uint256[]","bytes[]"],n),i=r[0],s=r[1];return{assetProxyId:t.toLowerCase(),amounts:i.map((function(e){return e.toString()})),nestedAssetData:s.map((function(e){return $(e)}))}},J=function(e,t){switch(void 0===t&&(t=!1),e.type){case exports.SupportedTokenTypes.ERC20:return W(e.tokenAddress);case exports.SupportedTokenTypes.ERC721:return Q(e.tokenAddress,s.BigNumber.from(e.tokenId));case exports.SupportedTokenTypes.ERC1155:var n,a=e.tokens.map((function(e){return e.tokenId}));return n=e.tokens.map(t?function(e){return"1"}:function(e){return e.tokenValue}),Z(e.tokenAddress,q(a),q(n),"0x");default:throw new Error("Unsupported type "+(null==e?void 0:e.type))}},$=function(e){var t=a.hexDataSlice(e,0,4);switch(t){case exports.AssetProxyId.ERC20:return j(e);case exports.AssetProxyId.ERC721:return K(e);case exports.AssetProxyId.ERC1155:return Y(e);case exports.AssetProxyId.MultiAsset:return z(e);default:throw new Error("Unsupported AssetProxyId "+(null==t?void 0:t.type))}},ee=function(e){var t,n;switch(e.type){case exports.SupportedTokenTypes.ERC20:return e.amount;case exports.SupportedTokenTypes.ERC721:return"1";case exports.SupportedTokenTypes.ERC1155:return null!=(t=null==(n=e.tokens[0])?void 0:n.tokenValue)?t:"1";default:throw new Error("Unsupported type "+(null==e?void 0:e.type))}},te=function(e){var t;switch(e.type){case"ERC20":case"ERC721":return e;case"ERC1155":return{tokenAddress:e.tokenAddress,tokens:[{tokenId:e.tokenId,tokenValue:e.amount||"1"}],type:exports.SupportedTokenTypes.ERC1155};default:throw new U(null!=(t=null==e?void 0:e.type)?t:"Unknown")}},ne=function(e){return e.map(te)},ae=[{inputs:[{internalType:"uint256",name:"chainId",type:"uint256"}],payable:!1,stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bytes4",name:"id",type:"bytes4"},{indexed:!1,internalType:"address",name:"assetProxy",type:"address"}],name:"AssetProxyRegistered",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"makerAddress",type:"address"},{indexed:!0,internalType:"address",name:"feeRecipientAddress",type:"address"},{indexed:!1,internalType:"bytes",name:"makerAssetData",type:"bytes"},{indexed:!1,internalType:"bytes",name:"takerAssetData",type:"bytes"},{indexed:!1,internalType:"address",name:"senderAddress",type:"address"},{indexed:!0,internalType:"bytes32",name:"orderHash",type:"bytes32"}],name:"Cancel",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"makerAddress",type:"address"},{indexed:!0,internalType:"address",name:"orderSenderAddress",type:"address"},{indexed:!1,internalType:"uint256",name:"orderEpoch",type:"uint256"}],name:"CancelUpTo",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"makerAddress",type:"address"},{indexed:!0,internalType:"address",name:"feeRecipientAddress",type:"address"},{indexed:!1,internalType:"bytes",name:"makerAssetData",type:"bytes"},{indexed:!1,internalType:"bytes",name:"takerAssetData",type:"bytes"},{indexed:!1,internalType:"bytes",name:"makerFeeAssetData",type:"bytes"},{indexed:!1,internalType:"bytes",name:"takerFeeAssetData",type:"bytes"},{indexed:!0,internalType:"bytes32",name:"orderHash",type:"bytes32"},{indexed:!1,internalType:"address",name:"takerAddress",type:"address"},{indexed:!1,internalType:"address",name:"senderAddress",type:"address"},{indexed:!1,internalType:"uint256",name:"makerAssetFilledAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"takerAssetFilledAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"makerFeePaid",type:"uint256"},{indexed:!1,internalType:"uint256",name:"takerFeePaid",type:"uint256"},{indexed:!1,internalType:"uint256",name:"protocolFeePaid",type:"uint256"}],name:"Fill",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldProtocolFeeCollector",type:"address"},{indexed:!1,internalType:"address",name:"updatedProtocolFeeCollector",type:"address"}],name:"ProtocolFeeCollectorAddress",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"oldProtocolFeeMultiplier",type:"uint256"},{indexed:!1,internalType:"uint256",name:"updatedProtocolFeeMultiplier",type:"uint256"}],name:"ProtocolFeeMultiplier",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"signerAddress",type:"address"},{indexed:!0,internalType:"address",name:"validatorAddress",type:"address"},{indexed:!1,internalType:"bool",name:"isApproved",type:"bool"}],name:"SignatureValidatorApproval",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"transactionHash",type:"bytes32"}],name:"TransactionExecution",type:"event"},{constant:!0,inputs:[],name:"EIP1271_MAGIC_VALUE",outputs:[{internalType:"bytes4",name:"",type:"bytes4"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"EIP712_EXCHANGE_DOMAIN_HASH",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"}],name:"allowedValidators",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{components:[{internalType:"address",name:"makerAddress",type:"address"},{internalType:"address",name:"takerAddress",type:"address"},{internalType:"address",name:"feeRecipientAddress",type:"address"},{internalType:"address",name:"senderAddress",type:"address"},{internalType:"uint256",name:"makerAssetAmount",type:"uint256"},{internalType:"uint256",name:"takerAssetAmount",type:"uint256"},{internalType:"uint256",name:"makerFee",type:"uint256"},{internalType:"uint256",name:"takerFee",type:"uint256"},{internalType:"uint256",name:"expirationTimeSeconds",type:"uint256"},{internalType:"uint256",name:"salt",type:"uint256"},{internalType:"bytes",name:"makerAssetData",type:"bytes"},{internalType:"bytes",name:"takerAssetData",type:"bytes"},{internalType:"bytes",name:"makerFeeAssetData",type:"bytes"},{internalType:"bytes",name:"takerFeeAssetData",type:"bytes"}],internalType:"struct LibOrder.Order[]",name:"orders",type:"tuple[]"}],name:"batchCancelOrders",outputs:[],payable:!0,stateMutability:"payable",type:"function"},{constant:!1,inputs:[{components:[{internalType:"uint256",name:"salt",type:"uint256"},{internalType:"uint256",name:"expirationTimeSeconds",type:"uint256"},{internalType:"uint256",name:"gasPrice",type:"uint256"},{internalType:"address",name:"signerAddress",type:"address"},{internalType:"bytes",name:"data",type:"bytes"}],internalType:"struct LibZeroExTransaction.ZeroExTransaction[]",name:"transactions",type:"tuple[]"},{internalType:"bytes[]",name:"signatures",type:"bytes[]"}],name:"batchExecuteTransactions",outputs:[{internalType:"bytes[]",name:"",type:"bytes[]"}],payable:!0,stateMutability:"payable",type:"function"},{constant:!1,inputs:[{components:[{internalType:"address",name:"makerAddress",type:"address"},{internalType:"address",name:"takerAddress",type:"address"},{internalType:"address",name:"feeRecipientAddress",type:"address"},{internalType:"address",name:"senderAddress",type:"address"},{internalType:"uint256",name:"makerAssetAmount",type:"uint256"},{internalType:"uint256",name:"takerAssetAmount",type:"uint256"},{internalType:"uint256",name:"makerFee",type:"uint256"},{internalType:"uint256",name:"takerFee",type:"uint256"},{internalType:"uint256",name:"expirationTimeSeconds",type:"uint256"},{internalType:"uint256",name:"salt",type:"uint256"},{internalType:"bytes",name:"makerAssetData",type:"bytes"},{internalType:"bytes",name:"takerAssetData",type:"bytes"},{internalType:"bytes",name:"makerFeeAssetData",type:"bytes"},{internalType:"bytes",name:"takerFeeAssetData",type:"bytes"}],internalType:"struct LibOrder.Order[]",name:"orders",type:"tuple[]"},{internalType:"uint256[]",name:"takerAssetFillAmounts",type:"uint256[]"},{internalType:"bytes[]",name:"signatures",type:"bytes[]"}],name:"batchFillOrKillOrders",outputs:[{components:[{internalType:"uint256",name:"makerAssetFilledAmount",type:"uint256"},{internalType:"uint256",name:"takerAssetFilledAmount",type:"uint256"},{internalType:"uint256",name:"makerFeePaid",type:"uint256"},{internalType:"uint256",name:"takerFeePaid",type:"uint256"},{internalType:"uint256",name:"protocolFeePaid",type:"uint256"}],internalType:"struct LibFillResults.FillResults[]",name:"fillResults",type:"tuple[]"}],payable:!0,stateMutability:"payable",type:"function"},{constant:!1,inputs:[{components:[{internalType:"address",name:"makerAddress",type:"address"},{internalType:"address",name:"takerAddress",type:"address"},{internalType:"address",name:"feeRecipientAddress",type:"address"},{internalType:"address",name:"senderAddress",type:"address"},{internalType:"uint256",name:"makerAssetAmount",type:"uint256"},{internalType:"uint256",name:"takerAssetAmount",type:"uint256"},{internalType:"uint256",name:"makerFee",type:"uint256"},{internalType:"uint256",name:"takerFee",type:"uint256"},{internalType:"uint256",name:"expirationTimeSeconds",type:"uint256"},{internalType:"uint256",name:"salt",type:"uint256"},{internalType:"bytes",name:"makerAssetData",type:"bytes"},{internalType:"bytes",name:"takerAssetData",type:"bytes"},{internalType:"bytes",name:"makerFeeAssetData",type:"bytes"},{internalType:"bytes",name:"takerFeeAssetData",type:"bytes"}],internalType:"struct LibOrder.Order[]",name:"orders",type:"tuple[]"},{internalType:"uint256[]",name:"takerAssetFillAmounts",type:"uint256[]"},{internalType:"bytes[]",name:"signatures",type:"bytes[]"}],name:"batchFillOrders",outputs:[{components:[{internalType:"uint256",name:"makerAssetFilledAmount",type:"uint256"},{internalType:"uint256",name:"takerAssetFilledAmount",type:"uint256"},{internalType:"uint256",name:"makerFeePaid",type:"uint256"},{internalType:"uint256",name:"takerFeePaid",type:"uint256"},{internalType:"uint256",name:"protocolFeePaid",type:"uint256"}],internalType:"struct LibFillResults.FillResults[]",name:"fillResults",type:"tuple[]"}],payable:!0,stateMutability:"payable",type:"function"},{constant:!1,inputs:[{components:[{internalType:"address",name:"makerAddress",type:"address"},{internalType:"address",name:"takerAddress",type:"address"},{internalType:"address",name:"feeRecipientAddress",type:"address"},{internalType:"address",name:"senderAddress",type:"address"},{internalType:"uint256",name:"makerAssetAmount",type:"uint256"},{internalType:"uint256",name:"takerAssetAmount",type:"uint256"},{internalType:"uint256",name:"makerFee",type:"uint256"},{internalType:"uint256",name:"takerFee",type:"uint256"},{internalType:"uint256",name:"expirationTimeSeconds",type:"uint256"},{internalType:"uint256",name:"salt",type:"uint256"},{internalType:"bytes",name:"makerAssetData",type:"bytes"},{internalType:"bytes",name:"takerAssetData",type:"bytes"},{internalType:"bytes",name:"makerFeeAssetData",type:"bytes"},{internalType:"bytes",name:"takerFeeAssetData",type:"bytes"}],internalType:"struct LibOrder.Order[]",name:"orders",type:"tuple[]"},{internalType:"uint256[]",name:"takerAssetFillAmounts",type:"uint256[]"},{internalType:"bytes[]",name:"signatures",type:"bytes[]"}],name:"batchFillOrdersNoThrow",outputs:[{components:[{internalType:"uint256",name:"makerAssetFilledAmount",type:"uint256"},{internalType:"uint256",name:"takerAssetFilledAmount",type:"uint256"},{internalType:"uint256",name:"makerFeePaid",type:"uint256"},{internalType:"uint256",name:"takerFeePaid",type:"uint256"},{internalType:"uint256",name:"protocolFeePaid",type:"uint256"}],internalType:"struct LibFillResults.FillResults[]",name:"fillResults",type:"tuple[]"}],payable:!0,stateMutability:"payable",type:"function"},{constant:!1,inputs:[{components:[{internalType:"address",name:"makerAddress",type:"address"},{internalType:"address",name:"takerAddress",type:"address"},{internalType:"address",name:"feeRecipientAddress",type:"address"},{internalType:"address",name:"senderAddress",type:"address"},{internalType:"uint256",name:"makerAssetAmount",type:"uint256"},{internalType:"uint256",name:"takerAssetAmount",type:"uint256"},{internalType:"uint256",name:"makerFee",type:"uint256"},{internalType:"uint256",name:"takerFee",type:"uint256"},{internalType:"uint256",name:"expirationTimeSeconds",type:"uint256"},{internalType:"uint256",name:"salt",type:"uint256"},{internalType:"bytes",name:"makerAssetData",type:"bytes"},{internalType:"bytes",name:"takerAssetData",type:"bytes"},{internalType:"bytes",name:"makerFeeAssetData",type:"bytes"},{internalType:"bytes",name:"takerFeeAssetData",type:"bytes"}],internalType:"struct LibOrder.Order[]",name:"leftOrders",type:"tuple[]"},{components:[{internalType:"address",name:"makerAddress",type:"address"},{internalType:"address",name:"takerAddress",type:"address"},{internalType:"address",name:"feeRecipientAddress",type:"address"},{internalType:"address",name:"senderAddress",type:"address"},{internalType:"uint256",name:"makerAssetAmount",type:"uint256"},{internalType:"uint256",name:"takerAssetAmount",type:"uint256"},{internalType:"uint256",name:"makerFee",type:"uint256"},{internalType:"uint256",name:"takerFee",type:"uint256"},{internalType:"uint256",name:"expirationTimeSeconds",type:"uint256"},{internalType:"uint256",name:"salt",type:"uint256"},{internalType:"bytes",name:"makerAssetData",type:"bytes"},{internalType:"bytes",name:"takerAssetData",type:"bytes"},{internalType:"bytes",name:"makerFeeAssetData",type:"bytes"},{internalType:"bytes",name:"takerFeeAssetData",type:"bytes"}],internalType:"struct LibOrder.Order[]",name:"rightOrders",type:"tuple[]"},{internalType:"bytes[]",name:"leftSignatures",type:"bytes[]"},{internalType:"bytes[]",name:"rightSignatures",type:"bytes[]"}],name:"batchMatchOrders",outputs:[{components:[{components:[{internalType:"uint256",name:"makerAssetFilledAmount",type:"uint256"},{internalType:"uint256",name:"takerAssetFilledAmount",type:"uint256"},{internalType:"uint256",name:"makerFeePaid",type:"uint256"},{internalType:"uint256",name:"takerFeePaid",type:"uint256"},{internalType:"uint256",name:"protocolFeePaid",type:"uint256"}],internalType:"struct LibFillResults.FillResults[]",name:"left",type:"tuple[]"},{components:[{internalType:"uint256",name:"makerAssetFilledAmount",type:"uint256"},{internalType:"uint256",name:"takerAssetFilledAmount",type:"uint256"},{internalType:"uint256",name:"makerFeePaid",type:"uint256"},{internalType:"uint256",name:"takerFeePaid",type:"uint256"},{internalType:"uint256",name:"protocolFeePaid",type:"uint256"}],internalType:"struct LibFillResults.FillResults[]",name:"right",type:"tuple[]"},{internalType:"uint256",name:"profitInLeftMakerAsset",type:"uint256"},{internalType:"uint256",name:"profitInRightMakerAsset",type:"uint256"}],internalType:"struct LibFillResults.BatchMatchedFillResults",name:"batchMatchedFillResults",type:"tuple"}],payable:!0,stateMutability:"payable",type:"function"},{constant:!1,inputs:[{components:[{internalType:"address",name:"makerAddress",type:"address"},{internalType:"address",name:"takerAddress",type:"address"},{internalType:"address",name:"feeRecipientAddress",type:"address"},{internalType:"address",name:"senderAddress",type:"address"},{internalType:"uint256",name:"makerAssetAmount",type:"uint256"},{internalType:"uint256",name:"takerAssetAmount",type:"uint256"},{internalType:"uint256",name:"makerFee",type:"uint256"},{internalType:"uint256",name:"takerFee",type:"uint256"},{internalType:"uint256",name:"expirationTimeSeconds",type:"uint256"},{internalType:"uint256",name:"salt",type:"uint256"},{internalType:"bytes",name:"makerAssetData",type:"bytes"},{internalType:"bytes",name:"takerAssetData",type:"bytes"},{internalType:"bytes",name:"makerFeeAssetData",type:"bytes"},{internalType:"bytes",name:"takerFeeAssetData",type:"bytes"}],internalType:"struct LibOrder.Order[]",name:"leftOrders",type:"tuple[]"},{components:[{internalType:"address",name:"makerAddress",type:"address"},{internalType:"address",name:"takerAddress",type:"address"},{internalType:"address",name:"feeRecipientAddress",type:"address"},{internalType:"address",name:"senderAddress",type:"address"},{internalType:"uint256",name:"makerAssetAmount",type:"uint256"},{internalType:"uint256",name:"takerAssetAmount",type:"uint256"},{internalType:"uint256",name:"makerFee",type:"uint256"},{internalType:"uint256",name:"takerFee",type:"uint256"},{internalType:"uint256",name:"expirationTimeSeconds",type:"uint256"},{internalType:"uint256",name:"salt",type:"uint256"},{internalType:"bytes",name:"makerAssetData",type:"bytes"},{internalType:"bytes",name:"takerAssetData",type:"bytes"},{internalType:"bytes",name:"makerFeeAssetData",type:"bytes"},{internalType:"bytes",name:"takerFeeAssetData",type:"bytes"}],internalType:"struct LibOrder.Order[]",name:"rightOrders",type:"tuple[]"},{internalType:"bytes[]",name:"leftSignatures",type:"bytes[]"},{internalType:"bytes[]",name:"rightSignatures",type:"bytes[]"}],name:"batchMatchOrdersWithMaximalFill",outputs:[{components:[{components:[{internalType:"uint256",name:"makerAssetFilledAmount",type:"uint256"},{internalType:"uint256",name:"takerAssetFilledAmount",type:"uint256"},{internalType:"uint256",name:"makerFeePaid",type:"uint256"},{internalType:"uint256",name:"takerFeePaid",type:"uint256"},{internalType:"uint256",name:"protocolFeePaid",type:"uint256"}],internalType:"struct LibFillResults.FillResults[]",name:"left",type:"tuple[]"},{components:[{internalType:"uint256",name:"makerAssetFilledAmount",type:"uint256"},{internalType:"uint256",name:"takerAssetFilledAmount",type:"uint256"},{internalType:"uint256",name:"makerFeePaid",type:"uint256"},{internalType:"uint256",name:"takerFeePaid",type:"uint256"},{internalType:"uint256",name:"protocolFeePaid",type:"uint256"}],internalType:"struct LibFillResults.FillResults[]",name:"right",type:"tuple[]"},{internalType:"uint256",name:"profitInLeftMakerAsset",type:"uint256"},{internalType:"uint256",name:"profitInRightMakerAsset",type:"uint256"}],internalType:"struct LibFillResults.BatchMatchedFillResults",name:"batchMatchedFillResults",type:"tuple"}],payable:!0,stateMutability:"payable",type:"function"},{constant:!1,inputs:[{components:[{internalType:"address",name:"makerAddress",type:"address"},{internalType:"address",name:"takerAddress",type:"address"},{internalType:"address",name:"feeRecipientAddress",type:"address"},{internalType:"address",name:"senderAddress",type:"address"},{internalType:"uint256",name:"makerAssetAmount",type:"uint256"},{internalType:"uint256",name:"takerAssetAmount",type:"uint256"},{internalType:"uint256",name:"makerFee",type:"uint256"},{internalType:"uint256",name:"takerFee",type:"uint256"},{internalType:"uint256",name:"expirationTimeSeconds",type:"uint256"},{internalType:"uint256",name:"salt",type:"uint256"},{internalType:"bytes",name:"makerAssetData",type:"bytes"},{internalType:"bytes",name:"takerAssetData",type:"bytes"},{internalType:"bytes",name:"makerFeeAssetData",type:"bytes"},{internalType:"bytes",name:"takerFeeAssetData",type:"bytes"}],internalType:"struct LibOrder.Order",name:"order",type:"tuple"}],name:"cancelOrder",outputs:[],payable:!0,stateMutability:"payable",type:"function"},{constant:!1,inputs:[{internalType:"uint256",name:"targetOrderEpoch",type:"uint256"}],name:"cancelOrdersUpTo",outputs:[],payable:!0,stateMutability:"payable",type:"function"},{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"cancelled",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"currentContextAddress",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[],name:"detachProtocolFeeCollector",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!1,inputs:[{components:[{internalType:"uint256",name:"salt",type:"uint256"},{internalType:"uint256",name:"expirationTimeSeconds",type:"uint256"},{internalType:"uint256",name:"gasPrice",type:"uint256"},{internalType:"address",name:"signerAddress",type:"address"},{internalType:"bytes",name:"data",type:"bytes"}],internalType:"struct LibZeroExTransaction.ZeroExTransaction",name:"transaction",type:"tuple"},{internalType:"bytes",name:"signature",type:"bytes"}],name:"executeTransaction",outputs:[{internalType:"bytes",name:"",type:"bytes"}],payable:!0,stateMutability:"payable",type:"function"},{constant:!1,inputs:[{components:[{internalType:"address",name:"makerAddress",type:"address"},{internalType:"address",name:"takerAddress",type:"address"},{internalType:"address",name:"feeRecipientAddress",type:"address"},{internalType:"address",name:"senderAddress",type:"address"},{internalType:"uint256",name:"makerAssetAmount",type:"uint256"},{internalType:"uint256",name:"takerAssetAmount",type:"uint256"},{internalType:"uint256",name:"makerFee",type:"uint256"},{internalType:"uint256",name:"takerFee",type:"uint256"},{internalType:"uint256",name:"expirationTimeSeconds",type:"uint256"},{internalType:"uint256",name:"salt",type:"uint256"},{internalType:"bytes",name:"makerAssetData",type:"bytes"},{internalType:"bytes",name:"takerAssetData",type:"bytes"},{internalType:"bytes",name:"makerFeeAssetData",type:"bytes"},{internalType:"bytes",name:"takerFeeAssetData",type:"bytes"}],internalType:"struct LibOrder.Order",name:"order",type:"tuple"},{internalType:"uint256",name:"takerAssetFillAmount",type:"uint256"},{internalType:"bytes",name:"signature",type:"bytes"}],name:"fillOrKillOrder",outputs:[{components:[{internalType:"uint256",name:"makerAssetFilledAmount",type:"uint256"},{internalType:"uint256",name:"takerAssetFilledAmount",type:"uint256"},{internalType:"uint256",name:"makerFeePaid",type:"uint256"},{internalType:"uint256",name:"takerFeePaid",type:"uint256"},{internalType:"uint256",name:"protocolFeePaid",type:"uint256"}],internalType:"struct LibFillResults.FillResults",name:"fillResults",type:"tuple"}],payable:!0,stateMutability:"payable",type:"function"},{constant:!1,inputs:[{components:[{internalType:"address",name:"makerAddress",type:"address"},{internalType:"address",name:"takerAddress",type:"address"},{internalType:"address",name:"feeRecipientAddress",type:"address"},{internalType:"address",name:"senderAddress",type:"address"},{internalType:"uint256",name:"makerAssetAmount",type:"uint256"},{internalType:"uint256",name:"takerAssetAmount",type:"uint256"},{internalType:"uint256",name:"makerFee",type:"uint256"},{internalType:"uint256",name:"takerFee",type:"uint256"},{internalType:"uint256",name:"expirationTimeSeconds",type:"uint256"},{internalType:"uint256",name:"salt",type:"uint256"},{internalType:"bytes",name:"makerAssetData",type:"bytes"},{internalType:"bytes",name:"takerAssetData",type:"bytes"},{internalType:"bytes",name:"makerFeeAssetData",type:"bytes"},{internalType:"bytes",name:"takerFeeAssetData",type:"bytes"}],internalType:"struct LibOrder.Order",name:"order",type:"tuple"},{internalType:"uint256",name:"takerAssetFillAmount",type:"uint256"},{internalType:"bytes",name:"signature",type:"bytes"}],name:"fillOrder",outputs:[{components:[{internalType:"uint256",name:"makerAssetFilledAmount",type:"uint256"},{internalType:"uint256",name:"takerAssetFilledAmount",type:"uint256"},{internalType:"uint256",name:"makerFeePaid",type:"uint256"},{internalType:"uint256",name:"takerFeePaid",type:"uint256"},{internalType:"uint256",name:"protocolFeePaid",type:"uint256"}],internalType:"struct LibFillResults.FillResults",name:"fillResults",type:"tuple"}],payable:!0,stateMutability:"payable",type:"function"},{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"filled",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{internalType:"bytes4",name:"assetProxyId",type:"bytes4"}],name:"getAssetProxy",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{components:[{internalType:"address",name:"makerAddress",type:"address"},{internalType:"address",name:"takerAddress",type:"address"},{internalType:"address",name:"feeRecipientAddress",type:"address"},{internalType:"address",name:"senderAddress",type:"address"},{internalType:"uint256",name:"makerAssetAmount",type:"uint256"},{internalType:"uint256",name:"takerAssetAmount",type:"uint256"},{internalType:"uint256",name:"makerFee",type:"uint256"},{internalType:"uint256",name:"takerFee",type:"uint256"},{internalType:"uint256",name:"expirationTimeSeconds",type:"uint256"},{internalType:"uint256",name:"salt",type:"uint256"},{internalType:"bytes",name:"makerAssetData",type:"bytes"},{internalType:"bytes",name:"takerAssetData",type:"bytes"},{internalType:"bytes",name:"makerFeeAssetData",type:"bytes"},{internalType:"bytes",name:"takerFeeAssetData",type:"bytes"}],internalType:"struct LibOrder.Order",name:"order",type:"tuple"}],name:"getOrderInfo",outputs:[{components:[{internalType:"uint8",name:"orderStatus",type:"uint8"},{internalType:"bytes32",name:"orderHash",type:"bytes32"},{internalType:"uint256",name:"orderTakerAssetFilledAmount",type:"uint256"}],internalType:"struct LibOrder.OrderInfo",name:"orderInfo",type:"tuple"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{internalType:"bytes32",name:"hash",type:"bytes32"},{internalType:"address",name:"signerAddress",type:"address"},{internalType:"bytes",name:"signature",type:"bytes"}],name:"isValidHashSignature",outputs:[{internalType:"bool",name:"isValid",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{components:[{internalType:"address",name:"makerAddress",type:"address"},{internalType:"address",name:"takerAddress",type:"address"},{internalType:"address",name:"feeRecipientAddress",type:"address"},{internalType:"address",name:"senderAddress",type:"address"},{internalType:"uint256",name:"makerAssetAmount",type:"uint256"},{internalType:"uint256",name:"takerAssetAmount",type:"uint256"},{internalType:"uint256",name:"makerFee",type:"uint256"},{internalType:"uint256",name:"takerFee",type:"uint256"},{internalType:"uint256",name:"expirationTimeSeconds",type:"uint256"},{internalType:"uint256",name:"salt",type:"uint256"},{internalType:"bytes",name:"makerAssetData",type:"bytes"},{internalType:"bytes",name:"takerAssetData",type:"bytes"},{internalType:"bytes",name:"makerFeeAssetData",type:"bytes"},{internalType:"bytes",name:"takerFeeAssetData",type:"bytes"}],internalType:"struct LibOrder.Order",name:"order",type:"tuple"},{internalType:"bytes",name:"signature",type:"bytes"}],name:"isValidOrderSignature",outputs:[{internalType:"bool",name:"isValid",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{components:[{internalType:"uint256",name:"salt",type:"uint256"},{internalType:"uint256",name:"expirationTimeSeconds",type:"uint256"},{internalType:"uint256",name:"gasPrice",type:"uint256"},{internalType:"address",name:"signerAddress",type:"address"},{internalType:"bytes",name:"data",type:"bytes"}],internalType:"struct LibZeroExTransaction.ZeroExTransaction",name:"transaction",type:"tuple"},{internalType:"bytes",name:"signature",type:"bytes"}],name:"isValidTransactionSignature",outputs:[{internalType:"bool",name:"isValid",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{components:[{internalType:"address",name:"makerAddress",type:"address"},{internalType:"address",name:"takerAddress",type:"address"},{internalType:"address",name:"feeRecipientAddress",type:"address"},{internalType:"address",name:"senderAddress",type:"address"},{internalType:"uint256",name:"makerAssetAmount",type:"uint256"},{internalType:"uint256",name:"takerAssetAmount",type:"uint256"},{internalType:"uint256",name:"makerFee",type:"uint256"},{internalType:"uint256",name:"takerFee",type:"uint256"},{internalType:"uint256",name:"expirationTimeSeconds",type:"uint256"},{internalType:"uint256",name:"salt",type:"uint256"},{internalType:"bytes",name:"makerAssetData",type:"bytes"},{internalType:"bytes",name:"takerAssetData",type:"bytes"},{internalType:"bytes",name:"makerFeeAssetData",type:"bytes"},{internalType:"bytes",name:"takerFeeAssetData",type:"bytes"}],internalType:"struct LibOrder.Order[]",name:"orders",type:"tuple[]"},{internalType:"uint256",name:"makerAssetFillAmount",type:"uint256"},{internalType:"bytes[]",name:"signatures",type:"bytes[]"}],name:"marketBuyOrdersFillOrKill",outputs:[{components:[{internalType:"uint256",name:"makerAssetFilledAmount",type:"uint256"},{internalType:"uint256",name:"takerAssetFilledAmount",type:"uint256"},{internalType:"uint256",name:"makerFeePaid",type:"uint256"},{internalType:"uint256",name:"takerFeePaid",type:"uint256"},{internalType:"uint256",name:"protocolFeePaid",type:"uint256"}],internalType:"struct LibFillResults.FillResults",name:"fillResults",type:"tuple"}],payable:!0,stateMutability:"payable",type:"function"},{constant:!1,inputs:[{components:[{internalType:"address",name:"makerAddress",type:"address"},{internalType:"address",name:"takerAddress",type:"address"},{internalType:"address",name:"feeRecipientAddress",type:"address"},{internalType:"address",name:"senderAddress",type:"address"},{internalType:"uint256",name:"makerAssetAmount",type:"uint256"},{internalType:"uint256",name:"takerAssetAmount",type:"uint256"},{internalType:"uint256",name:"makerFee",type:"uint256"},{internalType:"uint256",name:"takerFee",type:"uint256"},{internalType:"uint256",name:"expirationTimeSeconds",type:"uint256"},{internalType:"uint256",name:"salt",type:"uint256"},{internalType:"bytes",name:"makerAssetData",type:"bytes"},{internalType:"bytes",name:"takerAssetData",type:"bytes"},{internalType:"bytes",name:"makerFeeAssetData",type:"bytes"},{internalType:"bytes",name:"takerFeeAssetData",type:"bytes"}],internalType:"struct LibOrder.Order[]",name:"orders",type:"tuple[]"},{internalType:"uint256",name:"makerAssetFillAmount",type:"uint256"},{internalType:"bytes[]",name:"signatures",type:"bytes[]"}],name:"marketBuyOrdersNoThrow",outputs:[{components:[{internalType:"uint256",name:"makerAssetFilledAmount",type:"uint256"},{internalType:"uint256",name:"takerAssetFilledAmount",type:"uint256"},{internalType:"uint256",name:"makerFeePaid",type:"uint256"},{internalType:"uint256",name:"takerFeePaid",type:"uint256"},{internalType:"uint256",name:"protocolFeePaid",type:"uint256"}],internalType:"struct LibFillResults.FillResults",name:"fillResults",type:"tuple"}],payable:!0,stateMutability:"payable",type:"function"},{constant:!1,inputs:[{components:[{internalType:"address",name:"makerAddress",type:"address"},{internalType:"address",name:"takerAddress",type:"address"},{internalType:"address",name:"feeRecipientAddress",type:"address"},{internalType:"address",name:"senderAddress",type:"address"},{internalType:"uint256",name:"makerAssetAmount",type:"uint256"},{internalType:"uint256",name:"takerAssetAmount",type:"uint256"},{internalType:"uint256",name:"makerFee",type:"uint256"},{internalType:"uint256",name:"takerFee",type:"uint256"},{internalType:"uint256",name:"expirationTimeSeconds",type:"uint256"},{internalType:"uint256",name:"salt",type:"uint256"},{internalType:"bytes",name:"makerAssetData",type:"bytes"},{internalType:"bytes",name:"takerAssetData",type:"bytes"},{internalType:"bytes",name:"makerFeeAssetData",type:"bytes"},{internalType:"bytes",name:"takerFeeAssetData",type:"bytes"}],internalType:"struct LibOrder.Order[]",name:"orders",type:"tuple[]"},{internalType:"uint256",name:"takerAssetFillAmount",type:"uint256"},{internalType:"bytes[]",name:"signatures",type:"bytes[]"}],name:"marketSellOrdersFillOrKill",outputs:[{components:[{internalType:"uint256",name:"makerAssetFilledAmount",type:"uint256"},{internalType:"uint256",name:"takerAssetFilledAmount",type:"uint256"},{internalType:"uint256",name:"makerFeePaid",type:"uint256"},{internalType:"uint256",name:"takerFeePaid",type:"uint256"},{internalType:"uint256",name:"protocolFeePaid",type:"uint256"}],internalType:"struct LibFillResults.FillResults",name:"fillResults",type:"tuple"}],payable:!0,stateMutability:"payable",type:"function"},{constant:!1,inputs:[{components:[{internalType:"address",name:"makerAddress",type:"address"},{internalType:"address",name:"takerAddress",type:"address"},{internalType:"address",name:"feeRecipientAddress",type:"address"},{internalType:"address",name:"senderAddress",type:"address"},{internalType:"uint256",name:"makerAssetAmount",type:"uint256"},{internalType:"uint256",name:"takerAssetAmount",type:"uint256"},{internalType:"uint256",name:"makerFee",type:"uint256"},{internalType:"uint256",name:"takerFee",type:"uint256"},{internalType:"uint256",name:"expirationTimeSeconds",type:"uint256"},{internalType:"uint256",name:"salt",type:"uint256"},{internalType:"bytes",name:"makerAssetData",type:"bytes"},{internalType:"bytes",name:"takerAssetData",type:"bytes"},{internalType:"bytes",name:"makerFeeAssetData",type:"bytes"},{internalType:"bytes",name:"takerFeeAssetData",type:"bytes"}],internalType:"struct LibOrder.Order[]",name:"orders",type:"tuple[]"},{internalType:"uint256",name:"takerAssetFillAmount",type:"uint256"},{internalType:"bytes[]",name:"signatures",type:"bytes[]"}],name:"marketSellOrdersNoThrow",outputs:[{components:[{internalType:"uint256",name:"makerAssetFilledAmount",type:"uint256"},{internalType:"uint256",name:"takerAssetFilledAmount",type:"uint256"},{internalType:"uint256",name:"makerFeePaid",type:"uint256"},{internalType:"uint256",name:"takerFeePaid",type:"uint256"},{internalType:"uint256",name:"protocolFeePaid",type:"uint256"}],internalType:"struct LibFillResults.FillResults",name:"fillResults",type:"tuple"}],payable:!0,stateMutability:"payable",type:"function"},{constant:!1,inputs:[{components:[{internalType:"address",name:"makerAddress",type:"address"},{internalType:"address",name:"takerAddress",type:"address"},{internalType:"address",name:"feeRecipientAddress",type:"address"},{internalType:"address",name:"senderAddress",type:"address"},{internalType:"uint256",name:"makerAssetAmount",type:"uint256"},{internalType:"uint256",name:"takerAssetAmount",type:"uint256"},{internalType:"uint256",name:"makerFee",type:"uint256"},{internalType:"uint256",name:"takerFee",type:"uint256"},{internalType:"uint256",name:"expirationTimeSeconds",type:"uint256"},{internalType:"uint256",name:"salt",type:"uint256"},{internalType:"bytes",name:"makerAssetData",type:"bytes"},{internalType:"bytes",name:"takerAssetData",type:"bytes"},{internalType:"bytes",name:"makerFeeAssetData",type:"bytes"},{internalType:"bytes",name:"takerFeeAssetData",type:"bytes"}],internalType:"struct LibOrder.Order",name:"leftOrder",type:"tuple"},{components:[{internalType:"address",name:"makerAddress",type:"address"},{internalType:"address",name:"takerAddress",type:"address"},{internalType:"address",name:"feeRecipientAddress",type:"address"},{internalType:"address",name:"senderAddress",type:"address"},{internalType:"uint256",name:"makerAssetAmount",type:"uint256"},{internalType:"uint256",name:"takerAssetAmount",type:"uint256"},{internalType:"uint256",name:"makerFee",type:"uint256"},{internalType:"uint256",name:"takerFee",type:"uint256"},{internalType:"uint256",name:"expirationTimeSeconds",type:"uint256"},{internalType:"uint256",name:"salt",type:"uint256"},{internalType:"bytes",name:"makerAssetData",type:"bytes"},{internalType:"bytes",name:"takerAssetData",type:"bytes"},{internalType:"bytes",name:"makerFeeAssetData",type:"bytes"},{internalType:"bytes",name:"takerFeeAssetData",type:"bytes"}],internalType:"struct LibOrder.Order",name:"rightOrder",type:"tuple"},{internalType:"bytes",name:"leftSignature",type:"bytes"},{internalType:"bytes",name:"rightSignature",type:"bytes"}],name:"matchOrders",outputs:[{components:[{components:[{internalType:"uint256",name:"makerAssetFilledAmount",type:"uint256"},{internalType:"uint256",name:"takerAssetFilledAmount",type:"uint256"},{internalType:"uint256",name:"makerFeePaid",type:"uint256"},{internalType:"uint256",name:"takerFeePaid",type:"uint256"},{internalType:"uint256",name:"protocolFeePaid",type:"uint256"}],internalType:"struct LibFillResults.FillResults",name:"left",type:"tuple"},{components:[{internalType:"uint256",name:"makerAssetFilledAmount",type:"uint256"},{internalType:"uint256",name:"takerAssetFilledAmount",type:"uint256"},{internalType:"uint256",name:"makerFeePaid",type:"uint256"},{internalType:"uint256",name:"takerFeePaid",type:"uint256"},{internalType:"uint256",name:"protocolFeePaid",type:"uint256"}],internalType:"struct LibFillResults.FillResults",name:"right",type:"tuple"},{internalType:"uint256",name:"profitInLeftMakerAsset",type:"uint256"},{internalType:"uint256",name:"profitInRightMakerAsset",type:"uint256"}],internalType:"struct LibFillResults.MatchedFillResults",name:"matchedFillResults",type:"tuple"}],payable:!0,stateMutability:"payable",type:"function"},{constant:!1,inputs:[{components:[{internalType:"address",name:"makerAddress",type:"address"},{internalType:"address",name:"takerAddress",type:"address"},{internalType:"address",name:"feeRecipientAddress",type:"address"},{internalType:"address",name:"senderAddress",type:"address"},{internalType:"uint256",name:"makerAssetAmount",type:"uint256"},{internalType:"uint256",name:"takerAssetAmount",type:"uint256"},{internalType:"uint256",name:"makerFee",type:"uint256"},{internalType:"uint256",name:"takerFee",type:"uint256"},{internalType:"uint256",name:"expirationTimeSeconds",type:"uint256"},{internalType:"uint256",name:"salt",type:"uint256"},{internalType:"bytes",name:"makerAssetData",type:"bytes"},{internalType:"bytes",name:"takerAssetData",type:"bytes"},{internalType:"bytes",name:"makerFeeAssetData",type:"bytes"},{internalType:"bytes",name:"takerFeeAssetData",type:"bytes"}],internalType:"struct LibOrder.Order",name:"leftOrder",type:"tuple"},{components:[{internalType:"address",name:"makerAddress",type:"address"},{internalType:"address",name:"takerAddress",type:"address"},{internalType:"address",name:"feeRecipientAddress",type:"address"},{internalType:"address",name:"senderAddress",type:"address"},{internalType:"uint256",name:"makerAssetAmount",type:"uint256"},{internalType:"uint256",name:"takerAssetAmount",type:"uint256"},{internalType:"uint256",name:"makerFee",type:"uint256"},{internalType:"uint256",name:"takerFee",type:"uint256"},{internalType:"uint256",name:"expirationTimeSeconds",type:"uint256"},{internalType:"uint256",name:"salt",type:"uint256"},{internalType:"bytes",name:"makerAssetData",type:"bytes"},{internalType:"bytes",name:"takerAssetData",type:"bytes"},{internalType:"bytes",name:"makerFeeAssetData",type:"bytes"},{internalType:"bytes",name:"takerFeeAssetData",type:"bytes"}],internalType:"struct LibOrder.Order",name:"rightOrder",type:"tuple"},{internalType:"bytes",name:"leftSignature",type:"bytes"},{internalType:"bytes",name:"rightSignature",type:"bytes"}],name:"matchOrdersWithMaximalFill",outputs:[{components:[{components:[{internalType:"uint256",name:"makerAssetFilledAmount",type:"uint256"},{internalType:"uint256",name:"takerAssetFilledAmount",type:"uint256"},{internalType:"uint256",name:"makerFeePaid",type:"uint256"},{internalType:"uint256",name:"takerFeePaid",type:"uint256"},{internalType:"uint256",name:"protocolFeePaid",type:"uint256"}],internalType:"struct LibFillResults.FillResults",name:"left",type:"tuple"},{components:[{internalType:"uint256",name:"makerAssetFilledAmount",type:"uint256"},{internalType:"uint256",name:"takerAssetFilledAmount",type:"uint256"},{internalType:"uint256",name:"makerFeePaid",type:"uint256"},{internalType:"uint256",name:"takerFeePaid",type:"uint256"},{internalType:"uint256",name:"protocolFeePaid",type:"uint256"}],internalType:"struct LibFillResults.FillResults",name:"right",type:"tuple"},{internalType:"uint256",name:"profitInLeftMakerAsset",type:"uint256"},{internalType:"uint256",name:"profitInRightMakerAsset",type:"uint256"}],internalType:"struct LibFillResults.MatchedFillResults",name:"matchedFillResults",type:"tuple"}],payable:!0,stateMutability:"payable",type:"function"},{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"}],name:"orderEpoch",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{internalType:"bytes32",name:"hash",type:"bytes32"}],name:"preSign",outputs:[],payable:!0,stateMutability:"payable",type:"function"},{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"},{internalType:"address",name:"",type:"address"}],name:"preSigned",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"protocolFeeCollector",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"protocolFeeMultiplier",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{internalType:"address",name:"assetProxy",type:"address"}],name:"registerAssetProxy",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!1,inputs:[{internalType:"address",name:"updatedProtocolFeeCollector",type:"address"}],name:"setProtocolFeeCollectorAddress",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!1,inputs:[{internalType:"uint256",name:"updatedProtocolFeeMultiplier",type:"uint256"}],name:"setProtocolFeeMultiplier",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!1,inputs:[{internalType:"address",name:"validatorAddress",type:"address"},{internalType:"bool",name:"approval",type:"bool"}],name:"setSignatureValidatorApproval",outputs:[],payable:!0,stateMutability:"payable",type:"function"},{constant:!1,inputs:[{internalType:"bytes[]",name:"assetData",type:"bytes[]"},{internalType:"address[]",name:"fromAddresses",type:"address[]"},{internalType:"address[]",name:"toAddresses",type:"address[]"},{internalType:"uint256[]",name:"amounts",type:"uint256[]"}],name:"simulateDispatchTransferFromCalls",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"transactionsExecuted",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"}],re=function(){function e(){}return e.createInterface=function(){return new u.utils.Interface(ae)},e.connect=function(e,t){return new u.Contract(e,ae,t)},e}();re.abi=ae;var ie=[{inputs:[{internalType:"address",name:"_exchange",type:"address"},{internalType:"address",name:"_exchangeV2",type:"address"},{internalType:"address",name:"_weth",type:"address"}],payable:!1,stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},{payable:!0,stateMutability:"payable",type:"fallback"},{constant:!0,inputs:[],name:"ERC1155_BATCH_RECEIVED",outputs:[{internalType:"bytes4",name:"",type:"bytes4"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"ERC1155_RECEIVED",outputs:[{internalType:"bytes4",name:"",type:"bytes4"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"EXCHANGE_V2_ORDER_ID",outputs:[{internalType:"bytes4",name:"",type:"bytes4"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{internalType:"bytes",name:"assetData",type:"bytes"}],name:"approveMakerAssetProxy",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!1,inputs:[{components:[{internalType:"address",name:"makerAddress",type:"address"},{internalType:"address",name:"takerAddress",type:"address"},{internalType:"address",name:"feeRecipientAddress",type:"address"},{internalType:"address",name:"senderAddress",type:"address"},{internalType:"uint256",name:"makerAssetAmount",type:"uint256"},{internalType:"uint256",name:"takerAssetAmount",type:"uint256"},{internalType:"uint256",name:"makerFee",type:"uint256"},{internalType:"uint256",name:"takerFee",type:"uint256"},{internalType:"uint256",name:"expirationTimeSeconds",type:"uint256"},{internalType:"uint256",name:"salt",type:"uint256"},{internalType:"bytes",name:"makerAssetData",type:"bytes"},{internalType:"bytes",name:"takerAssetData",type:"bytes"},{internalType:"bytes",name:"makerFeeAssetData",type:"bytes"},{internalType:"bytes",name:"takerFeeAssetData",type:"bytes"}],internalType:"struct LibOrder.Order[]",name:"orders",type:"tuple[]"},{internalType:"uint256",name:"makerAssetBuyAmount",type:"uint256"},{internalType:"bytes[]",name:"signatures",type:"bytes[]"},{internalType:"uint256[]",name:"ethFeeAmounts",type:"uint256[]"},{internalType:"address payable[]",name:"feeRecipients",type:"address[]"}],name:"marketBuyOrdersWithEth",outputs:[{internalType:"uint256",name:"wethSpentAmount",type:"uint256"},{internalType:"uint256",name:"makerAssetAcquiredAmount",type:"uint256"}],payable:!0,stateMutability:"payable",type:"function"},{constant:!1,inputs:[{components:[{internalType:"address",name:"makerAddress",type:"address"},{internalType:"address",name:"takerAddress",type:"address"},{internalType:"address",name:"feeRecipientAddress",type:"address"},{internalType:"address",name:"senderAddress",type:"address"},{internalType:"uint256",name:"makerAssetAmount",type:"uint256"},{internalType:"uint256",name:"takerAssetAmount",type:"uint256"},{internalType:"uint256",name:"makerFee",type:"uint256"},{internalType:"uint256",name:"takerFee",type:"uint256"},{internalType:"uint256",name:"expirationTimeSeconds",type:"uint256"},{internalType:"uint256",name:"salt",type:"uint256"},{internalType:"bytes",name:"makerAssetData",type:"bytes"},{internalType:"bytes",name:"takerAssetData",type:"bytes"},{internalType:"bytes",name:"makerFeeAssetData",type:"bytes"},{internalType:"bytes",name:"takerFeeAssetData",type:"bytes"}],internalType:"struct LibOrder.Order[]",name:"orders",type:"tuple[]"},{internalType:"uint256",name:"ethSellAmount",type:"uint256"},{internalType:"bytes[]",name:"signatures",type:"bytes[]"},{internalType:"uint256[]",name:"ethFeeAmounts",type:"uint256[]"},{internalType:"address payable[]",name:"feeRecipients",type:"address[]"}],name:"marketSellAmountWithEth",outputs:[{internalType:"uint256",name:"wethSpentAmount",type:"uint256"},{internalType:"uint256",name:"makerAssetAcquiredAmount",type:"uint256"}],payable:!0,stateMutability:"payable",type:"function"},{constant:!1,inputs:[{components:[{internalType:"address",name:"makerAddress",type:"address"},{internalType:"address",name:"takerAddress",type:"address"},{internalType:"address",name:"feeRecipientAddress",type:"address"},{internalType:"address",name:"senderAddress",type:"address"},{internalType:"uint256",name:"makerAssetAmount",type:"uint256"},{internalType:"uint256",name:"takerAssetAmount",type:"uint256"},{internalType:"uint256",name:"makerFee",type:"uint256"},{internalType:"uint256",name:"takerFee",type:"uint256"},{internalType:"uint256",name:"expirationTimeSeconds",type:"uint256"},{internalType:"uint256",name:"salt",type:"uint256"},{internalType:"bytes",name:"makerAssetData",type:"bytes"},{internalType:"bytes",name:"takerAssetData",type:"bytes"},{internalType:"bytes",name:"makerFeeAssetData",type:"bytes"},{internalType:"bytes",name:"takerFeeAssetData",type:"bytes"}],internalType:"struct LibOrder.Order[]",name:"orders",type:"tuple[]"},{internalType:"bytes[]",name:"signatures",type:"bytes[]"},{internalType:"uint256[]",name:"ethFeeAmounts",type:"uint256[]"},{internalType:"address payable[]",name:"feeRecipients",type:"address[]"}],name:"marketSellOrdersWithEth",outputs:[{internalType:"uint256",name:"wethSpentAmount",type:"uint256"},{internalType:"uint256",name:"makerAssetAcquiredAmount",type:"uint256"}],payable:!0,stateMutability:"payable",type:"function"},{constant:!1,inputs:[{internalType:"address",name:"operator",type:"address"},{internalType:"address",name:"from",type:"address"},{internalType:"uint256[]",name:"ids",type:"uint256[]"},{internalType:"uint256[]",name:"values",type:"uint256[]"},{internalType:"bytes",name:"data",type:"bytes"}],name:"onERC1155BatchReceived",outputs:[{internalType:"bytes4",name:"",type:"bytes4"}],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!1,inputs:[{internalType:"address",name:"operator",type:"address"},{internalType:"address",name:"from",type:"address"},{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"data",type:"bytes"}],name:"onERC1155Received",outputs:[{internalType:"bytes4",name:"",type:"bytes4"}],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!1,inputs:[{internalType:"bytes",name:"assetData",type:"bytes"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"withdrawAsset",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"}],se=function(){function e(){}return e.createInterface=function(){return new u.utils.Interface(ie)},e.connect=function(e,t){return new u.Contract(e,ie,t)},e}();se.abi=ie;var pe=[{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"maker",type:"address"},{indexed:!1,internalType:"uint256",name:"nonce",type:"uint256"}],name:"ERC1155OrderCancelled",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"enum LibNFTOrder.TradeDirection",name:"direction",type:"uint8"},{indexed:!1,internalType:"address",name:"maker",type:"address"},{indexed:!1,internalType:"address",name:"taker",type:"address"},{indexed:!1,internalType:"uint256",name:"nonce",type:"uint256"},{indexed:!1,internalType:"contract IERC20TokenV06",name:"erc20Token",type:"address"},{indexed:!1,internalType:"uint256",name:"erc20FillAmount",type:"uint256"},{indexed:!1,internalType:"contract IERC1155Token",name:"erc1155Token",type:"address"},{indexed:!1,internalType:"uint256",name:"erc1155TokenId",type:"uint256"},{indexed:!1,internalType:"uint128",name:"erc1155FillAmount",type:"uint128"},{indexed:!1,internalType:"address",name:"matcher",type:"address"}],name:"ERC1155OrderFilled",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"enum LibNFTOrder.TradeDirection",name:"direction",type:"uint8"},{indexed:!1,internalType:"address",name:"maker",type:"address"},{indexed:!1,internalType:"address",name:"taker",type:"address"},{indexed:!1,internalType:"uint256",name:"expiry",type:"uint256"},{indexed:!1,internalType:"uint256",name:"nonce",type:"uint256"},{indexed:!1,internalType:"contract IERC20TokenV06",name:"erc20Token",type:"address"},{indexed:!1,internalType:"uint256",name:"erc20TokenAmount",type:"uint256"},{components:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"feeData",type:"bytes"}],indexed:!1,internalType:"struct LibNFTOrder.Fee[]",name:"fees",type:"tuple[]"},{indexed:!1,internalType:"contract IERC1155Token",name:"erc1155Token",type:"address"},{indexed:!1,internalType:"uint256",name:"erc1155TokenId",type:"uint256"},{components:[{internalType:"contract IPropertyValidator",name:"propertyValidator",type:"address"},{internalType:"bytes",name:"propertyData",type:"bytes"}],indexed:!1,internalType:"struct LibNFTOrder.Property[]",name:"erc1155TokenProperties",type:"tuple[]"},{indexed:!1,internalType:"uint128",name:"erc1155TokenAmount",type:"uint128"}],name:"ERC1155OrderPreSigned",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"maker",type:"address"},{indexed:!1,internalType:"uint256",name:"nonce",type:"uint256"}],name:"ERC721OrderCancelled",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"enum LibNFTOrder.TradeDirection",name:"direction",type:"uint8"},{indexed:!1,internalType:"address",name:"maker",type:"address"},{indexed:!1,internalType:"address",name:"taker",type:"address"},{indexed:!1,internalType:"uint256",name:"nonce",type:"uint256"},{indexed:!1,internalType:"contract IERC20TokenV06",name:"erc20Token",type:"address"},{indexed:!1,internalType:"uint256",name:"erc20TokenAmount",type:"uint256"},{indexed:!1,internalType:"contract IERC721Token",name:"erc721Token",type:"address"},{indexed:!1,internalType:"uint256",name:"erc721TokenId",type:"uint256"},{indexed:!1,internalType:"address",name:"matcher",type:"address"}],name:"ERC721OrderFilled",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"enum LibNFTOrder.TradeDirection",name:"direction",type:"uint8"},{indexed:!1,internalType:"address",name:"maker",type:"address"},{indexed:!1,internalType:"address",name:"taker",type:"address"},{indexed:!1,internalType:"uint256",name:"expiry",type:"uint256"},{indexed:!1,internalType:"uint256",name:"nonce",type:"uint256"},{indexed:!1,internalType:"contract IERC20TokenV06",name:"erc20Token",type:"address"},{indexed:!1,internalType:"uint256",name:"erc20TokenAmount",type:"uint256"},{components:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"feeData",type:"bytes"}],indexed:!1,internalType:"struct LibNFTOrder.Fee[]",name:"fees",type:"tuple[]"},{indexed:!1,internalType:"contract IERC721Token",name:"erc721Token",type:"address"},{indexed:!1,internalType:"uint256",name:"erc721TokenId",type:"uint256"},{components:[{internalType:"contract IPropertyValidator",name:"propertyValidator",type:"address"},{internalType:"bytes",name:"propertyData",type:"bytes"}],indexed:!1,internalType:"struct LibNFTOrder.Property[]",name:"erc721TokenProperties",type:"tuple[]"}],name:"ERC721OrderPreSigned",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bytes32",name:"orderHash",type:"bytes32"},{indexed:!1,internalType:"address",name:"maker",type:"address"},{indexed:!1,internalType:"address",name:"taker",type:"address"},{indexed:!1,internalType:"address",name:"feeRecipient",type:"address"},{indexed:!1,internalType:"address",name:"makerToken",type:"address"},{indexed:!1,internalType:"address",name:"takerToken",type:"address"},{indexed:!1,internalType:"uint128",name:"takerTokenFilledAmount",type:"uint128"},{indexed:!1,internalType:"uint128",name:"makerTokenFilledAmount",type:"uint128"},{indexed:!1,internalType:"uint128",name:"takerTokenFeeFilledAmount",type:"uint128"},{indexed:!1,internalType:"uint256",name:"protocolFeePaid",type:"uint256"},{indexed:!1,internalType:"bytes32",name:"pool",type:"bytes32"}],name:"LimitOrderFilled",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"contract IERC20TokenV06",name:"inputToken",type:"address"},{indexed:!1,internalType:"contract IERC20TokenV06",name:"outputToken",type:"address"},{indexed:!1,internalType:"uint256",name:"inputTokenAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"outputTokenAmount",type:"uint256"},{indexed:!1,internalType:"contract ILiquidityProvider",name:"provider",type:"address"},{indexed:!1,internalType:"address",name:"recipient",type:"address"}],name:"LiquidityProviderSwap",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bytes32",name:"hash",type:"bytes32"},{indexed:!0,internalType:"bytes4",name:"selector",type:"bytes4"},{indexed:!1,internalType:"address",name:"signer",type:"address"},{indexed:!1,internalType:"address",name:"sender",type:"address"}],name:"MetaTransactionExecuted",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"caller",type:"address"},{indexed:!1,internalType:"address",name:"migrator",type:"address"},{indexed:!1,internalType:"address",name:"newOwner",type:"address"}],name:"Migrated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bytes32",name:"orderHash",type:"bytes32"},{indexed:!1,internalType:"address",name:"maker",type:"address"}],name:"OrderCancelled",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"maker",type:"address"},{indexed:!1,internalType:"address",name:"signer",type:"address"},{indexed:!1,internalType:"bool",name:"allowed",type:"bool"}],name:"OrderSignerRegistered",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bytes32",name:"orderHash",type:"bytes32"},{indexed:!1,internalType:"address",name:"maker",type:"address"},{indexed:!1,internalType:"address",name:"taker",type:"address"},{indexed:!1,internalType:"address",name:"makerToken",type:"address"},{indexed:!1,internalType:"address",name:"takerToken",type:"address"},{indexed:!1,internalType:"uint128",name:"makerTokenFilledAmount",type:"uint128"},{indexed:!1,internalType:"uint128",name:"takerTokenFilledAmount",type:"uint128"}],name:"OtcOrderFilled",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"maker",type:"address"},{indexed:!1,internalType:"address",name:"makerToken",type:"address"},{indexed:!1,internalType:"address",name:"takerToken",type:"address"},{indexed:!1,internalType:"uint256",name:"minValidSalt",type:"uint256"}],name:"PairCancelledLimitOrders",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"maker",type:"address"},{indexed:!1,internalType:"address",name:"makerToken",type:"address"},{indexed:!1,internalType:"address",name:"takerToken",type:"address"},{indexed:!1,internalType:"uint256",name:"minValidSalt",type:"uint256"}],name:"PairCancelledRfqOrders",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes4",name:"selector",type:"bytes4"},{indexed:!1,internalType:"address",name:"oldImpl",type:"address"},{indexed:!1,internalType:"address",name:"newImpl",type:"address"}],name:"ProxyFunctionUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"quoteSigner",type:"address"}],name:"QuoteSignerUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bytes32",name:"orderHash",type:"bytes32"},{indexed:!1,internalType:"address",name:"maker",type:"address"},{indexed:!1,internalType:"address",name:"taker",type:"address"},{indexed:!1,internalType:"address",name:"makerToken",type:"address"},{indexed:!1,internalType:"address",name:"takerToken",type:"address"},{indexed:!1,internalType:"uint128",name:"takerTokenFilledAmount",type:"uint128"},{indexed:!1,internalType:"uint128",name:"makerTokenFilledAmount",type:"uint128"},{indexed:!1,internalType:"bytes32",name:"pool",type:"bytes32"}],name:"RfqOrderFilled",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"origin",type:"address"},{indexed:!1,internalType:"address[]",name:"addrs",type:"address[]"},{indexed:!1,internalType:"bool",name:"allowed",type:"bool"}],name:"RfqOrderOriginsAllowed",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"taker",type:"address"},{indexed:!1,internalType:"address",name:"inputToken",type:"address"},{indexed:!1,internalType:"address",name:"outputToken",type:"address"},{indexed:!1,internalType:"uint256",name:"inputTokenAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"outputTokenAmount",type:"uint256"}],name:"TransformedERC20",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"transformerDeployer",type:"address"}],name:"TransformerDeployerUpdated",type:"event"},{inputs:[{components:[{internalType:"contract IERC20TokenV06",name:"makerToken",type:"address"},{internalType:"contract IERC20TokenV06",name:"takerToken",type:"address"},{internalType:"uint128",name:"makerAmount",type:"uint128"},{internalType:"uint128",name:"takerAmount",type:"uint128"},{internalType:"uint128",name:"takerTokenFeeAmount",type:"uint128"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"feeRecipient",type:"address"},{internalType:"bytes32",name:"pool",type:"bytes32"},{internalType:"uint64",name:"expiry",type:"uint64"},{internalType:"uint256",name:"salt",type:"uint256"}],internalType:"struct LibNativeOrder.LimitOrder",name:"order",type:"tuple"},{components:[{internalType:"enum LibSignature.SignatureType",name:"signatureType",type:"uint8"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],internalType:"struct LibSignature.Signature",name:"signature",type:"tuple"},{internalType:"uint128",name:"takerTokenFillAmount",type:"uint128"},{internalType:"address",name:"taker",type:"address"},{internalType:"address",name:"sender",type:"address"}],name:"_fillLimitOrder",outputs:[{internalType:"uint128",name:"takerTokenFilledAmount",type:"uint128"},{internalType:"uint128",name:"makerTokenFilledAmount",type:"uint128"}],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"contract IERC20TokenV06",name:"makerToken",type:"address"},{internalType:"contract IERC20TokenV06",name:"takerToken",type:"address"},{internalType:"uint128",name:"makerAmount",type:"uint128"},{internalType:"uint128",name:"takerAmount",type:"uint128"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"address",name:"txOrigin",type:"address"},{internalType:"uint256",name:"expiryAndNonce",type:"uint256"}],internalType:"struct LibNativeOrder.OtcOrder",name:"order",type:"tuple"},{components:[{internalType:"enum LibSignature.SignatureType",name:"signatureType",type:"uint8"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],internalType:"struct LibSignature.Signature",name:"makerSignature",type:"tuple"},{internalType:"uint128",name:"takerTokenFillAmount",type:"uint128"},{internalType:"address",name:"taker",type:"address"},{internalType:"bool",name:"useSelfBalance",type:"bool"},{internalType:"address",name:"recipient",type:"address"}],name:"_fillOtcOrder",outputs:[{internalType:"uint128",name:"takerTokenFilledAmount",type:"uint128"},{internalType:"uint128",name:"makerTokenFilledAmount",type:"uint128"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"contract IERC20TokenV06",name:"makerToken",type:"address"},{internalType:"contract IERC20TokenV06",name:"takerToken",type:"address"},{internalType:"uint128",name:"makerAmount",type:"uint128"},{internalType:"uint128",name:"takerAmount",type:"uint128"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"address",name:"txOrigin",type:"address"},{internalType:"bytes32",name:"pool",type:"bytes32"},{internalType:"uint64",name:"expiry",type:"uint64"},{internalType:"uint256",name:"salt",type:"uint256"}],internalType:"struct LibNativeOrder.RfqOrder",name:"order",type:"tuple"},{components:[{internalType:"enum LibSignature.SignatureType",name:"signatureType",type:"uint8"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],internalType:"struct LibSignature.Signature",name:"signature",type:"tuple"},{internalType:"uint128",name:"takerTokenFillAmount",type:"uint128"},{internalType:"address",name:"taker",type:"address"},{internalType:"bool",name:"useSelfBalance",type:"bool"},{internalType:"address",name:"recipient",type:"address"}],name:"_fillRfqOrder",outputs:[{internalType:"uint128",name:"takerTokenFilledAmount",type:"uint128"},{internalType:"uint128",name:"makerTokenFilledAmount",type:"uint128"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes",name:"encodedPath",type:"bytes"},{internalType:"uint256",name:"sellAmount",type:"uint256"},{internalType:"uint256",name:"minBuyAmount",type:"uint256"},{internalType:"address",name:"recipient",type:"address"}],name:"_sellHeldTokenForTokenToUniswapV3",outputs:[{internalType:"uint256",name:"buyAmount",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"address payable",name:"taker",type:"address"},{internalType:"contract IERC20TokenV06",name:"inputToken",type:"address"},{internalType:"contract IERC20TokenV06",name:"outputToken",type:"address"},{internalType:"uint256",name:"inputTokenAmount",type:"uint256"},{internalType:"uint256",name:"minOutputTokenAmount",type:"uint256"},{components:[{internalType:"uint32",name:"deploymentNonce",type:"uint32"},{internalType:"bytes",name:"data",type:"bytes"}],internalType:"struct ITransformERC20Feature.Transformation[]",name:"transformations",type:"tuple[]"},{internalType:"bool",name:"useSelfBalance",type:"bool"},{internalType:"address payable",name:"recipient",type:"address"}],internalType:"struct ITransformERC20Feature.TransformERC20Args",name:"args",type:"tuple"}],name:"_transformERC20",outputs:[{internalType:"uint256",name:"outputTokenAmount",type:"uint256"}],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"enum LibNFTOrder.TradeDirection",name:"direction",type:"uint8"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"contract IERC20TokenV06",name:"erc20Token",type:"address"},{internalType:"uint256",name:"erc20TokenAmount",type:"uint256"},{components:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"feeData",type:"bytes"}],internalType:"struct LibNFTOrder.Fee[]",name:"fees",type:"tuple[]"},{internalType:"contract IERC1155Token",name:"erc1155Token",type:"address"},{internalType:"uint256",name:"erc1155TokenId",type:"uint256"},{components:[{internalType:"contract IPropertyValidator",name:"propertyValidator",type:"address"},{internalType:"bytes",name:"propertyData",type:"bytes"}],internalType:"struct LibNFTOrder.Property[]",name:"erc1155TokenProperties",type:"tuple[]"},{internalType:"uint128",name:"erc1155TokenAmount",type:"uint128"}],internalType:"struct LibNFTOrder.ERC1155Order[]",name:"sellOrders",type:"tuple[]"},{components:[{internalType:"enum LibSignature.SignatureType",name:"signatureType",type:"uint8"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],internalType:"struct LibSignature.Signature[]",name:"signatures",type:"tuple[]"},{internalType:"uint128[]",name:"erc1155TokenAmounts",type:"uint128[]"},{internalType:"bytes[]",name:"callbackData",type:"bytes[]"},{internalType:"bool",name:"revertIfIncomplete",type:"bool"}],name:"batchBuyERC1155s",outputs:[{internalType:"bool[]",name:"successes",type:"bool[]"}],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"enum LibNFTOrder.TradeDirection",name:"direction",type:"uint8"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"contract IERC20TokenV06",name:"erc20Token",type:"address"},{internalType:"uint256",name:"erc20TokenAmount",type:"uint256"},{components:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"feeData",type:"bytes"}],internalType:"struct LibNFTOrder.Fee[]",name:"fees",type:"tuple[]"},{internalType:"contract IERC721Token",name:"erc721Token",type:"address"},{internalType:"uint256",name:"erc721TokenId",type:"uint256"},{components:[{internalType:"contract IPropertyValidator",name:"propertyValidator",type:"address"},{internalType:"bytes",name:"propertyData",type:"bytes"}],internalType:"struct LibNFTOrder.Property[]",name:"erc721TokenProperties",type:"tuple[]"}],internalType:"struct LibNFTOrder.ERC721Order[]",name:"sellOrders",type:"tuple[]"},{components:[{internalType:"enum LibSignature.SignatureType",name:"signatureType",type:"uint8"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],internalType:"struct LibSignature.Signature[]",name:"signatures",type:"tuple[]"},{internalType:"bytes[]",name:"callbackData",type:"bytes[]"},{internalType:"bool",name:"revertIfIncomplete",type:"bool"}],name:"batchBuyERC721s",outputs:[{internalType:"bool[]",name:"successes",type:"bool[]"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"uint256[]",name:"orderNonces",type:"uint256[]"}],name:"batchCancelERC1155Orders",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256[]",name:"orderNonces",type:"uint256[]"}],name:"batchCancelERC721Orders",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"contract IERC20TokenV06",name:"makerToken",type:"address"},{internalType:"contract IERC20TokenV06",name:"takerToken",type:"address"},{internalType:"uint128",name:"makerAmount",type:"uint128"},{internalType:"uint128",name:"takerAmount",type:"uint128"},{internalType:"uint128",name:"takerTokenFeeAmount",type:"uint128"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"feeRecipient",type:"address"},{internalType:"bytes32",name:"pool",type:"bytes32"},{internalType:"uint64",name:"expiry",type:"uint64"},{internalType:"uint256",name:"salt",type:"uint256"}],internalType:"struct LibNativeOrder.LimitOrder[]",name:"orders",type:"tuple[]"}],name:"batchCancelLimitOrders",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IERC20TokenV06[]",name:"makerTokens",type:"address[]"},{internalType:"contract IERC20TokenV06[]",name:"takerTokens",type:"address[]"},{internalType:"uint256[]",name:"minValidSalts",type:"uint256[]"}],name:"batchCancelPairLimitOrders",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"maker",type:"address"},{internalType:"contract IERC20TokenV06[]",name:"makerTokens",type:"address[]"},{internalType:"contract IERC20TokenV06[]",name:"takerTokens",type:"address[]"},{internalType:"uint256[]",name:"minValidSalts",type:"uint256[]"}],name:"batchCancelPairLimitOrdersWithSigner",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IERC20TokenV06[]",name:"makerTokens",type:"address[]"},{internalType:"contract IERC20TokenV06[]",name:"takerTokens",type:"address[]"},{internalType:"uint256[]",name:"minValidSalts",type:"uint256[]"}],name:"batchCancelPairRfqOrders",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"maker",type:"address"},{internalType:"contract IERC20TokenV06[]",name:"makerTokens",type:"address[]"},{internalType:"contract IERC20TokenV06[]",name:"takerTokens",type:"address[]"},{internalType:"uint256[]",name:"minValidSalts",type:"uint256[]"}],name:"batchCancelPairRfqOrdersWithSigner",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"contract IERC20TokenV06",name:"makerToken",type:"address"},{internalType:"contract IERC20TokenV06",name:"takerToken",type:"address"},{internalType:"uint128",name:"makerAmount",type:"uint128"},{internalType:"uint128",name:"takerAmount",type:"uint128"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"address",name:"txOrigin",type:"address"},{internalType:"bytes32",name:"pool",type:"bytes32"},{internalType:"uint64",name:"expiry",type:"uint64"},{internalType:"uint256",name:"salt",type:"uint256"}],internalType:"struct LibNativeOrder.RfqOrder[]",name:"orders",type:"tuple[]"}],name:"batchCancelRfqOrders",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"address payable",name:"signer",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"uint256",name:"minGasPrice",type:"uint256"},{internalType:"uint256",name:"maxGasPrice",type:"uint256"},{internalType:"uint256",name:"expirationTimeSeconds",type:"uint256"},{internalType:"uint256",name:"salt",type:"uint256"},{internalType:"bytes",name:"callData",type:"bytes"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"contract IERC20TokenV06",name:"feeToken",type:"address"},{internalType:"uint256",name:"feeAmount",type:"uint256"}],internalType:"struct IMetaTransactionsFeature.MetaTransactionData[]",name:"mtxs",type:"tuple[]"},{components:[{internalType:"enum LibSignature.SignatureType",name:"signatureType",type:"uint8"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],internalType:"struct LibSignature.Signature[]",name:"signatures",type:"tuple[]"}],name:"batchExecuteMetaTransactions",outputs:[{internalType:"bytes[]",name:"returnResults",type:"bytes[]"}],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"contract IERC20TokenV06",name:"makerToken",type:"address"},{internalType:"contract IERC20TokenV06",name:"takerToken",type:"address"},{internalType:"uint128",name:"makerAmount",type:"uint128"},{internalType:"uint128",name:"takerAmount",type:"uint128"},{internalType:"uint128",name:"takerTokenFeeAmount",type:"uint128"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"feeRecipient",type:"address"},{internalType:"bytes32",name:"pool",type:"bytes32"},{internalType:"uint64",name:"expiry",type:"uint64"},{internalType:"uint256",name:"salt",type:"uint256"}],internalType:"struct LibNativeOrder.LimitOrder[]",name:"orders",type:"tuple[]"},{components:[{internalType:"enum LibSignature.SignatureType",name:"signatureType",type:"uint8"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],internalType:"struct LibSignature.Signature[]",name:"signatures",type:"tuple[]"},{internalType:"uint128[]",name:"takerTokenFillAmounts",type:"uint128[]"},{internalType:"bool",name:"revertIfIncomplete",type:"bool"}],name:"batchFillLimitOrders",outputs:[{internalType:"uint128[]",name:"takerTokenFilledAmounts",type:"uint128[]"},{internalType:"uint128[]",name:"makerTokenFilledAmounts",type:"uint128[]"}],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"contract IERC20TokenV06",name:"makerToken",type:"address"},{internalType:"contract IERC20TokenV06",name:"takerToken",type:"address"},{internalType:"uint128",name:"makerAmount",type:"uint128"},{internalType:"uint128",name:"takerAmount",type:"uint128"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"address",name:"txOrigin",type:"address"},{internalType:"bytes32",name:"pool",type:"bytes32"},{internalType:"uint64",name:"expiry",type:"uint64"},{internalType:"uint256",name:"salt",type:"uint256"}],internalType:"struct LibNativeOrder.RfqOrder[]",name:"orders",type:"tuple[]"},{components:[{internalType:"enum LibSignature.SignatureType",name:"signatureType",type:"uint8"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],internalType:"struct LibSignature.Signature[]",name:"signatures",type:"tuple[]"},{internalType:"uint128[]",name:"takerTokenFillAmounts",type:"uint128[]"},{internalType:"bool",name:"revertIfIncomplete",type:"bool"}],name:"batchFillRfqOrders",outputs:[{internalType:"uint128[]",name:"takerTokenFilledAmounts",type:"uint128[]"},{internalType:"uint128[]",name:"makerTokenFilledAmounts",type:"uint128[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"contract IERC20TokenV06",name:"makerToken",type:"address"},{internalType:"contract IERC20TokenV06",name:"takerToken",type:"address"},{internalType:"uint128",name:"makerAmount",type:"uint128"},{internalType:"uint128",name:"takerAmount",type:"uint128"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"address",name:"txOrigin",type:"address"},{internalType:"uint256",name:"expiryAndNonce",type:"uint256"}],internalType:"struct LibNativeOrder.OtcOrder[]",name:"orders",type:"tuple[]"},{components:[{internalType:"enum LibSignature.SignatureType",name:"signatureType",type:"uint8"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],internalType:"struct LibSignature.Signature[]",name:"makerSignatures",type:"tuple[]"},{components:[{internalType:"enum LibSignature.SignatureType",name:"signatureType",type:"uint8"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],internalType:"struct LibSignature.Signature[]",name:"takerSignatures",type:"tuple[]"},{internalType:"bool[]",name:"unwrapWeth",type:"bool[]"}],name:"batchFillTakerSignedOtcOrders",outputs:[{internalType:"bool[]",name:"successes",type:"bool[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"contract IERC20TokenV06",name:"makerToken",type:"address"},{internalType:"contract IERC20TokenV06",name:"takerToken",type:"address"},{internalType:"uint128",name:"makerAmount",type:"uint128"},{internalType:"uint128",name:"takerAmount",type:"uint128"},{internalType:"uint128",name:"takerTokenFeeAmount",type:"uint128"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"feeRecipient",type:"address"},{internalType:"bytes32",name:"pool",type:"bytes32"},{internalType:"uint64",name:"expiry",type:"uint64"},{internalType:"uint256",name:"salt",type:"uint256"}],internalType:"struct LibNativeOrder.LimitOrder[]",name:"orders",type:"tuple[]"},{components:[{internalType:"enum LibSignature.SignatureType",name:"signatureType",type:"uint8"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],internalType:"struct LibSignature.Signature[]",name:"signatures",type:"tuple[]"}],name:"batchGetLimitOrderRelevantStates",outputs:[{components:[{internalType:"bytes32",name:"orderHash",type:"bytes32"},{internalType:"enum LibNativeOrder.OrderStatus",name:"status",type:"uint8"},{internalType:"uint128",name:"takerTokenFilledAmount",type:"uint128"}],internalType:"struct LibNativeOrder.OrderInfo[]",name:"orderInfos",type:"tuple[]"},{internalType:"uint128[]",name:"actualFillableTakerTokenAmounts",type:"uint128[]"},{internalType:"bool[]",name:"isSignatureValids",type:"bool[]"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"contract IERC20TokenV06",name:"makerToken",type:"address"},{internalType:"contract IERC20TokenV06",name:"takerToken",type:"address"},{internalType:"uint128",name:"makerAmount",type:"uint128"},{internalType:"uint128",name:"takerAmount",type:"uint128"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"address",name:"txOrigin",type:"address"},{internalType:"bytes32",name:"pool",type:"bytes32"},{internalType:"uint64",name:"expiry",type:"uint64"},{internalType:"uint256",name:"salt",type:"uint256"}],internalType:"struct LibNativeOrder.RfqOrder[]",name:"orders",type:"tuple[]"},{components:[{internalType:"enum LibSignature.SignatureType",name:"signatureType",type:"uint8"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],internalType:"struct LibSignature.Signature[]",name:"signatures",type:"tuple[]"}],name:"batchGetRfqOrderRelevantStates",outputs:[{components:[{internalType:"bytes32",name:"orderHash",type:"bytes32"},{internalType:"enum LibNativeOrder.OrderStatus",name:"status",type:"uint8"},{internalType:"uint128",name:"takerTokenFilledAmount",type:"uint128"}],internalType:"struct LibNativeOrder.OrderInfo[]",name:"orderInfos",type:"tuple[]"},{internalType:"uint128[]",name:"actualFillableTakerTokenAmounts",type:"uint128[]"},{internalType:"bool[]",name:"isSignatureValids",type:"bool[]"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"enum LibNFTOrder.TradeDirection",name:"direction",type:"uint8"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"contract IERC20TokenV06",name:"erc20Token",type:"address"},{internalType:"uint256",name:"erc20TokenAmount",type:"uint256"},{components:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"feeData",type:"bytes"}],internalType:"struct LibNFTOrder.Fee[]",name:"fees",type:"tuple[]"},{internalType:"contract IERC721Token",name:"erc721Token",type:"address"},{internalType:"uint256",name:"erc721TokenId",type:"uint256"},{components:[{internalType:"contract IPropertyValidator",name:"propertyValidator",type:"address"},{internalType:"bytes",name:"propertyData",type:"bytes"}],internalType:"struct LibNFTOrder.Property[]",name:"erc721TokenProperties",type:"tuple[]"}],internalType:"struct LibNFTOrder.ERC721Order[]",name:"sellOrders",type:"tuple[]"},{components:[{internalType:"enum LibNFTOrder.TradeDirection",name:"direction",type:"uint8"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"contract IERC20TokenV06",name:"erc20Token",type:"address"},{internalType:"uint256",name:"erc20TokenAmount",type:"uint256"},{components:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"feeData",type:"bytes"}],internalType:"struct LibNFTOrder.Fee[]",name:"fees",type:"tuple[]"},{internalType:"contract IERC721Token",name:"erc721Token",type:"address"},{internalType:"uint256",name:"erc721TokenId",type:"uint256"},{components:[{internalType:"contract IPropertyValidator",name:"propertyValidator",type:"address"},{internalType:"bytes",name:"propertyData",type:"bytes"}],internalType:"struct LibNFTOrder.Property[]",name:"erc721TokenProperties",type:"tuple[]"}],internalType:"struct LibNFTOrder.ERC721Order[]",name:"buyOrders",type:"tuple[]"},{components:[{internalType:"enum LibSignature.SignatureType",name:"signatureType",type:"uint8"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],internalType:"struct LibSignature.Signature[]",name:"sellOrderSignatures",type:"tuple[]"},{components:[{internalType:"enum LibSignature.SignatureType",name:"signatureType",type:"uint8"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],internalType:"struct LibSignature.Signature[]",name:"buyOrderSignatures",type:"tuple[]"}],name:"batchMatchERC721Orders",outputs:[{internalType:"uint256[]",name:"profits",type:"uint256[]"},{internalType:"bool[]",name:"successes",type:"bool[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum LibNFTOrder.TradeDirection",name:"direction",type:"uint8"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"contract IERC20TokenV06",name:"erc20Token",type:"address"},{internalType:"uint256",name:"erc20TokenAmount",type:"uint256"},{components:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"feeData",type:"bytes"}],internalType:"struct LibNFTOrder.Fee[]",name:"fees",type:"tuple[]"},{internalType:"contract IERC1155Token",name:"erc1155Token",type:"address"},{internalType:"uint256",name:"erc1155TokenId",type:"uint256"},{components:[{internalType:"contract IPropertyValidator",name:"propertyValidator",type:"address"},{internalType:"bytes",name:"propertyData",type:"bytes"}],internalType:"struct LibNFTOrder.Property[]",name:"erc1155TokenProperties",type:"tuple[]"},{internalType:"uint128",name:"erc1155TokenAmount",type:"uint128"}],internalType:"struct LibNFTOrder.ERC1155Order",name:"sellOrder",type:"tuple"},{components:[{internalType:"enum LibSignature.SignatureType",name:"signatureType",type:"uint8"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],internalType:"struct LibSignature.Signature",name:"signature",type:"tuple"},{internalType:"uint128",name:"erc1155BuyAmount",type:"uint128"},{internalType:"bytes",name:"callbackData",type:"bytes"}],name:"buyERC1155",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"enum LibNFTOrder.TradeDirection",name:"direction",type:"uint8"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"contract IERC20TokenV06",name:"erc20Token",type:"address"},{internalType:"uint256",name:"erc20TokenAmount",type:"uint256"},{components:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"feeData",type:"bytes"}],internalType:"struct LibNFTOrder.Fee[]",name:"fees",type:"tuple[]"},{internalType:"contract IERC721Token",name:"erc721Token",type:"address"},{internalType:"uint256",name:"erc721TokenId",type:"uint256"},{components:[{internalType:"contract IPropertyValidator",name:"propertyValidator",type:"address"},{internalType:"bytes",name:"propertyData",type:"bytes"}],internalType:"struct LibNFTOrder.Property[]",name:"erc721TokenProperties",type:"tuple[]"}],internalType:"struct LibNFTOrder.ERC721Order",name:"sellOrder",type:"tuple"},{components:[{internalType:"enum LibSignature.SignatureType",name:"signatureType",type:"uint8"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],internalType:"struct LibSignature.Signature",name:"signature",type:"tuple"},{internalType:"bytes",name:"callbackData",type:"bytes"}],name:"buyERC721",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"uint256",name:"orderNonce",type:"uint256"}],name:"cancelERC1155Order",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"orderNonce",type:"uint256"}],name:"cancelERC721Order",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"contract IERC20TokenV06",name:"makerToken",type:"address"},{internalType:"contract IERC20TokenV06",name:"takerToken",type:"address"},{internalType:"uint128",name:"makerAmount",type:"uint128"},{internalType:"uint128",name:"takerAmount",type:"uint128"},{internalType:"uint128",name:"takerTokenFeeAmount",type:"uint128"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"feeRecipient",type:"address"},{internalType:"bytes32",name:"pool",type:"bytes32"},{internalType:"uint64",name:"expiry",type:"uint64"},{internalType:"uint256",name:"salt",type:"uint256"}],internalType:"struct LibNativeOrder.LimitOrder",name:"order",type:"tuple"}],name:"cancelLimitOrder",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IERC20TokenV06",name:"makerToken",type:"address"},{internalType:"contract IERC20TokenV06",name:"takerToken",type:"address"},{internalType:"uint256",name:"minValidSalt",type:"uint256"}],name:"cancelPairLimitOrders",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"maker",type:"address"},{internalType:"contract IERC20TokenV06",name:"makerToken",type:"address"},{internalType:"contract IERC20TokenV06",name:"takerToken",type:"address"},{internalType:"uint256",name:"minValidSalt",type:"uint256"}],name:"cancelPairLimitOrdersWithSigner",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IERC20TokenV06",name:"makerToken",type:"address"},{internalType:"contract IERC20TokenV06",name:"takerToken",type:"address"},{internalType:"uint256",name:"minValidSalt",type:"uint256"}],name:"cancelPairRfqOrders",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"maker",type:"address"},{internalType:"contract IERC20TokenV06",name:"makerToken",type:"address"},{internalType:"contract IERC20TokenV06",name:"takerToken",type:"address"},{internalType:"uint256",name:"minValidSalt",type:"uint256"}],name:"cancelPairRfqOrdersWithSigner",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"contract IERC20TokenV06",name:"makerToken",type:"address"},{internalType:"contract IERC20TokenV06",name:"takerToken",type:"address"},{internalType:"uint128",name:"makerAmount",type:"uint128"},{internalType:"uint128",name:"takerAmount",type:"uint128"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"address",name:"txOrigin",type:"address"},{internalType:"bytes32",name:"pool",type:"bytes32"},{internalType:"uint64",name:"expiry",type:"uint64"},{internalType:"uint256",name:"salt",type:"uint256"}],internalType:"struct LibNativeOrder.RfqOrder",name:"order",type:"tuple"}],name:"cancelRfqOrder",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"createTransformWallet",outputs:[{internalType:"contract IFlashWallet",name:"wallet",type:"address"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"address payable",name:"signer",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"uint256",name:"minGasPrice",type:"uint256"},{internalType:"uint256",name:"maxGasPrice",type:"uint256"},{internalType:"uint256",name:"expirationTimeSeconds",type:"uint256"},{internalType:"uint256",name:"salt",type:"uint256"},{internalType:"bytes",name:"callData",type:"bytes"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"contract IERC20TokenV06",name:"feeToken",type:"address"},{internalType:"uint256",name:"feeAmount",type:"uint256"}],internalType:"struct IMetaTransactionsFeature.MetaTransactionData",name:"mtx",type:"tuple"},{components:[{internalType:"enum LibSignature.SignatureType",name:"signatureType",type:"uint8"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],internalType:"struct LibSignature.Signature",name:"signature",type:"tuple"}],name:"executeMetaTransaction",outputs:[{internalType:"bytes",name:"returnResult",type:"bytes"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"},{internalType:"address",name:"impl",type:"address"}],name:"extend",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"contract IERC20TokenV06",name:"makerToken",type:"address"},{internalType:"contract IERC20TokenV06",name:"takerToken",type:"address"},{internalType:"uint128",name:"makerAmount",type:"uint128"},{internalType:"uint128",name:"takerAmount",type:"uint128"},{internalType:"uint128",name:"takerTokenFeeAmount",type:"uint128"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"feeRecipient",type:"address"},{internalType:"bytes32",name:"pool",type:"bytes32"},{internalType:"uint64",name:"expiry",type:"uint64"},{internalType:"uint256",name:"salt",type:"uint256"}],internalType:"struct LibNativeOrder.LimitOrder",name:"order",type:"tuple"},{components:[{internalType:"enum LibSignature.SignatureType",name:"signatureType",type:"uint8"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],internalType:"struct LibSignature.Signature",name:"signature",type:"tuple"},{internalType:"uint128",name:"takerTokenFillAmount",type:"uint128"}],name:"fillLimitOrder",outputs:[{internalType:"uint128",name:"takerTokenFilledAmount",type:"uint128"},{internalType:"uint128",name:"makerTokenFilledAmount",type:"uint128"}],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"contract IERC20TokenV06",name:"makerToken",type:"address"},{internalType:"contract IERC20TokenV06",name:"takerToken",type:"address"},{internalType:"uint128",name:"makerAmount",type:"uint128"},{internalType:"uint128",name:"takerAmount",type:"uint128"},{internalType:"uint128",name:"takerTokenFeeAmount",type:"uint128"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"feeRecipient",type:"address"},{internalType:"bytes32",name:"pool",type:"bytes32"},{internalType:"uint64",name:"expiry",type:"uint64"},{internalType:"uint256",name:"salt",type:"uint256"}],internalType:"struct LibNativeOrder.LimitOrder",name:"order",type:"tuple"},{components:[{internalType:"enum LibSignature.SignatureType",name:"signatureType",type:"uint8"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],internalType:"struct LibSignature.Signature",name:"signature",type:"tuple"},{internalType:"uint128",name:"takerTokenFillAmount",type:"uint128"}],name:"fillOrKillLimitOrder",outputs:[{internalType:"uint128",name:"makerTokenFilledAmount",type:"uint128"}],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"contract IERC20TokenV06",name:"makerToken",type:"address"},{internalType:"contract IERC20TokenV06",name:"takerToken",type:"address"},{internalType:"uint128",name:"makerAmount",type:"uint128"},{internalType:"uint128",name:"takerAmount",type:"uint128"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"address",name:"txOrigin",type:"address"},{internalType:"bytes32",name:"pool",type:"bytes32"},{internalType:"uint64",name:"expiry",type:"uint64"},{internalType:"uint256",name:"salt",type:"uint256"}],internalType:"struct LibNativeOrder.RfqOrder",name:"order",type:"tuple"},{components:[{internalType:"enum LibSignature.SignatureType",name:"signatureType",type:"uint8"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],internalType:"struct LibSignature.Signature",name:"signature",type:"tuple"},{internalType:"uint128",name:"takerTokenFillAmount",type:"uint128"}],name:"fillOrKillRfqOrder",outputs:[{internalType:"uint128",name:"makerTokenFilledAmount",type:"uint128"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"contract IERC20TokenV06",name:"makerToken",type:"address"},{internalType:"contract IERC20TokenV06",name:"takerToken",type:"address"},{internalType:"uint128",name:"makerAmount",type:"uint128"},{internalType:"uint128",name:"takerAmount",type:"uint128"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"address",name:"txOrigin",type:"address"},{internalType:"uint256",name:"expiryAndNonce",type:"uint256"}],internalType:"struct LibNativeOrder.OtcOrder",name:"order",type:"tuple"},{components:[{internalType:"enum LibSignature.SignatureType",name:"signatureType",type:"uint8"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],internalType:"struct LibSignature.Signature",name:"makerSignature",type:"tuple"},{internalType:"uint128",name:"takerTokenFillAmount",type:"uint128"}],name:"fillOtcOrder",outputs:[{internalType:"uint128",name:"takerTokenFilledAmount",type:"uint128"},{internalType:"uint128",name:"makerTokenFilledAmount",type:"uint128"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"contract IERC20TokenV06",name:"makerToken",type:"address"},{internalType:"contract IERC20TokenV06",name:"takerToken",type:"address"},{internalType:"uint128",name:"makerAmount",type:"uint128"},{internalType:"uint128",name:"takerAmount",type:"uint128"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"address",name:"txOrigin",type:"address"},{internalType:"uint256",name:"expiryAndNonce",type:"uint256"}],internalType:"struct LibNativeOrder.OtcOrder",name:"order",type:"tuple"},{components:[{internalType:"enum LibSignature.SignatureType",name:"signatureType",type:"uint8"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],internalType:"struct LibSignature.Signature",name:"makerSignature",type:"tuple"},{internalType:"uint128",name:"takerTokenFillAmount",type:"uint128"}],name:"fillOtcOrderForEth",outputs:[{internalType:"uint128",name:"takerTokenFilledAmount",type:"uint128"},{internalType:"uint128",name:"makerTokenFilledAmount",type:"uint128"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"contract IERC20TokenV06",name:"makerToken",type:"address"},{internalType:"contract IERC20TokenV06",name:"takerToken",type:"address"},{internalType:"uint128",name:"makerAmount",type:"uint128"},{internalType:"uint128",name:"takerAmount",type:"uint128"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"address",name:"txOrigin",type:"address"},{internalType:"uint256",name:"expiryAndNonce",type:"uint256"}],internalType:"struct LibNativeOrder.OtcOrder",name:"order",type:"tuple"},{components:[{internalType:"enum LibSignature.SignatureType",name:"signatureType",type:"uint8"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],internalType:"struct LibSignature.Signature",name:"makerSignature",type:"tuple"}],name:"fillOtcOrderWithEth",outputs:[{internalType:"uint128",name:"takerTokenFilledAmount",type:"uint128"},{internalType:"uint128",name:"makerTokenFilledAmount",type:"uint128"}],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"contract IERC20TokenV06",name:"makerToken",type:"address"},{internalType:"contract IERC20TokenV06",name:"takerToken",type:"address"},{internalType:"uint128",name:"makerAmount",type:"uint128"},{internalType:"uint128",name:"takerAmount",type:"uint128"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"address",name:"txOrigin",type:"address"},{internalType:"bytes32",name:"pool",type:"bytes32"},{internalType:"uint64",name:"expiry",type:"uint64"},{internalType:"uint256",name:"salt",type:"uint256"}],internalType:"struct LibNativeOrder.RfqOrder",name:"order",type:"tuple"},{components:[{internalType:"enum LibSignature.SignatureType",name:"signatureType",type:"uint8"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],internalType:"struct LibSignature.Signature",name:"signature",type:"tuple"},{internalType:"uint128",name:"takerTokenFillAmount",type:"uint128"}],name:"fillRfqOrder",outputs:[{internalType:"uint128",name:"takerTokenFilledAmount",type:"uint128"},{internalType:"uint128",name:"makerTokenFilledAmount",type:"uint128"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"contract IERC20TokenV06",name:"makerToken",type:"address"},{internalType:"contract IERC20TokenV06",name:"takerToken",type:"address"},{internalType:"uint128",name:"makerAmount",type:"uint128"},{internalType:"uint128",name:"takerAmount",type:"uint128"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"address",name:"txOrigin",type:"address"},{internalType:"uint256",name:"expiryAndNonce",type:"uint256"}],internalType:"struct LibNativeOrder.OtcOrder",name:"order",type:"tuple"},{components:[{internalType:"enum LibSignature.SignatureType",name:"signatureType",type:"uint8"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],internalType:"struct LibSignature.Signature",name:"makerSignature",type:"tuple"},{components:[{internalType:"enum LibSignature.SignatureType",name:"signatureType",type:"uint8"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],internalType:"struct LibSignature.Signature",name:"takerSignature",type:"tuple"}],name:"fillTakerSignedOtcOrder",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"contract IERC20TokenV06",name:"makerToken",type:"address"},{internalType:"contract IERC20TokenV06",name:"takerToken",type:"address"},{internalType:"uint128",name:"makerAmount",type:"uint128"},{internalType:"uint128",name:"takerAmount",type:"uint128"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"address",name:"txOrigin",type:"address"},{internalType:"uint256",name:"expiryAndNonce",type:"uint256"}],internalType:"struct LibNativeOrder.OtcOrder",name:"order",type:"tuple"},{components:[{internalType:"enum LibSignature.SignatureType",name:"signatureType",type:"uint8"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],internalType:"struct LibSignature.Signature",name:"makerSignature",type:"tuple"},{components:[{internalType:"enum LibSignature.SignatureType",name:"signatureType",type:"uint8"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],internalType:"struct LibSignature.Signature",name:"takerSignature",type:"tuple"}],name:"fillTakerSignedOtcOrderForEth",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum LibNFTOrder.TradeDirection",name:"direction",type:"uint8"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"contract IERC20TokenV06",name:"erc20Token",type:"address"},{internalType:"uint256",name:"erc20TokenAmount",type:"uint256"},{components:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"feeData",type:"bytes"}],internalType:"struct LibNFTOrder.Fee[]",name:"fees",type:"tuple[]"},{internalType:"contract IERC1155Token",name:"erc1155Token",type:"address"},{internalType:"uint256",name:"erc1155TokenId",type:"uint256"},{components:[{internalType:"contract IPropertyValidator",name:"propertyValidator",type:"address"},{internalType:"bytes",name:"propertyData",type:"bytes"}],internalType:"struct LibNFTOrder.Property[]",name:"erc1155TokenProperties",type:"tuple[]"},{internalType:"uint128",name:"erc1155TokenAmount",type:"uint128"}],internalType:"struct LibNFTOrder.ERC1155Order",name:"order",type:"tuple"}],name:"getERC1155OrderHash",outputs:[{internalType:"bytes32",name:"orderHash",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"enum LibNFTOrder.TradeDirection",name:"direction",type:"uint8"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"contract IERC20TokenV06",name:"erc20Token",type:"address"},{internalType:"uint256",name:"erc20TokenAmount",type:"uint256"},{components:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"feeData",type:"bytes"}],internalType:"struct LibNFTOrder.Fee[]",name:"fees",type:"tuple[]"},{internalType:"contract IERC1155Token",name:"erc1155Token",type:"address"},{internalType:"uint256",name:"erc1155TokenId",type:"uint256"},{components:[{internalType:"contract IPropertyValidator",name:"propertyValidator",type:"address"},{internalType:"bytes",name:"propertyData",type:"bytes"}],internalType:"struct LibNFTOrder.Property[]",name:"erc1155TokenProperties",type:"tuple[]"},{internalType:"uint128",name:"erc1155TokenAmount",type:"uint128"}],internalType:"struct LibNFTOrder.ERC1155Order",name:"order",type:"tuple"}],name:"getERC1155OrderInfo",outputs:[{components:[{internalType:"bytes32",name:"orderHash",type:"bytes32"},{internalType:"enum LibNFTOrder.OrderStatus",name:"status",type:"uint8"},{internalType:"uint128",name:"orderAmount",type:"uint128"},{internalType:"uint128",name:"remainingAmount",type:"uint128"}],internalType:"struct LibNFTOrder.OrderInfo",name:"orderInfo",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"enum LibNFTOrder.TradeDirection",name:"direction",type:"uint8"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"contract IERC20TokenV06",name:"erc20Token",type:"address"},{internalType:"uint256",name:"erc20TokenAmount",type:"uint256"},{components:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"feeData",type:"bytes"}],internalType:"struct LibNFTOrder.Fee[]",name:"fees",type:"tuple[]"},{internalType:"contract IERC721Token",name:"erc721Token",type:"address"},{internalType:"uint256",name:"erc721TokenId",type:"uint256"},{components:[{internalType:"contract IPropertyValidator",name:"propertyValidator",type:"address"},{internalType:"bytes",name:"propertyData",type:"bytes"}],internalType:"struct LibNFTOrder.Property[]",name:"erc721TokenProperties",type:"tuple[]"}],internalType:"struct LibNFTOrder.ERC721Order",name:"order",type:"tuple"}],name:"getERC721OrderHash",outputs:[{internalType:"bytes32",name:"orderHash",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"enum LibNFTOrder.TradeDirection",name:"direction",type:"uint8"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"contract IERC20TokenV06",name:"erc20Token",type:"address"},{internalType:"uint256",name:"erc20TokenAmount",type:"uint256"},{components:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"feeData",type:"bytes"}],internalType:"struct LibNFTOrder.Fee[]",name:"fees",type:"tuple[]"},{internalType:"contract IERC721Token",name:"erc721Token",type:"address"},{internalType:"uint256",name:"erc721TokenId",type:"uint256"},{components:[{internalType:"contract IPropertyValidator",name:"propertyValidator",type:"address"},{internalType:"bytes",name:"propertyData",type:"bytes"}],internalType:"struct LibNFTOrder.Property[]",name:"erc721TokenProperties",type:"tuple[]"}],internalType:"struct LibNFTOrder.ERC721Order",name:"order",type:"tuple"}],name:"getERC721OrderStatus",outputs:[{internalType:"enum LibNFTOrder.OrderStatus",name:"status",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"maker",type:"address"},{internalType:"uint248",name:"nonceRange",type:"uint248"}],name:"getERC721OrderStatusBitVector",outputs:[{internalType:"uint256",name:"bitVector",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"contract IERC20TokenV06",name:"makerToken",type:"address"},{internalType:"contract IERC20TokenV06",name:"takerToken",type:"address"},{internalType:"uint128",name:"makerAmount",type:"uint128"},{internalType:"uint128",name:"takerAmount",type:"uint128"},{internalType:"uint128",name:"takerTokenFeeAmount",type:"uint128"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"feeRecipient",type:"address"},{internalType:"bytes32",name:"pool",type:"bytes32"},{internalType:"uint64",name:"expiry",type:"uint64"},{internalType:"uint256",name:"salt",type:"uint256"}],internalType:"struct LibNativeOrder.LimitOrder",name:"order",type:"tuple"}],name:"getLimitOrderHash",outputs:[{internalType:"bytes32",name:"orderHash",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"contract IERC20TokenV06",name:"makerToken",type:"address"},{internalType:"contract IERC20TokenV06",name:"takerToken",type:"address"},{internalType:"uint128",name:"makerAmount",type:"uint128"},{internalType:"uint128",name:"takerAmount",type:"uint128"},{internalType:"uint128",name:"takerTokenFeeAmount",type:"uint128"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"feeRecipient",type:"address"},{internalType:"bytes32",name:"pool",type:"bytes32"},{internalType:"uint64",name:"expiry",type:"uint64"},{internalType:"uint256",name:"salt",type:"uint256"}],internalType:"struct LibNativeOrder.LimitOrder",name:"order",type:"tuple"}],name:"getLimitOrderInfo",outputs:[{components:[{internalType:"bytes32",name:"orderHash",type:"bytes32"},{internalType:"enum LibNativeOrder.OrderStatus",name:"status",type:"uint8"},{internalType:"uint128",name:"takerTokenFilledAmount",type:"uint128"}],internalType:"struct LibNativeOrder.OrderInfo",name:"orderInfo",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"contract IERC20TokenV06",name:"makerToken",type:"address"},{internalType:"contract IERC20TokenV06",name:"takerToken",type:"address"},{internalType:"uint128",name:"makerAmount",type:"uint128"},{internalType:"uint128",name:"takerAmount",type:"uint128"},{internalType:"uint128",name:"takerTokenFeeAmount",type:"uint128"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"feeRecipient",type:"address"},{internalType:"bytes32",name:"pool",type:"bytes32"},{internalType:"uint64",name:"expiry",type:"uint64"},{internalType:"uint256",name:"salt",type:"uint256"}],internalType:"struct LibNativeOrder.LimitOrder",name:"order",type:"tuple"},{components:[{internalType:"enum LibSignature.SignatureType",name:"signatureType",type:"uint8"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],internalType:"struct LibSignature.Signature",name:"signature",type:"tuple"}],name:"getLimitOrderRelevantState",outputs:[{components:[{internalType:"bytes32",name:"orderHash",type:"bytes32"},{internalType:"enum LibNativeOrder.OrderStatus",name:"status",type:"uint8"},{internalType:"uint128",name:"takerTokenFilledAmount",type:"uint128"}],internalType:"struct LibNativeOrder.OrderInfo",name:"orderInfo",type:"tuple"},{internalType:"uint128",name:"actualFillableTakerTokenAmount",type:"uint128"},{internalType:"bool",name:"isSignatureValid",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"address payable",name:"signer",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"uint256",name:"minGasPrice",type:"uint256"},{internalType:"uint256",name:"maxGasPrice",type:"uint256"},{internalType:"uint256",name:"expirationTimeSeconds",type:"uint256"},{internalType:"uint256",name:"salt",type:"uint256"},{internalType:"bytes",name:"callData",type:"bytes"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"contract IERC20TokenV06",name:"feeToken",type:"address"},{internalType:"uint256",name:"feeAmount",type:"uint256"}],internalType:"struct IMetaTransactionsFeature.MetaTransactionData",name:"mtx",type:"tuple"}],name:"getMetaTransactionExecutedBlock",outputs:[{internalType:"uint256",name:"blockNumber",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"address payable",name:"signer",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"uint256",name:"minGasPrice",type:"uint256"},{internalType:"uint256",name:"maxGasPrice",type:"uint256"},{internalType:"uint256",name:"expirationTimeSeconds",type:"uint256"},{internalType:"uint256",name:"salt",type:"uint256"},{internalType:"bytes",name:"callData",type:"bytes"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"contract IERC20TokenV06",name:"feeToken",type:"address"},{internalType:"uint256",name:"feeAmount",type:"uint256"}],internalType:"struct IMetaTransactionsFeature.MetaTransactionData",name:"mtx",type:"tuple"}],name:"getMetaTransactionHash",outputs:[{internalType:"bytes32",name:"mtxHash",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"mtxHash",type:"bytes32"}],name:"getMetaTransactionHashExecutedBlock",outputs:[{internalType:"uint256",name:"blockNumber",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"contract IERC20TokenV06",name:"makerToken",type:"address"},{internalType:"contract IERC20TokenV06",name:"takerToken",type:"address"},{internalType:"uint128",name:"makerAmount",type:"uint128"},{internalType:"uint128",name:"takerAmount",type:"uint128"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"address",name:"txOrigin",type:"address"},{internalType:"uint256",name:"expiryAndNonce",type:"uint256"}],internalType:"struct LibNativeOrder.OtcOrder",name:"order",type:"tuple"}],name:"getOtcOrderHash",outputs:[{internalType:"bytes32",name:"orderHash",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"contract IERC20TokenV06",name:"makerToken",type:"address"},{internalType:"contract IERC20TokenV06",name:"takerToken",type:"address"},{internalType:"uint128",name:"makerAmount",type:"uint128"},{internalType:"uint128",name:"takerAmount",type:"uint128"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"address",name:"txOrigin",type:"address"},{internalType:"uint256",name:"expiryAndNonce",type:"uint256"}],internalType:"struct LibNativeOrder.OtcOrder",name:"order",type:"tuple"}],name:"getOtcOrderInfo",outputs:[{components:[{internalType:"bytes32",name:"orderHash",type:"bytes32"},{internalType:"enum LibNativeOrder.OrderStatus",name:"status",type:"uint8"}],internalType:"struct LibNativeOrder.OtcOrderInfo",name:"orderInfo",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[],name:"getProtocolFeeMultiplier",outputs:[{internalType:"uint32",name:"multiplier",type:"uint32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getQuoteSigner",outputs:[{internalType:"address",name:"signer",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"contract IERC20TokenV06",name:"makerToken",type:"address"},{internalType:"contract IERC20TokenV06",name:"takerToken",type:"address"},{internalType:"uint128",name:"makerAmount",type:"uint128"},{internalType:"uint128",name:"takerAmount",type:"uint128"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"address",name:"txOrigin",type:"address"},{internalType:"bytes32",name:"pool",type:"bytes32"},{internalType:"uint64",name:"expiry",type:"uint64"},{internalType:"uint256",name:"salt",type:"uint256"}],internalType:"struct LibNativeOrder.RfqOrder",name:"order",type:"tuple"}],name:"getRfqOrderHash",outputs:[{internalType:"bytes32",name:"orderHash",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"contract IERC20TokenV06",name:"makerToken",type:"address"},{internalType:"contract IERC20TokenV06",name:"takerToken",type:"address"},{internalType:"uint128",name:"makerAmount",type:"uint128"},{internalType:"uint128",name:"takerAmount",type:"uint128"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"address",name:"txOrigin",type:"address"},{internalType:"bytes32",name:"pool",type:"bytes32"},{internalType:"uint64",name:"expiry",type:"uint64"},{internalType:"uint256",name:"salt",type:"uint256"}],internalType:"struct LibNativeOrder.RfqOrder",name:"order",type:"tuple"}],name:"getRfqOrderInfo",outputs:[{components:[{internalType:"bytes32",name:"orderHash",type:"bytes32"},{internalType:"enum LibNativeOrder.OrderStatus",name:"status",type:"uint8"},{internalType:"uint128",name:"takerTokenFilledAmount",type:"uint128"}],internalType:"struct LibNativeOrder.OrderInfo",name:"orderInfo",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"contract IERC20TokenV06",name:"makerToken",type:"address"},{internalType:"contract IERC20TokenV06",name:"takerToken",type:"address"},{internalType:"uint128",name:"makerAmount",type:"uint128"},{internalType:"uint128",name:"takerAmount",type:"uint128"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"address",name:"txOrigin",type:"address"},{internalType:"bytes32",name:"pool",type:"bytes32"},{internalType:"uint64",name:"expiry",type:"uint64"},{internalType:"uint256",name:"salt",type:"uint256"}],internalType:"struct LibNativeOrder.RfqOrder",name:"order",type:"tuple"},{components:[{internalType:"enum LibSignature.SignatureType",name:"signatureType",type:"uint8"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],internalType:"struct LibSignature.Signature",name:"signature",type:"tuple"}],name:"getRfqOrderRelevantState",outputs:[{components:[{internalType:"bytes32",name:"orderHash",type:"bytes32"},{internalType:"enum LibNativeOrder.OrderStatus",name:"status",type:"uint8"},{internalType:"uint128",name:"takerTokenFilledAmount",type:"uint128"}],internalType:"struct LibNativeOrder.OrderInfo",name:"orderInfo",type:"tuple"},{internalType:"uint128",name:"actualFillableTakerTokenAmount",type:"uint128"},{internalType:"bool",name:"isSignatureValid",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"},{internalType:"uint256",name:"idx",type:"uint256"}],name:"getRollbackEntryAtIndex",outputs:[{internalType:"address",name:"impl",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getRollbackLength",outputs:[{internalType:"uint256",name:"rollbackLength",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getTransformWallet",outputs:[{internalType:"contract IFlashWallet",name:"wallet",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getTransformerDeployer",outputs:[{internalType:"address",name:"deployer",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"signer",type:"address"}],name:"isValidOrderSigner",outputs:[{internalType:"bool",name:"isAllowed",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"txOrigin",type:"address"},{internalType:"uint64",name:"nonceBucket",type:"uint64"}],name:"lastOtcTxOriginNonce",outputs:[{internalType:"uint128",name:"lastNonce",type:"uint128"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"enum LibNFTOrder.TradeDirection",name:"direction",type:"uint8"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"contract IERC20TokenV06",name:"erc20Token",type:"address"},{internalType:"uint256",name:"erc20TokenAmount",type:"uint256"},{components:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"feeData",type:"bytes"}],internalType:"struct LibNFTOrder.Fee[]",name:"fees",type:"tuple[]"},{internalType:"contract IERC721Token",name:"erc721Token",type:"address"},{internalType:"uint256",name:"erc721TokenId",type:"uint256"},{components:[{internalType:"contract IPropertyValidator",name:"propertyValidator",type:"address"},{internalType:"bytes",name:"propertyData",type:"bytes"}],internalType:"struct LibNFTOrder.Property[]",name:"erc721TokenProperties",type:"tuple[]"}],internalType:"struct LibNFTOrder.ERC721Order",name:"sellOrder",type:"tuple"},{components:[{internalType:"enum LibNFTOrder.TradeDirection",name:"direction",type:"uint8"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"contract IERC20TokenV06",name:"erc20Token",type:"address"},{internalType:"uint256",name:"erc20TokenAmount",type:"uint256"},{components:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"feeData",type:"bytes"}],internalType:"struct LibNFTOrder.Fee[]",name:"fees",type:"tuple[]"},{internalType:"contract IERC721Token",name:"erc721Token",type:"address"},{internalType:"uint256",name:"erc721TokenId",type:"uint256"},{components:[{internalType:"contract IPropertyValidator",name:"propertyValidator",type:"address"},{internalType:"bytes",name:"propertyData",type:"bytes"}],internalType:"struct LibNFTOrder.Property[]",name:"erc721TokenProperties",type:"tuple[]"}],internalType:"struct LibNFTOrder.ERC721Order",name:"buyOrder",type:"tuple"},{components:[{internalType:"enum LibSignature.SignatureType",name:"signatureType",type:"uint8"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],internalType:"struct LibSignature.Signature",name:"sellOrderSignature",type:"tuple"},{components:[{internalType:"enum LibSignature.SignatureType",name:"signatureType",type:"uint8"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],internalType:"struct LibSignature.Signature",name:"buyOrderSignature",type:"tuple"}],name:"matchERC721Orders",outputs:[{internalType:"uint256",name:"profit",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"target",type:"address"},{internalType:"bytes",name:"data",type:"bytes"},{internalType:"address",name:"newOwner",type:"address"}],name:"migrate",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IERC20TokenV06",name:"outputToken",type:"address"},{components:[{internalType:"enum IMultiplexFeature.MultiplexSubcall",name:"id",type:"uint8"},{internalType:"uint256",name:"sellAmount",type:"uint256"},{internalType:"bytes",name:"data",type:"bytes"}],internalType:"struct IMultiplexFeature.BatchSellSubcall[]",name:"calls",type:"tuple[]"},{internalType:"uint256",name:"minBuyAmount",type:"uint256"}],name:"multiplexBatchSellEthForToken",outputs:[{internalType:"uint256",name:"boughtAmount",type:"uint256"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IERC20TokenV06",name:"inputToken",type:"address"},{components:[{internalType:"enum IMultiplexFeature.MultiplexSubcall",name:"id",type:"uint8"},{internalType:"uint256",name:"sellAmount",type:"uint256"},{internalType:"bytes",name:"data",type:"bytes"}],internalType:"struct IMultiplexFeature.BatchSellSubcall[]",name:"calls",type:"tuple[]"},{internalType:"uint256",name:"sellAmount",type:"uint256"},{internalType:"uint256",name:"minBuyAmount",type:"uint256"}],name:"multiplexBatchSellTokenForEth",outputs:[{internalType:"uint256",name:"boughtAmount",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IERC20TokenV06",name:"inputToken",type:"address"},{internalType:"contract IERC20TokenV06",name:"outputToken",type:"address"},{components:[{internalType:"enum IMultiplexFeature.MultiplexSubcall",name:"id",type:"uint8"},{internalType:"uint256",name:"sellAmount",type:"uint256"},{internalType:"bytes",name:"data",type:"bytes"}],internalType:"struct IMultiplexFeature.BatchSellSubcall[]",name:"calls",type:"tuple[]"},{internalType:"uint256",name:"sellAmount",type:"uint256"},{internalType:"uint256",name:"minBuyAmount",type:"uint256"}],name:"multiplexBatchSellTokenForToken",outputs:[{internalType:"uint256",name:"boughtAmount",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address[]",name:"tokens",type:"address[]"},{components:[{internalType:"enum IMultiplexFeature.MultiplexSubcall",name:"id",type:"uint8"},{internalType:"bytes",name:"data",type:"bytes"}],internalType:"struct IMultiplexFeature.MultiHopSellSubcall[]",name:"calls",type:"tuple[]"},{internalType:"uint256",name:"minBuyAmount",type:"uint256"}],name:"multiplexMultiHopSellEthForToken",outputs:[{internalType:"uint256",name:"boughtAmount",type:"uint256"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address[]",name:"tokens",type:"address[]"},{components:[{internalType:"enum IMultiplexFeature.MultiplexSubcall",name:"id",type:"uint8"},{internalType:"bytes",name:"data",type:"bytes"}],internalType:"struct IMultiplexFeature.MultiHopSellSubcall[]",name:"calls",type:"tuple[]"},{internalType:"uint256",name:"sellAmount",type:"uint256"},{internalType:"uint256",name:"minBuyAmount",type:"uint256"}],name:"multiplexMultiHopSellTokenForEth",outputs:[{internalType:"uint256",name:"boughtAmount",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address[]",name:"tokens",type:"address[]"},{components:[{internalType:"enum IMultiplexFeature.MultiplexSubcall",name:"id",type:"uint8"},{internalType:"bytes",name:"data",type:"bytes"}],internalType:"struct IMultiplexFeature.MultiHopSellSubcall[]",name:"calls",type:"tuple[]"},{internalType:"uint256",name:"sellAmount",type:"uint256"},{internalType:"uint256",name:"minBuyAmount",type:"uint256"}],name:"multiplexMultiHopSellTokenForToken",outputs:[{internalType:"uint256",name:"boughtAmount",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"operator",type:"address"},{internalType:"address",name:"from",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"data",type:"bytes"}],name:"onERC1155Received",outputs:[{internalType:"bytes4",name:"success",type:"bytes4"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"operator",type:"address"},{internalType:"address",name:"from",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"bytes",name:"data",type:"bytes"}],name:"onERC721Received",outputs:[{internalType:"bytes4",name:"success",type:"bytes4"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"ownerAddress",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"enum LibNFTOrder.TradeDirection",name:"direction",type:"uint8"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"contract IERC20TokenV06",name:"erc20Token",type:"address"},{internalType:"uint256",name:"erc20TokenAmount",type:"uint256"},{components:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"feeData",type:"bytes"}],internalType:"struct LibNFTOrder.Fee[]",name:"fees",type:"tuple[]"},{internalType:"contract IERC1155Token",name:"erc1155Token",type:"address"},{internalType:"uint256",name:"erc1155TokenId",type:"uint256"},{components:[{internalType:"contract IPropertyValidator",name:"propertyValidator",type:"address"},{internalType:"bytes",name:"propertyData",type:"bytes"}],internalType:"struct LibNFTOrder.Property[]",name:"erc1155TokenProperties",type:"tuple[]"},{internalType:"uint128",name:"erc1155TokenAmount",type:"uint128"}],internalType:"struct LibNFTOrder.ERC1155Order",name:"order",type:"tuple"}],name:"preSignERC1155Order",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum LibNFTOrder.TradeDirection",name:"direction",type:"uint8"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"contract IERC20TokenV06",name:"erc20Token",type:"address"},{internalType:"uint256",name:"erc20TokenAmount",type:"uint256"},{components:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"feeData",type:"bytes"}],internalType:"struct LibNFTOrder.Fee[]",name:"fees",type:"tuple[]"},{internalType:"contract IERC721Token",name:"erc721Token",type:"address"},{internalType:"uint256",name:"erc721TokenId",type:"uint256"},{components:[{internalType:"contract IPropertyValidator",name:"propertyValidator",type:"address"},{internalType:"bytes",name:"propertyData",type:"bytes"}],internalType:"struct LibNFTOrder.Property[]",name:"erc721TokenProperties",type:"tuple[]"}],internalType:"struct LibNFTOrder.ERC721Order",name:"order",type:"tuple"}],name:"preSignERC721Order",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"signer",type:"address"},{internalType:"bool",name:"allowed",type:"bool"}],name:"registerAllowedOrderSigner",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address[]",name:"origins",type:"address[]"},{internalType:"bool",name:"allowed",type:"bool"}],name:"registerAllowedRfqOrigins",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"},{internalType:"address",name:"targetImpl",type:"address"}],name:"rollback",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum LibNFTOrder.TradeDirection",name:"direction",type:"uint8"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"contract IERC20TokenV06",name:"erc20Token",type:"address"},{internalType:"uint256",name:"erc20TokenAmount",type:"uint256"},{components:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"feeData",type:"bytes"}],internalType:"struct LibNFTOrder.Fee[]",name:"fees",type:"tuple[]"},{internalType:"contract IERC1155Token",name:"erc1155Token",type:"address"},{internalType:"uint256",name:"erc1155TokenId",type:"uint256"},{components:[{internalType:"contract IPropertyValidator",name:"propertyValidator",type:"address"},{internalType:"bytes",name:"propertyData",type:"bytes"}],internalType:"struct LibNFTOrder.Property[]",name:"erc1155TokenProperties",type:"tuple[]"},{internalType:"uint128",name:"erc1155TokenAmount",type:"uint128"}],internalType:"struct LibNFTOrder.ERC1155Order",name:"buyOrder",type:"tuple"},{components:[{internalType:"enum LibSignature.SignatureType",name:"signatureType",type:"uint8"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],internalType:"struct LibSignature.Signature",name:"signature",type:"tuple"},{internalType:"uint256",name:"erc1155TokenId",type:"uint256"},{internalType:"uint128",name:"erc1155SellAmount",type:"uint128"},{internalType:"bool",name:"unwrapNativeToken",type:"bool"},{internalType:"bytes",name:"callbackData",type:"bytes"}],name:"sellERC1155",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum LibNFTOrder.TradeDirection",name:"direction",type:"uint8"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"contract IERC20TokenV06",name:"erc20Token",type:"address"},{internalType:"uint256",name:"erc20TokenAmount",type:"uint256"},{components:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"feeData",type:"bytes"}],internalType:"struct LibNFTOrder.Fee[]",name:"fees",type:"tuple[]"},{internalType:"contract IERC721Token",name:"erc721Token",type:"address"},{internalType:"uint256",name:"erc721TokenId",type:"uint256"},{components:[{internalType:"contract IPropertyValidator",name:"propertyValidator",type:"address"},{internalType:"bytes",name:"propertyData",type:"bytes"}],internalType:"struct LibNFTOrder.Property[]",name:"erc721TokenProperties",type:"tuple[]"}],internalType:"struct LibNFTOrder.ERC721Order",name:"buyOrder",type:"tuple"},{components:[{internalType:"enum LibSignature.SignatureType",name:"signatureType",type:"uint8"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],internalType:"struct LibSignature.Signature",name:"signature",type:"tuple"},{internalType:"uint256",name:"erc721TokenId",type:"uint256"},{internalType:"bool",name:"unwrapNativeToken",type:"bool"},{internalType:"bytes",name:"callbackData",type:"bytes"}],name:"sellERC721",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes",name:"encodedPath",type:"bytes"},{internalType:"uint256",name:"minBuyAmount",type:"uint256"},{internalType:"address",name:"recipient",type:"address"}],name:"sellEthForTokenToUniswapV3",outputs:[{internalType:"uint256",name:"buyAmount",type:"uint256"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IERC20TokenV06",name:"inputToken",type:"address"},{internalType:"contract IERC20TokenV06",name:"outputToken",type:"address"},{internalType:"contract ILiquidityProvider",name:"provider",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"sellAmount",type:"uint256"},{internalType:"uint256",name:"minBuyAmount",type:"uint256"},{internalType:"bytes",name:"auxiliaryData",type:"bytes"}],name:"sellToLiquidityProvider",outputs:[{internalType:"uint256",name:"boughtAmount",type:"uint256"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IERC20TokenV06[]",name:"tokens",type:"address[]"},{internalType:"uint256",name:"sellAmount",type:"uint256"},{internalType:"uint256",name:"minBuyAmount",type:"uint256"},{internalType:"enum IPancakeSwapFeature.ProtocolFork",name:"fork",type:"uint8"}],name:"sellToPancakeSwap",outputs:[{internalType:"uint256",name:"buyAmount",type:"uint256"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IERC20TokenV06[]",name:"tokens",type:"address[]"},{internalType:"uint256",name:"sellAmount",type:"uint256"},{internalType:"uint256",name:"minBuyAmount",type:"uint256"},{internalType:"bool",name:"isSushi",type:"bool"}],name:"sellToUniswap",outputs:[{internalType:"uint256",name:"buyAmount",type:"uint256"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bytes",name:"encodedPath",type:"bytes"},{internalType:"uint256",name:"sellAmount",type:"uint256"},{internalType:"uint256",name:"minBuyAmount",type:"uint256"},{internalType:"address payable",name:"recipient",type:"address"}],name:"sellTokenForEthToUniswapV3",outputs:[{internalType:"uint256",name:"buyAmount",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes",name:"encodedPath",type:"bytes"},{internalType:"uint256",name:"sellAmount",type:"uint256"},{internalType:"uint256",name:"minBuyAmount",type:"uint256"},{internalType:"address",name:"recipient",type:"address"}],name:"sellTokenForTokenToUniswapV3",outputs:[{internalType:"uint256",name:"buyAmount",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"quoteSigner",type:"address"}],name:"setQuoteSigner",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"transformerDeployer",type:"address"}],name:"setTransformerDeployer",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"interfaceId",type:"bytes4"}],name:"supportInterface",outputs:[{internalType:"bool",name:"isSupported",type:"bool"}],stateMutability:"pure",type:"function"},{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32[]",name:"poolIds",type:"bytes32[]"}],name:"transferProtocolFeesForPools",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IERC20TokenV06",name:"erc20",type:"address"},{internalType:"uint256",name:"amountOut",type:"uint256"},{internalType:"address payable",name:"recipientWallet",type:"address"}],name:"transferTrappedTokensTo",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IERC20TokenV06",name:"inputToken",type:"address"},{internalType:"contract IERC20TokenV06",name:"outputToken",type:"address"},{internalType:"uint256",name:"inputTokenAmount",type:"uint256"},{internalType:"uint256",name:"minOutputTokenAmount",type:"uint256"},{components:[{internalType:"uint32",name:"deploymentNonce",type:"uint32"},{internalType:"bytes",name:"data",type:"bytes"}],internalType:"struct ITransformERC20Feature.Transformation[]",name:"transformations",type:"tuple[]"}],name:"transformERC20",outputs:[{internalType:"uint256",name:"outputTokenAmount",type:"uint256"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"int256",name:"amount0Delta",type:"int256"},{internalType:"int256",name:"amount1Delta",type:"int256"},{internalType:"bytes",name:"data",type:"bytes"}],name:"uniswapV3SwapCallback",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum LibNFTOrder.TradeDirection",name:"direction",type:"uint8"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"contract IERC20TokenV06",name:"erc20Token",type:"address"},{internalType:"uint256",name:"erc20TokenAmount",type:"uint256"},{components:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"feeData",type:"bytes"}],internalType:"struct LibNFTOrder.Fee[]",name:"fees",type:"tuple[]"},{internalType:"contract IERC1155Token",name:"erc1155Token",type:"address"},{internalType:"uint256",name:"erc1155TokenId",type:"uint256"},{components:[{internalType:"contract IPropertyValidator",name:"propertyValidator",type:"address"},{internalType:"bytes",name:"propertyData",type:"bytes"}],internalType:"struct LibNFTOrder.Property[]",name:"erc1155TokenProperties",type:"tuple[]"},{internalType:"uint128",name:"erc1155TokenAmount",type:"uint128"}],internalType:"struct LibNFTOrder.ERC1155Order",name:"order",type:"tuple"},{internalType:"uint256",name:"erc1155TokenId",type:"uint256"}],name:"validateERC1155OrderProperties",outputs:[],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"enum LibNFTOrder.TradeDirection",name:"direction",type:"uint8"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"contract IERC20TokenV06",name:"erc20Token",type:"address"},{internalType:"uint256",name:"erc20TokenAmount",type:"uint256"},{components:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"feeData",type:"bytes"}],internalType:"struct LibNFTOrder.Fee[]",name:"fees",type:"tuple[]"},{internalType:"contract IERC1155Token",name:"erc1155Token",type:"address"},{internalType:"uint256",name:"erc1155TokenId",type:"uint256"},{components:[{internalType:"contract IPropertyValidator",name:"propertyValidator",type:"address"},{internalType:"bytes",name:"propertyData",type:"bytes"}],internalType:"struct LibNFTOrder.Property[]",name:"erc1155TokenProperties",type:"tuple[]"},{internalType:"uint128",name:"erc1155TokenAmount",type:"uint128"}],internalType:"struct LibNFTOrder.ERC1155Order",name:"order",type:"tuple"},{components:[{internalType:"enum LibSignature.SignatureType",name:"signatureType",type:"uint8"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],internalType:"struct LibSignature.Signature",name:"signature",type:"tuple"}],name:"validateERC1155OrderSignature",outputs:[],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"enum LibNFTOrder.TradeDirection",name:"direction",type:"uint8"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"contract IERC20TokenV06",name:"erc20Token",type:"address"},{internalType:"uint256",name:"erc20TokenAmount",type:"uint256"},{components:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"feeData",type:"bytes"}],internalType:"struct LibNFTOrder.Fee[]",name:"fees",type:"tuple[]"},{internalType:"contract IERC721Token",name:"erc721Token",type:"address"},{internalType:"uint256",name:"erc721TokenId",type:"uint256"},{components:[{internalType:"contract IPropertyValidator",name:"propertyValidator",type:"address"},{internalType:"bytes",name:"propertyData",type:"bytes"}],internalType:"struct LibNFTOrder.Property[]",name:"erc721TokenProperties",type:"tuple[]"}],internalType:"struct LibNFTOrder.ERC721Order",name:"order",type:"tuple"},{internalType:"uint256",name:"erc721TokenId",type:"uint256"}],name:"validateERC721OrderProperties",outputs:[],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"enum LibNFTOrder.TradeDirection",name:"direction",type:"uint8"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"contract IERC20TokenV06",name:"erc20Token",type:"address"},{internalType:"uint256",name:"erc20TokenAmount",type:"uint256"},{components:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"feeData",type:"bytes"}],internalType:"struct LibNFTOrder.Fee[]",name:"fees",type:"tuple[]"},{internalType:"contract IERC721Token",name:"erc721Token",type:"address"},{internalType:"uint256",name:"erc721TokenId",type:"uint256"},{components:[{internalType:"contract IPropertyValidator",name:"propertyValidator",type:"address"},{internalType:"bytes",name:"propertyData",type:"bytes"}],internalType:"struct LibNFTOrder.Property[]",name:"erc721TokenProperties",type:"tuple[]"}],internalType:"struct LibNFTOrder.ERC721Order",name:"order",type:"tuple"},{components:[{internalType:"enum LibSignature.SignatureType",name:"signatureType",type:"uint8"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],internalType:"struct LibSignature.Signature",name:"signature",type:"tuple"}],name:"validateERC721OrderSignature",outputs:[],stateMutability:"view",type:"function"}],ye=function(){function e(){}return e.createInterface=function(){return new u.utils.Interface(pe)},e.connect=function(e,t){return new u.Contract(e,pe,t)},e}();ye.abi=pe;var ue=[{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_owner",type:"address"},{indexed:!0,internalType:"address",name:"_operator",type:"address"},{indexed:!1,internalType:"bool",name:"_approved",type:"bool"}],name:"ApprovalForAll",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_operator",type:"address"},{indexed:!0,internalType:"address",name:"_from",type:"address"},{indexed:!0,internalType:"address",name:"_to",type:"address"},{indexed:!1,internalType:"uint256[]",name:"_ids",type:"uint256[]"},{indexed:!1,internalType:"uint256[]",name:"_amounts",type:"uint256[]"}],name:"TransferBatch",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_operator",type:"address"},{indexed:!0,internalType:"address",name:"_from",type:"address"},{indexed:!0,internalType:"address",name:"_to",type:"address"},{indexed:!1,internalType:"uint256",name:"_id",type:"uint256"},{indexed:!1,internalType:"uint256",name:"_amount",type:"uint256"}],name:"TransferSingle",type:"event"},{inputs:[{internalType:"address",name:"_owner",type:"address"},{internalType:"uint256",name:"_id",type:"uint256"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address[]",name:"_owners",type:"address[]"},{internalType:"uint256[]",name:"_ids",type:"uint256[]"}],name:"balanceOfBatch",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_owner",type:"address"},{internalType:"address",name:"_operator",type:"address"}],name:"isApprovedForAll",outputs:[{internalType:"bool",name:"isOperator",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_from",type:"address"},{internalType:"address",name:"_to",type:"address"},{internalType:"uint256[]",name:"_ids",type:"uint256[]"},{internalType:"uint256[]",name:"_amounts",type:"uint256[]"},{internalType:"bytes",name:"_data",type:"bytes"}],name:"safeBatchTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_from",type:"address"},{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_id",type:"uint256"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"bytes",name:"_data",type:"bytes"}],name:"safeTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_operator",type:"address"},{internalType:"bool",name:"_approved",type:"bool"}],name:"setApprovalForAll",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"_interfaceID",type:"bytes4"}],name:"supportsInterface",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"pure",type:"function"}],oe=function(){function e(){}return e.createInterface=function(){return new u.utils.Interface(ue)},e.connect=function(e,t){return new u.Contract(e,ue,t)},e}();oe.abi=ue;var de=[{constant:!0,inputs:[],name:"name",outputs:[{name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_spender",type:"address"},{name:"_value",type:"uint256"}],name:"approve",outputs:[{name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[],name:"totalSupply",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_from",type:"address"},{name:"_to",type:"address"},{name:"_value",type:"uint256"}],name:"transferFrom",outputs:[{name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[],name:"decimals",outputs:[{name:"",type:"uint8"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{name:"_owner",type:"address"}],name:"balanceOf",outputs:[{name:"balance",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"symbol",outputs:[{name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_to",type:"address"},{name:"_value",type:"uint256"}],name:"transfer",outputs:[{name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[{name:"_owner",type:"address"},{name:"_spender",type:"address"}],name:"allowance",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{payable:!0,stateMutability:"payable",type:"fallback"},{anonymous:!1,inputs:[{indexed:!0,name:"owner",type:"address"},{indexed:!0,name:"spender",type:"address"},{indexed:!1,name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!0,name:"from",type:"address"},{indexed:!0,name:"to",type:"address"},{indexed:!1,name:"value",type:"uint256"}],name:"Transfer",type:"event"}],le=function(){function e(){}return e.createInterface=function(){return new u.utils.Interface(de)},e.connect=function(e,t){return new u.Contract(e,de,t)},e}();le.abi=de;var me=[{constant:!1,inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"approve",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!1,inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"mint",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!1,inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"safeTransferFrom",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!1,inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"bytes",name:"_data",type:"bytes"}],name:"safeTransferFrom",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!1,inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"bool",name:"approved",type:"bool"}],name:"setApprovalForAll",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!1,inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"transferFrom",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{inputs:[],payable:!1,stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"}],name:"Transfer",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"approved",type:"address"},{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"operator",type:"address"},{indexed:!1,internalType:"bool",name:"approved",type:"bool"}],name:"ApprovalForAll",type:"event"},{constant:!0,inputs:[{internalType:"address",name:"owner",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"getApproved",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"operator",type:"address"}],name:"isApprovedForAll",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"ownerOf",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{internalType:"bytes4",name:"interfaceId",type:"bytes4"}],name:"supportsInterface",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"}],ce=function(){function e(){}return e.createInterface=function(){return new u.utils.Interface(me)},e.connect=function(e,t){return new u.Contract(e,me,t)},e}();ce.abi=me;var Te,be=[{inputs:[{components:[{internalType:"address",name:"makerAddress",type:"address"},{internalType:"address",name:"takerAddress",type:"address"},{internalType:"address",name:"feeRecipientAddress",type:"address"},{internalType:"address",name:"senderAddress",type:"address"},{internalType:"uint256",name:"makerAssetAmount",type:"uint256"},{internalType:"uint256",name:"takerAssetAmount",type:"uint256"},{internalType:"uint256",name:"makerFee",type:"uint256"},{internalType:"uint256",name:"takerFee",type:"uint256"},{internalType:"uint256",name:"expirationTimeSeconds",type:"uint256"},{internalType:"uint256",name:"salt",type:"uint256"},{internalType:"bytes",name:"makerAssetData",type:"bytes"},{internalType:"bytes",name:"takerAssetData",type:"bytes"},{internalType:"bytes",name:"makerFeeAssetData",type:"bytes"},{internalType:"bytes",name:"takerFeeAssetData",type:"bytes"}],internalType:"struct IEIP1271Data.Order",name:"order",type:"tuple"},{internalType:"bytes32",name:"orderHash",type:"bytes32"}],name:"OrderWithHash",outputs:[],stateMutability:"pure",type:"function"}],ke=function(e,t){return e.cancelOrder(t)},fe=function(){var e=b(I.mark((function e(t,n){return I.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,t.getOrderInfo(n);case 2:return e.abrupt("return",e.sent);case 4:case"end":return e.stop()}}),e)})));return function(t,n){return e.apply(this,arguments)}}(),Ae=function(){var e=b(I.mark((function e(t,n){return I.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,t.getOrderInfo(n);case 2:return e.abrupt("return",e.sent.orderStatus);case 4:case"end":return e.stop()}}),e)})));return function(t,n){return e.apply(this,arguments)}}(),xe=function(e,t,n){var a=P(t,n);return i._TypedDataEncoder.hash(a,N,e)},ge=function(){var e=b(I.mark((function e(t,n,r,s){var y,u;return I.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return d=void 0,delete(d=k({},(o={domain:P(r,s),types:N,message:t}).types)).EIP712Domain,y=i._TypedDataEncoder.hash(o.domain,d,o.message),u=new p.Interface(be).encodeFunctionData("OrderWithHash",[t,y]),e.next=8,n.signMessage(a.arrayify(u));case 8:return e.abrupt("return",e.sent);case 10:case"end":return e.stop()}var o,d}),e)})));return function(t,n,a,r){return e.apply(this,arguments)}}(),ve=function(){var e=b(I.mark((function e(t,n,a,r){var i,s,p;return I.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return i=P(a,r),s=N,p=t,e.next=5,n._signTypedData(i,s,p);case 5:return e.abrupt("return",e.sent);case 7:case"end":return e.stop()}}),e)})));return function(t,n,a,r){return e.apply(this,arguments)}}(),he=function(){var e=b(I.mark((function e(t,n){var a,r,i,s,p;return I.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(a=!1,!t.getCode){e.next=6;break}return e.next=4,t.getCode(n);case 4:(r=e.sent)&&"0x"!=r&&(a=!0);case 6:return!!t._isSequenceProvider&&(a=!0),null!=(i=t.provider)&&i.isWalletConnect&&!("Sequence"!==(null==(s=i.connector)||null==(p=s._peerMeta)?void 0:p.description))&&(a=!0),e.abrupt("return",a);case 11:case"end":return e.stop()}}),e)})));return function(t,n){return e.apply(this,arguments)}}(),Ee=function(){var e=b(I.mark((function e(t,n,a,r,i,s,p){var y,u,o,d;return I.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(e.prev=0,y="eoa","eip1271"!==(null==p?void 0:p.signatureType)){e.next=6;break}y="eip1271",e.next=18;break;case 6:if("eoa"!==(null==p?void 0:p.signatureType)){e.next=10;break}y="eoa",e.next=18;break;case 10:if(!1!==(null==p?void 0:p.autodetectSignatureType)){e.next=14;break}y="eoa",e.next=18;break;case 14:return e.next=16,he(r,n);case 16:y=e.sent?"eip1271":"eoa";case 18:e.t0=y,e.next="eoa"===e.t0?21:"eip1271"===e.t0?26:31;break;case 21:return e.next=23,ve(t,a,i,s);case 23:return u=Oe(e.sent),e.abrupt("break",32);case 26:return e.next=28,ge(t,a,i,s);case 28:return o=u=e.sent,u=Re(o),e.abrupt("break",32);case 31:throw new Error("Unknown signature method chosen: "+y);case 32:return d=k({},t,{signature:u}),e.abrupt("return",d);case 36:throw e.prev=36,e.t1=e.catch(0),console.log("error signing order",e.t1),e.t1;case 40:case"end":return e.stop()}}),e,null,[[0,36]])})));return function(t,n,a,r,i,s,p){return e.apply(this,arguments)}}(),Oe=function(e){var t=a.splitSignature(e);return a.hexConcat([a.hexlify(t.v),t.r,t.s,"0x02"])},Re=function(e){return a.hexConcat([e,"0x07"])},Fe=function(e,t,n,i){var s=P(n,i);try{var p=e.makerAddress.toLowerCase(),y=a.hexDataLength(t),u=a.hexDataSlice(t,0,1),o=a.hexDataSlice(t,1,y-1),d=a.hexConcat([o,u]),l=a.joinSignature(d),m=r.verifyTypedData(s,N,e,l);return p.toLowerCase()===m.toLowerCase()}catch(e){return console.log(e),!1}},Ie=function(e,t,n){var a,r,i,p,u,o;if(1===e.length){var d=e[0];i=s.BigNumber.from(ee(d)),p=J(d,!1)}else{var l=e.map((function(e){return ee(e)})),m=e.map((function(e){return J(e,!0)}));p=X(l,m),i=s.BigNumber.from(1)}if(1===t.length){var c=t[0];u=s.BigNumber.from(ee(c)),o=J(c,!1)}else{var T=t.map((function(e){return ee(e)})),b=t.map((function(e){return J(e,!0)}));o=X(q(T),b),u=s.BigNumber.from(1)}return function(e){var t=e.makerAssetAmount,n=e.takerAssetAmount,a=e.makerAddress,r=e.makerAssetData,i=e.takerAssetData,p=e.takerAddress,u=e.expiration,o=e.salt,d=e.feeRecipientAddress,l=e.makerFeeAssetData,m=e.takerFeeAssetData,c=e.makerFee,T=e.takerFee,b=u?s.BigNumber.from(y(u)):_;return{makerAddress:a,makerAssetAmount:t.toString(),makerAssetData:r,takerAddress:p||C,takerAssetAmount:n.toString(),takerAssetData:i,expirationTimeSeconds:b.toString(),senderAddress:C,feeRecipientAddress:null!=d?d:"0xBCC02a155c374263321155555Ccf41070017649e",salt:null!=o?o:V(),makerFeeAssetData:null!=l?l:"0x",takerFeeAssetData:null!=m?m:"0x",makerFee:null!=c?c:S.toString(),takerFee:null!=T?T:S.toString()}}(k({makerAssetAmount:i,makerAssetData:p,takerAddress:null!=(a=n.takerAddress)?a:C,takerAssetAmount:u,takerAssetData:o,exchangeAddress:null!=(r=n.exchangeAddress)?r:""},n))},Se=function(){var e=b(I.mark((function e(t,n,a){return I.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.abrupt("return",n.fillOrKillOrder(M(t),t.takerAssetAmount,t.signature,a));case 1:case"end":return e.stop()}}),e)})));return function(t,n,a){return e.apply(this,arguments)}}(),Ce=function(){var e=b(I.mark((function e(t,n,a,r){var i,p,y,u,o,d,l,m,c,T,b,k;return I.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:e.t0=a.type,e.next="ERC20"===e.t0?3:"ERC721"===e.t0?10:"ERC1155"===e.t0?20:25;break;case 3:return i=le.connect(a.tokenAddress,r),e.next=6,i.allowance(t,n);case 6:return p=e.sent,y=s.BigNumber.from(Le.toString()).sub("100000000000000000"),u=p.gte(y),e.abrupt("return",{contractApproved:u});case 10:return o=ce.connect(a.tokenAddress,r),d=o.isApprovedForAll(t,n),l=o.getApproved(a.tokenId),e.next=15,Promise.all([d,l]);case 15:return c=(m=e.sent)[0],T=m[1].toLowerCase()===n.toLowerCase(),e.abrupt("return",{contractApproved:null!=c&&c,tokenIdApproved:T});case 20:return b=oe.connect(a.tokenAddress,r),e.next=23,b.isApprovedForAll(t,n);case 23:return e.abrupt("return",{contractApproved:null!=(k=e.sent)&&k});case 25:throw new U(a.type);case 26:case"end":return e.stop()}}),e)})));return function(t,n,a,r){return e.apply(this,arguments)}}(),Le=s.BigNumber.from(2).pow(118),we=function(){var e=b(I.mark((function e(t,n,a,r,i){var s,p,y,u,o;return I.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:void 0===r&&(r={}),void 0===i&&(i=!0),e.t0=n.type,e.next="ERC20"===e.t0?5:"ERC721"===e.t0?8:"ERC1155"===e.t0?11:16;break;case 5:return s=le.connect(n.tokenAddress,a),p=s.approve(t,i?Le.toString():0,k({},r)),e.abrupt("return",p);case 8:return y=ce.connect(n.tokenAddress,a),u=y.setApprovalForAll(t,i,k({},r)),e.abrupt("return",u);case 11:return o=oe.connect(n.tokenAddress,a),e.next=14,o.setApprovalForAll(t,i,k({},r));case 14:return e.abrupt("return",e.sent);case 16:throw new U(n.type);case 17:case"end":return e.stop()}}),e)})));return function(t,n,a,r,i){return e.apply(this,arguments)}}(),De=function(){var e=b(I.mark((function e(t,n,a,r,i){var s,p,y,u,o;return I.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:void 0===i&&(i=!0),e.t0=n.type,e.next="ERC20"===e.t0?5:"ERC721"===e.t0?8:"ERC1155"===e.t0?11:16;break;case 5:return s=le.connect(n.tokenAddress,a),p=s.estimateGas.approve(t,i?Le:0),e.abrupt("return",p);case 8:return y=ce.connect(n.tokenAddress,a),u=y.estimateGas.setApprovalForAll(t,i),e.abrupt("return",u);case 11:return o=oe.connect(n.tokenAddress,a),e.next=14,o.estimateGas.setApprovalForAll(t,i);case 14:return e.abrupt("return",e.sent);case 16:throw new U(n.type);case 17:case"end":return e.stop()}}),e)})));return function(t,n,a,r,i){return e.apply(this,arguments)}}(),Ne=function(){var e=b(I.mark((function e(t,n,a){return I.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,n.estimateGas.fillOrder(M(t),t.takerAssetAmount,t.signature);case 2:return e.abrupt("return",e.sent);case 4:case"end":return e.stop()}}),e)})));return function(t,n,a){return e.apply(this,arguments)}}(),_e=function e(t,a){var r,i=t.assetProxyId;switch(i){case exports.AssetProxyId.ERC20:return[{type:"ERC20",amount:a,tokenAddress:t.tokenAddress}];case exports.AssetProxyId.ERC721:return[{type:"ERC721",tokenAddress:t.tokenAddress,tokenId:t.tokenId}];case exports.AssetProxyId.ERC1155:return[{type:"ERC1155",tokenAddress:t.tokenAddress,tokenId:t.tokenIds[0],amount:null!=(r=t.tokenValues[0])?r:"1"}];case exports.AssetProxyId.MultiAsset:var s=t;return n(s.nestedAssetData.map((function(t,n){return e(t,s.amounts[n])}))).map((function(e,t){return k({},e,{amount:s.amounts[t]})}));default:throw new Error("Unsupported AssetProxyId "+(null==i?void 0:i.type))}},Pe=function(e){var t=$(e.makerAssetData),n=$(e.takerAssetData);return{makerAssets:_e(t,e.makerAssetAmount),takerAssets:_e(n,e.takerAssetAmount)}},Me={1:{exchange:"0x61935cbdd02287b511119ddb11aeb42f1593b7ef",erc20Proxy:"0x95e6f48254609a6ee006f7d493c8e5fb97094cef",erc721Proxy:"0xefc70a1b18c432bdc64b596838b4d138f6bc6cad",erc1155Proxy:"0x7eefbd48fd63d441ec7435d024ec7c5131019add",multiAssetProxy:"0xef701d5389ae74503d633396c4d654eabedc9d78",forwarder:"0x6958f5e95332d93d21af0d7b9ca85b8212fee0a5",wrappedNativeToken:"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2"},3:{exchange:"0x5d8c9ba74607d2cbc4176882a42d4ace891c1c00",erc20Proxy:"0xf1ec7d0ba42f15fb5c9e3adbe86431973e44764c",erc721Proxy:"0x070efeb7e5ffa3d1a59d03a219539551ae60ba43",erc1155Proxy:"0x7f10d80f2659aaae790ab03da12be11c4e6008c3",multiAssetProxy:"0x7b70a148e20b348c320208df84fdd642aab49fd0",forwarder:"0x2127a60bedfba1c01857b09b8f24094049c48493",wrappedNativeToken:null},4:{exchange:"0xf8becacec90bfc361c0a2c720839e08405a72f6d",erc20Proxy:"0x070efeb7e5ffa3d1a59d03a219539551ae60ba43",erc721Proxy:"0x7f10d80f2659aaae790ab03da12be11c4e6008c3",erc1155Proxy:"0xaa460127562482faa5df42f2c39a025cd4a1cc0a",multiAssetProxy:"0xb344afed348de15eb4a9e180205a2b0739628339",forwarder:"0x18571835c95a6d79b2f5c45b676ccd16f5fa34a1",wrappedNativeToken:"0xc778417e063141139fce010982780140aa0cd5ab"},42:{exchange:"0xf1ec7d0ba42f15fb5c9e3adbe86431973e44764c",erc20Proxy:"0xaa460127562482faa5df42f2c39a025cd4a1cc0a",erc721Proxy:"0x7b70a148e20b348c320208df84fdd642aab49fd0",erc1155Proxy:"0xb344afed348de15eb4a9e180205a2b0739628339",multiAssetProxy:"0x58a01e826e60731247e7de8b446ed4c8535a099c",forwarder:"0x01c0ecf5d1a22de07a2de84c322bfa2b5435990e",wrappedNativeToken:"0xd0a1e359811322d97991e03f863a0c30c2cf029c"},56:{exchange:"0x0000000000000000000000000000000000000000",erc20Proxy:"0x0000000000000000000000000000000000000000",erc721Proxy:"0x0000000000000000000000000000000000000000",erc1155Proxy:"0x0000000000000000000000000000000000000000",multiAssetProxy:"0x0000000000000000000000000000000000000000",forwarder:"0x0000000000000000000000000000000000000000",wrappedNativeToken:null},137:{exchange:"0x0C58C1170f1DEd633862A1166f52107490a9C594",erc20Proxy:"0xb9456408E12f3587Ed59E07CC6916768D1117907",erc721Proxy:"0x9F1949A5c3AC012fFcded5e93ffD97A86dBF98cC",erc1155Proxy:"0x633d89e0C08D3C482C4E0bEE674692A48cADD680",multiAssetProxy:"0x4f9b1eDAE8C75b9e1934ce21De598ff0D9f32aBD",forwarder:"0x163978F66E23bE5a64DBCd224dd90B78C2f71B98",wrappedNativeToken:"0x0d500b1d8e8ef31e21c99d1db9a6444d3adf1270"},1337:{erc20Proxy:"0x1dc4c1cefef38a777b15aa20260a54e584b16c48",erc721Proxy:"0x0000000000000000000000000000000000000000",erc1155Proxy:"0x0000000000000000000000000000000000000000",exchange:"0x0000000000000000000000000000000000000000",multiAssetProxy:"0x0000000000000000000000000000000000000000",forwarder:"0x5d3ad3561a1235273cbcb4e82fce63a0073d19be",wrappedNativeToken:null},43114:{exchange:"0x0000000000000000000000000000000000000000",erc20Proxy:"0x0000000000000000000000000000000000000000",erc721Proxy:"0x0000000000000000000000000000000000000000",erc1155Proxy:"0x0000000000000000000000000000000000000000",multiAssetProxy:"0x0000000000000000000000000000000000000000",forwarder:"0x0000000000000000000000000000000000000000",wrappedNativeToken:null},80001:{exchange:"0x9866c45224667061f8c9e66db38d9316a8d68951",erc20Proxy:"0xfcEB29377a6e0A86E9fa648016b459AB8Fbfcf5A",erc721Proxy:"0x0C58C1170f1DEd633862A1166f52107490a9C594",erc1155Proxy:"0x9F1949A5c3AC012fFcded5e93ffD97A86dBF98cC",multiAssetProxy:"0xA01Fae8743bb144D4411292a1e6e0B5bfF84Fc5A",forwarder:"0xEE9c5Ed9b1bbf9Bf66575Bcc0Eb37dBeC2C525F1",wrappedNativeToken:"0x9c3c9283d3e44854697cd22d3faa240cfb032889"}},Ve=function(e,t){return void 0===t&&(t=Me),t[e.toString(10)]},Be=function(e,t,n){void 0===n&&(n=Me);var a=Ve(t,n);if(!a)throw new G(t);switch(e){case"ERC20":return a.erc20Proxy;case"ERC721":return a.erc721Proxy;case"ERC1155":return a.erc1155Proxy;default:throw new U(e)}},Ue=((Te={})[exports.SupportedChainIdsV3.Polygon]=1.5,Te[exports.SupportedChainIdsV3.PolygonMumbai]=1.5,Te[exports.SupportedChainIdsV3.Kovan]=1.5,Te),Ge=function(e){return new Promise((function(t){var n=setTimeout((function(){clearTimeout(n),t()}),e)}))},He=function(){function e(e,n,a,r){var i,s,p,y,u,o,d,l,m,c=this;this.cancelOrder=function(){var e=b(I.mark((function e(t){return I.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.abrupt("return",ke(c.exchangeContract,t));case 1:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}(),this.waitUntilOrderFilledOrCancelled=function(){var e=b(I.mark((function e(t,n,a,r){var i,s,p,y,u,o;return I.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return void 0===n&&(n=6e4),void 0===a&&(a=1e4),void 0===r&&(r=!1),i=!1,s=Ge(n).then((function(e){return null})),p=function(){var e=b(I.mark((function e(){var n,s,p;return I.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(i){e.next=19;break}return e.next=3,c.getOrderInfo(t);case 3:if((n=e.sent).orderStatus!==exports.OrderStatusV3.Fillable){e.next=10;break}return e.next=7,Ge(a);case 7:return e.abrupt("continue",0);case 10:if(n.orderStatus!==exports.OrderStatusV3.FullyFilled){e.next=14;break}return e.abrupt("return",n);case 14:if(!r){e.next=16;break}throw new Error(null!=(s=null!=(p=w[n.orderStatus])?p:n.orderStatus)?s:"Unknown status");case 16:return e.abrupt("return",n);case 17:e.next=0;break;case 19:return e.abrupt("return",null);case 20:case"end":return e.stop()}}),e)})));return function(){return e.apply(this,arguments)}}(),y=function(){var e=b(I.mark((function e(){return I.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,Ge(2*n);case 2:return e.abrupt("return",null);case 3:case"end":return e.stop()}}),e)})));return function(){return e.apply(this,arguments)}}(),u=p(),o=y(),e.next=11,Promise.any([s,u,o]);case 11:return i=!0,e.abrupt("return",e.sent);case 14:case"end":return e.stop()}}),e)})));return function(t,n,a,r){return e.apply(this,arguments)}}(),this.getOrderInfo=function(){var e=b(I.mark((function e(t){return I.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.abrupt("return",fe(c.exchangeContract,t));case 1:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}(),this.getOrderStatus=function(){var e=b(I.mark((function e(t){return I.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,c.getOrderInfo(t);case 2:return e.abrupt("return",e.sent.orderStatus);case 4:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}(),this.awaitTransactionHash=function(){var e=b(I.mark((function e(t){return I.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.abrupt("return",c.provider.waitForTransaction(t));case 1:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}(),this.signOrder=function(){var e=b(I.mark((function e(t,n,a,r){var i;return I.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(i=null!=a?a:c.signer){e.next=3;break}throw new Error("signOrder:Signer undefined");case 3:return e.abrupt("return",Ee(t,n,i,c.provider,c.chainId,c.exchangeContract.address,r));case 4:case"end":return e.stop()}}),e)})));return function(t,n,a,r){return e.apply(this,arguments)}}(),this.buildOrder=function(e,t,n,a){var r=k({},{chainId:c.chainId,makerAddress:n},a);return Ie(ne(e),ne(t),r)},this.loadApprovalStatus=function(){var e=b(I.mark((function e(t,n){var a,r;return I.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return a=Be(t.type,c.chainId),r=te(t),e.abrupt("return",Ce(n,a,r,c.provider));case 3:case"end":return e.stop()}}),e)})));return function(t,n){return e.apply(this,arguments)}}(),this.getOrderHash=function(e){return xe(e,c.chainId,c.exchangeContract.address)},this.getTypedData=function(e,t,n){return{domain:P(e,t),types:N,value:n}},this.getAssetsFromOrder=function(e){return Pe(e)},this.checkIfOrderCanBeFilledWithNativeToken=function(e,n){var a,r;void 0===n&&(n=null!=(r=c.wrappedNativeTokenContractAddress)?r:void 0);var i=$(e.takerAssetData);if(i.assetProxyId.toLowerCase()!==exports.AssetProxyId.ERC20.toLowerCase())return!1;var s=i.tokenAddress;return s||t(!1),s.toLowerCase()===(null==(a=n)?void 0:a.toLowerCase())},this.fillSignedOrder=function(){var e=b(I.mark((function e(n,a,r){var i,s,p,y,u,o,d,l;return I.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(void 0===r&&(r={}),s=null!=(i=null==a?void 0:a.exchangeContract)?i:c.exchangeContract,p=void 0,!(p=null===(null==a?void 0:a.gasAmountBufferMultiple)?void 0:null!=(y=null==a?void 0:a.gasAmountBufferMultiple)?y:c.getGasMultipleForChainId(c.chainId))){e.next=9;break}return e.next=7,Ne(n,s);case 7:u=Math.floor(e.sent.toNumber()*p);case 9:if(o=k({gasLimit:u},r),null==a||!a.fillOrderWithNativeTokenInsteadOfWrappedToken){e.next=17;break}return c.checkIfOrderCanBeFilledWithNativeToken(n),c.forwarderContractAddress||t(!1),l=se.connect(c.forwarderContractAddress,null!=(d=c.signer)?d:c.provider),e.abrupt("return",l.marketBuyOrdersWithEth([n],n.makerAssetAmount,[n.signature],[],[],k({value:n.takerAssetAmount},o)));case 17:return e.abrupt("return",Se(n,s,o));case 18:case"end":return e.stop()}}),e)})));return function(t,n,a){return e.apply(this,arguments)}}(),this.getGasMultipleForChainId=function(e){if(c.gasBufferMultiples)return c.gasBufferMultiples[c.chainId]},this.normalizeOrder=function(e){return M(e)},this.normalizeSignedOrder=function(e){return M(e)},this.verifyOrderSignature=function(e,t,n,a){return Fe(e,t,n,a)},this.provider=e,this.signer=n,this.chainId=null!=a?a:this.provider._network.chainId;var T=Me[this.chainId],f=null!=(i=null==r?void 0:r.exchangeContractAddress)?i:null==T?void 0:T.exchange;this.exchangeContractAddress=f,this.erc20ProxyContractAddress=null!=(s=null==r?void 0:r.erc20ProxyContractAddress)?s:Be(exports.SupportedTokenTypes.ERC20,this.chainId),this.erc721ProxyContractAddress=null!=(p=null==r?void 0:r.erc721ProxyContractAddress)?p:Be(exports.SupportedTokenTypes.ERC721,this.chainId),this.erc1155ProxyContractAddress=null!=(y=null==r?void 0:r.erc1155ProxyContractAddress)?y:Be(exports.SupportedTokenTypes.ERC1155,this.chainId),this.forwarderContractAddress=null!=(u=null!=(o=null==r?void 0:r.forwarderContractAddress)?o:function(e,t){void 0===t&&(t=Me);var n=Ve(e,t);if(!n)throw new G(e);return n.forwarder}(this.chainId))?u:null,this.wrappedNativeTokenContractAddress=null!=(d=null!=(l=null==r?void 0:r.wrappedNativeTokenContractAddress)?l:function(e,t){var n;void 0===t&&(t=Me);var a=Ve(e,t);return null!=(n=null==a?void 0:a.wrappedNativeToken)?n:null}(this.chainId))?d:null,this.exchangeContractAddress||t(!1),this.exchangeContract=re.connect(f,null!=n?n:e),this.gasBufferMultiples=null!=(m=null==r?void 0:r.gasBufferMultiples)?m:Ue}return e.prototype.approveTokenOrNftByAsset=function(){var e=b(I.mark((function e(t,n,a,r){var i,s,p,y,u,o,d,l,m;return I.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(y=null!=(i=null==r?void 0:r.exchangeProxyContractAddressForAsset)?i:Be(t.type,this.chainId),u=null!=(s=null==r?void 0:r.signer)?s:this.signer){e.next=4;break}throw new Error("approveTokenOrNftByAsset:Signer null");case 4:if(o=void 0,!(o=null===(null==r?void 0:r.gasAmountBufferMultiple)?void 0:null!=(d=null==r?void 0:r.gasAmountBufferMultiple)?d:this.getGasMultipleForChainId(this.chainId))){e.next=12;break}return e.next=10,De(y,te(t),u,null!=a?a:{},null==(m=null==r?void 0:r.approve)||m);case 10:l=Math.floor(e.sent.toNumber()*o);case 12:return e.abrupt("return",we(y,te(t),u,k({gasLimit:l},a),null==(p=null==r?void 0:r.approve)||p));case 13:case"end":return e.stop()}}),e,this)})));return function(t,n,a,r){return e.apply(this,arguments)}}(),e}(),qe=[{type:"uint8",name:"direction"},{type:"address",name:"maker"},{type:"address",name:"taker"},{type:"uint256",name:"expiry"},{type:"uint256",name:"nonce"},{type:"address",name:"erc20Token"},{type:"uint256",name:"erc20TokenAmount"},{type:"Fee[]",name:"fees"},{type:"address",name:"erc721Token"},{type:"uint256",name:"erc721TokenId"},{type:"Property[]",name:"erc721TokenProperties"}],We=[{type:"uint8",name:"direction"},{type:"address",name:"maker"},{type:"address",name:"taker"},{type:"uint256",name:"expiry"},{type:"uint256",name:"nonce"},{type:"address",name:"erc20Token"},{type:"uint256",name:"erc20TokenAmount"},{type:"Fee[]",name:"fees"},{type:"address",name:"erc1155Token"},{type:"uint256",name:"erc1155TokenId"},{type:"Property[]",name:"erc1155TokenProperties"},{type:"uint128",name:"erc1155TokenAmount"}],je=[{type:"address",name:"recipient"},{type:"uint256",name:"amount"},{type:"bytes",name:"feeData"}],Qe=[{type:"address",name:"propertyValidator"},{type:"bytes",name:"propertyData"}],Ke="0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee",Ze=function(){var e=b(I.mark((function e(t,n,a,r){var i,s,p,y,u,o,d,l;return I.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!t.erc1155Token){e.next=8;break}return s={chainId:a,verifyingContract:r,name:"ZeroEx",version:"1.0.0"},(i={}).ERC1155Order=We,i.Fee=je,i.Property=Qe,p=i,y=t,e.next=6,n._signTypedData(s,p,y);case 6:return e.abrupt("return",e.sent);case 8:if(!t.erc721Token){e.next=16;break}return o={chainId:a,verifyingContract:r,name:"ZeroEx",version:"1.0.0"},(u={}).ERC721Order=qe,u.Fee=je,u.Property=Qe,d=u,l=t,e.next=14,n._signTypedData(o,d,l);case 14:return e.abrupt("return",e.sent);case 16:throw new Error("Unknown order type");case 18:case"end":return e.stop()}}),e)})));return function(t,n,a,r){return e.apply(this,arguments)}}(),Ye=function(){var e=b(I.mark((function e(t,n,a,r){var i,p,y,u,o,d,l,m,c,T,b,k;return I.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:e.t0=a.type,e.next="ERC20"===e.t0?3:"ERC721"===e.t0?12:"ERC1155"===e.t0?22:27;break;case 3:if(a.tokenAddress.toLowerCase()!==Ke){e.next=5;break}return e.abrupt("return",{contractApproved:!0});case 5:return i=le.connect(a.tokenAddress,r),e.next=8,i.allowance(t,n);case 8:return p=e.sent,y=s.BigNumber.from(Xe.toString()).sub("100000000000000000"),u=p.gte(y),e.abrupt("return",{contractApproved:u});case 12:return o=ce.connect(a.tokenAddress,r),d=o.isApprovedForAll(t,n),l=o.getApproved(a.tokenId),e.next=17,Promise.all([d,l]);case 17:return c=(m=e.sent)[0],T=m[1].toLowerCase()===n.toLowerCase(),e.abrupt("return",{contractApproved:null!=c&&c,tokenIdApproved:T});case 22:return b=oe.connect(a.tokenAddress,r),e.next=25,b.isApprovedForAll(t,n);case 25:return e.abrupt("return",{contractApproved:null!=(k=e.sent)&&k});case 27:throw new U(a.type);case 28:case"end":return e.stop()}}),e)})));return function(t,n,a,r){return e.apply(this,arguments)}}(),Xe=s.BigNumber.from(2).pow(118),ze=function(){var e=b(I.mark((function e(t,n,a,r,i){var s,p,y,u,o,d,l,m;return I.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:void 0===r&&(r={}),p=null==(s=null==i?void 0:i.approve)||s,e.t0=n.type,e.next="ERC20"===e.t0?5:"ERC721"===e.t0?8:"ERC1155"===e.t0?14:19;break;case 5:return y=le.connect(n.tokenAddress,a),u=y.approve(t,p?Xe.toString():0,k({},r)),e.abrupt("return",u);case 8:if(o=ce.connect(n.tokenAddress,a),null==i||!i.approvalOnlyTokenIdIfErc721){e.next=12;break}return d=o.approve(t,n.tokenId,k({},r)),e.abrupt("return",d);case 12:return l=o.setApprovalForAll(t,p,k({},r)),e.abrupt("return",l);case 14:return m=oe.connect(n.tokenAddress,a),e.next=17,m.setApprovalForAll(t,p,k({},r));case 17:return e.abrupt("return",e.sent);case 19:throw new U(n.type);case 20:case"end":return e.stop()}}),e)})));return function(t,n,a,r,i){return e.apply(this,arguments)}}();function Je(e){var t=a.hexDataLength(e);if(65!==t)throw new Error("Invalid signature length, expected 65, got "+t+'.\n"Raw signature: '+e+'"');var n=[0,1,27,28],r=parseInt(e.slice(-2),16);if(n.includes(r))return r=r>=27?r:r+27,{r:a.hexDataSlice(e,0,32),s:a.hexDataSlice(e,32,64),v:r};if(r=parseInt(e.slice(2,4),16),!n.includes(r))throw new Error('Cannot determine RPC signature layout from V value: "'+e+'"');return{v:r=r>=27?r:r+27,r:a.hexDataSlice(e,1,33),s:a.hexDataSlice(e,33,65)}}var $e,et,tt,nt=s.BigNumber.from(2524604400),at="1001".length,rt=function(e){var n=e.length<=39-at,a=/^\d+$/.test(e);n||t(!1),a||t(!1)},it=function(e){void 0===e&&(e="314159"),e&&rt(e);var n=l(st(),39,"0"),a=""+d("1001"+e,39,"0")+n;return a.length<=78||t(!1),a},st=function(e){void 0===e&&(e=10);var t="0x"+o.v4().replace(/-/g,"");return BigInt(t).toString(e)},pt=function(e){if("erc721Token"in e)return k({},e,{direction:parseInt(e.direction.toString()),expiry:e.expiry.toString(),nonce:e.nonce.toString(),erc20TokenAmount:e.erc20TokenAmount.toString(),fees:e.fees.map((function(e){return k({},e,{amount:e.amount.toString(),feeData:e.feeData.toString()})})),erc721TokenId:e.erc721TokenId.toString()});if("erc1155Token"in e)return k({},e,{direction:parseInt(e.direction.toString()),expiry:e.expiry.toString(),nonce:e.nonce.toString(),erc20TokenAmount:e.erc20TokenAmount.toString(),fees:e.fees.map((function(e){return k({},e,{amount:e.amount.toString(),feeData:e.feeData.toString()})})),erc1155TokenAmount:e.erc1155TokenAmount.toString(),erc1155TokenId:e.erc1155TokenId.toString()});throw console.log("unknown order format type (not erc721 and not erc1155",e),new Error("Unknown asset type")},yt=[{inputs:[{components:[{internalType:"enum LibNFTOrder.TradeDirection",name:"direction",type:"uint8"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"contract IERC20TokenV06",name:"erc20Token",type:"address"},{internalType:"uint256",name:"erc20TokenAmount",type:"uint256"},{components:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"feeData",type:"bytes"}],internalType:"struct LibNFTOrder.Fee[]",name:"fees",type:"tuple[]"},{internalType:"contract IERC721Token",name:"erc721Token",type:"address"},{internalType:"uint256",name:"erc721TokenId",type:"uint256"},{components:[{internalType:"contract IPropertyValidator",name:"propertyValidator",type:"address"},{internalType:"bytes",name:"propertyData",type:"bytes"}],internalType:"struct LibNFTOrder.Property[]",name:"erc721TokenProperties",type:"tuple[]"}],internalType:"struct LibNFTOrder.ERC721Order",name:"order",type:"tuple"},{components:[{internalType:"enum LibSignature.SignatureType",name:"signatureType",type:"uint8"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],internalType:"struct LibSignature.Signature",name:"signature",type:"tuple"},{name:"unwrapNativeToken",type:"bool"}],name:"safeTransferFromErc721Data",outputs:[],stateMutability:"view",type:"function"}],ut=[{inputs:[{components:[{internalType:"enum LibNFTOrder.TradeDirection",name:"direction",type:"uint8"},{internalType:"address",name:"maker",type:"address"},{internalType:"address",name:"taker",type:"address"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"contract IERC20TokenV06",name:"erc20Token",type:"address"},{internalType:"uint256",name:"erc20TokenAmount",type:"uint256"},{components:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"feeData",type:"bytes"}],internalType:"struct LibNFTOrder.Fee[]",name:"fees",type:"tuple[]"},{internalType:"contract IERC1155Token",name:"erc1155Token",type:"address"},{internalType:"uint256",name:"erc1155TokenId",type:"uint256"},{components:[{internalType:"contract IPropertyValidator",name:"propertyValidator",type:"address"},{internalType:"bytes",name:"propertyData",type:"bytes"}],internalType:"struct LibNFTOrder.Property[]",name:"erc1155TokenProperties",type:"tuple[]"},{internalType:"uint128",name:"erc1155TokenAmount",type:"uint128"}],internalType:"struct LibNFTOrder.ERC1155Order[]",name:"sellOrders",type:"tuple[]"},{components:[{internalType:"enum LibSignature.SignatureType",name:"signatureType",type:"uint8"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],internalType:"struct LibSignature.Signature",name:"signature",type:"tuple"},{name:"unwrapNativeToken",type:"bool"}],name:"safeTransferFromErc1155Data",outputs:[],stateMutability:"view",type:"function"}],ot={1:{exchange:"0xdef1c0ded9bec7f1a1670819833240f027b25eff",wrappedNativeToken:"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2"},3:{exchange:"0xdef1c0ded9bec7f1a1670819833240f027b25eff",wrappedNativeToken:"0xc778417e063141139fce010982780140aa0cd5ab"},4:{exchange:"0xdef1c0ded9bec7f1a1670819833240f027b25eff",wrappedNativeToken:"0xc778417e063141139fce010982780140aa0cd5ab"},5:{exchange:"0xf91bb752490473b8342a3e964e855b9f9a2a668e",wrappedNativeToken:"0xb4fbf271143f4fbf7b91a5ded31805e42b2208d6"},8:{exchange:"0x19aaD856cE8c4C7e813233b21d56dA97796cC052",wrappedNativeToken:"0x1FA6A37c64804C0D797bA6bC1955E50068FbF362"},10:{exchange:"0xdef1abe32c034e558cdd535791643c58a13acc10",wrappedNativeToken:"0x4200000000000000000000000000000000000006"},42:{exchange:"0xdef1c0ded9bec7f1a1670819833240f027b25eff",wrappedNativeToken:"0xd0a1e359811322d97991e03f863a0c30c2cf029c"},56:{exchange:"0xdef1c0ded9bec7f1a1670819833240f027b25eff",wrappedNativeToken:"0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"},137:{exchange:"0xdef1c0ded9bec7f1a1670819833240f027b25eff",wrappedNativeToken:"0x0d500b1d8e8ef31e21c99d1db9a6444d3adf1270"},250:{exchange:"0xdef189deaef76e379df891899eb5a00a94cbc250",wrappedNativeToken:"0x21be370d5312f44cb42ce377bc9b8a0cef1a4c83"},1337:{exchange:"0x5315e44798395d4a952530d131249fe00f554565",wrappedNativeToken:"0x0b1ba0af832d7c05fd64161e0db78e85978e8082"},42161:{exchange:"0xdef1c0ded9bec7f1a1670819833240f027b25eff",wrappedNativeToken:"0x82af49447d8a07e3bd95bd0d56f35241523fbab1"},42220:{exchange:"0xdef1c0ded9bec7f1a1670819833240f027b25eff",wrappedNativeToken:"0x471EcE3750Da237f93B8E339c536989b8978a438"},43114:{exchange:"0xdef1c0ded9bec7f1a1670819833240f027b25eff",wrappedNativeToken:"0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7"},80001:{exchange:"0x4fb72262344034e034fce3d9c701fd9213a55260",wrappedNativeToken:"0x9c3c9283d3e44854697cd22d3faa240cfb032889"}},dt=function(){var e=b(I.mark((function e(t,n,a,r,i){var s,p,y;return I.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return void 0===a&&(a={}),void 0===i&&(i=m),p={order:pt(t),chainId:n.toString(10),metadata:a},y=null!=(s=null==r?void 0:r.rootUrl)?s:"https://api.trader.xyz",e.next=6,i(y+"/orderbook/order",{method:"post",headers:{"Content-Type":"application/json"},body:JSON.stringify(p)}).then(function(){var e=b(I.mark((function e(t){return I.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(t.ok){e.next=4;break}return e.next=3,t.json();case 3:throw e.sent;case 4:if(!(t.status>=300)){e.next=8;break}return e.next=7,t.json();case 7:throw e.sent;case 8:return e.abrupt("return",t.json());case 9:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}()).catch((function(e){throw e}));case 6:return e.abrupt("return",e.sent);case 8:case"end":return e.stop()}}),e)})));return function(t,n,a,r,i){return e.apply(this,arguments)}}(),lt=function(){var e=b(I.mark((function e(t,n,a){var r,i,s;return I.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return void 0===a&&(a=m),i=c.stringify(null!=t?t:{},{arrayFormat:"none"}),s=null!=(r=null==n?void 0:n.rootUrl)?r:"https://api.trader.xyz",e.next=5,a(s+"/orderbook/orders?"+i).then(function(){var e=b(I.mark((function e(t){return I.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(t.ok){e.next=4;break}return e.next=3,t.json();case 3:throw e.sent;case 4:if(!(t.status>=300)){e.next=8;break}return e.next=7,t.json();case 7:throw e.sent;case 8:return e.abrupt("return",t.json());case 9:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}()).catch((function(e){throw e}));case 5:return e.abrupt("return",e.sent);case 7:case"end":return e.stop()}}),e)})));return function(t,n,a){return e.apply(this,arguments)}}();(et=exports.TradeDirection||(exports.TradeDirection={}))[et.SellNFT=0]="SellNFT",et[et.BuyNFT=1]="BuyNFT",(tt=exports.OrderStatusV4||(exports.OrderStatusV4={}))[tt.Invalid=0]="Invalid",tt[tt.Fillable=1]="Fillable",tt[tt.Unfillable=2]="Unfillable",tt[tt.Expired=3]="Expired";var mt,ct=(($e={})[exports.TradeDirection.BuyNFT]="buy",$e[exports.TradeDirection.SellNFT]="sell",$e),Tt={propertyValidator:C,propertyData:[]};(mt=exports.SupportedChainIdsV4||(exports.SupportedChainIdsV4={}))[mt.Mainnet=1]="Mainnet",mt[mt.Ropsten=3]="Ropsten",mt[mt.Goerli=5]="Goerli",mt[mt.Ubiq=8]="Ubiq",mt[mt.Ganache=1337]="Ganache",mt[mt.Polygon=137]="Polygon",mt[mt.PolygonMumbai=80001]="PolygonMumbai",mt[mt.BSC=56]="BSC",mt[mt.Optimism=10]="Optimism",mt[mt.Fantom=250]="Fantom",mt[mt.Celo=42220]="Celo",mt[mt.Avalance=43114]="Avalance";var bt=[exports.SupportedChainIdsV4.Polygon,exports.SupportedChainIdsV4.PolygonMumbai,exports.SupportedChainIdsV4.Mainnet,exports.SupportedChainIdsV4.Optimism,exports.SupportedChainIdsV4.Goerli],kt=function(){function e(e,n,a,r){var i,s,o,d=this;this.loadApprovalStatus=function(e,t,n){var a;return Ye(t,null!=(a=null==n?void 0:n.exchangeContractAddress)?a:d.exchangeProxy.address,e,d.provider)},this.awaitTransactionHash=function(){var e=b(I.mark((function e(t){return I.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.abrupt("return",d.provider.waitForTransaction(t));case 1:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}(),this.cancelOrder=function(e,t){if("ERC721"===t)return d.exchangeProxy.cancelERC721Order(e);if("ERC1155"===t)return d.exchangeProxy.cancelERC1155Order(e);throw console.log("unsupported order",t),new Error("unsupport order")},this.batchBuyNfts=function(e,n,a){void 0===n&&(n=!1),e.every((function(e){return 0===e.direction}))||t(!1);var r=e.every((function(e){return"erc721Token"in e})),i=e.every((function(e){return"erc1155Token"in e}));if(r||i||t(!1),r){var s=e;return d.exchangeProxy.batchBuyERC721s(s,s.map((function(e){return e.signature})),s.map((function(e){return"0x"})),n,k({},a))}if(i){var p=e;return d.exchangeProxy.batchBuyERC1155s(p,p.map((function(e){return e.signature})),p.map((function(e){return e.erc1155TokenAmount})),p.map((function(e){return"0x"})),n,k({},a))}throw Error("batchBuyNfts: Incompatible state")},this.getOrderHash=function(e){if("erc721Token"in e)return d.exchangeProxy.getERC721OrderHash(e);if("erc1155Token"in e)return d.exchangeProxy.getERC1155OrderHash(e);throw new Error("unsupport order")},this.getOrderStatus=function(){var e=b(I.mark((function e(t){return I.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!("erc721Token"in t)){e.next=5;break}return e.next=3,d.exchangeProxy.getERC721OrderStatus(t);case 3:return e.abrupt("return",e.sent);case 5:if(!("erc1155Token"in t)){e.next=14;break}return e.next=8,d.exchangeProxy.getERC1155OrderInfo(t);case 8:return e.abrupt("return",e.sent[1]);case 14:throw console.log("unsupported order",t),new Error("unsupport order");case 16:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}(),this.approveTokenOrNftByAsset=function(e,t,n,a){var r,i=null!=(r=null==a?void 0:a.signer)?r:d.signer;if(!i)throw new Error("Signed not defined");return ze(d.exchangeProxy.address,e,i,k({},n),a)},this.getWrappedTokenAddress=function(e){return function(e){var t,n=e.toString(10),a=ot[n];return null!=(t=null==a?void 0:a.wrappedNativeToken)?t:null}(e)},this.buildCollectionBasedOrder=function(e,t,n){return d.buildNftAndErc20Order(k({},t,{tokenId:"0"}),e,"buy",n,{tokenProperties:[Tt]})},this.buildNftAndErc20Order=function(e,t,n,a,r){var i;void 0===n&&(n="sell");var s=k({},{chainId:d.chainId,makerAddress:a,appId:d.appId},r),p="sell"===n?exports.TradeDirection.SellNFT:exports.TradeDirection.BuyNFT;if(p===exports.TradeDirection.BuyNFT&&t.tokenAddress.toLowerCase()===Ke)throw new Error("NFT Bids cannot use the native token (e.g. ETH). Please use the wrapped native token (e.g. WETH)");switch(e.type){case"ERC721":return function(e,t,n){var a,r,i,s,p,u,o,d,l=nt.toString();return n.expiry&&(l="number"==typeof n.expiry||"string"==typeof n.expiry?n.expiry.toString():y(n.expiry).toString()),{erc721Token:e.tokenAddress.toLowerCase(),erc721TokenId:e.tokenId,direction:parseInt(n.direction.toString()),erc20Token:t.tokenAddress.toLowerCase(),erc20TokenAmount:t.amount,maker:n.maker.toLowerCase(),erc721TokenProperties:null!=(a=null==(r=n.tokenProperties)?void 0:r.map((function(e){return{propertyData:e.propertyData,propertyValidator:e.propertyValidator}})))?a:[],fees:null!=(i=null==(s=n.fees)?void 0:s.map((function(e){var t,n;return{amount:e.amount.toString(),recipient:e.recipient.toLowerCase(),feeData:null!=(t=null==(n=e.feeData)?void 0:n.toString())?t:"0x"}})))?i:[],expiry:l,nonce:null!=(p=null==(u=n.nonce)?void 0:u.toString())?p:it(n.appId),taker:null!=(o=null==(d=n.taker)?void 0:d.toLowerCase())?o:C}}(e,t,k({direction:p,maker:a},s));case"ERC1155":return function(e,t,n){var a,r,i,s,p,u,o,d,l,m=nt.toString();return n.expiry&&(m="number"==typeof n.expiry||"string"==typeof n.expiry?n.expiry.toString():y(n.expiry).toString()),{erc1155Token:e.tokenAddress.toLowerCase(),erc1155TokenId:e.tokenId,erc1155TokenAmount:null!=(a=e.amount)?a:"1",direction:parseInt(n.direction.toString(10)),erc20Token:t.tokenAddress.toLowerCase(),erc20TokenAmount:t.amount,maker:n.maker.toLowerCase(),erc1155TokenProperties:null!=(r=null==(i=n.tokenProperties)?void 0:i.map((function(e){return{propertyData:e.propertyData.toString(),propertyValidator:e.propertyValidator}})))?r:[],fees:null!=(s=null==(p=n.fees)?void 0:p.map((function(e){var t,n;return{amount:e.amount.toString(),recipient:e.recipient.toLowerCase(),feeData:null!=(t=null==(n=e.feeData)?void 0:n.toString())?t:"0x"}})))?s:[],expiry:m,nonce:null!=(u=null==(o=n.nonce)?void 0:o.toString())?u:it(n.appId),taker:null!=(d=null==(l=n.taker)?void 0:l.toLowerCase())?d:C}}(e,t,k({direction:p,maker:a},s));default:throw new U(null!=(i=e.type)?i:"Unknown")}},this.signOrder=function(){var e=b(I.mark((function e(t){var n,a;return I.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(d.signer){e.next=2;break}throw new Error("Signed not defined");case 2:return e.next=4,Ze(t,d.signer,d.chainId,d.exchangeProxy.address);case 4:return n=Je(e.sent),a=k({},t,{signature:{signatureType:2,r:n.r,s:n.s,v:n.v}}),e.abrupt("return",a);case 8:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}(),this.fillBuyNftOrderWithoutApproval=function(){var e=b(I.mark((function e(t,n,a,r){var i,s,y,u,o,l,m,c,T,b,k,f,A,x;return I.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(d.signer){e.next=2;break}throw new Error("Signer undefined. Signer must be provided to fill order");case 2:if(t.direction===exports.TradeDirection.BuyNFT){e.next=4;break}throw new Error("Only filling Buy NFT orders (direction=1) is valid for skipping approvals");case 4:return e.next=6,d.signer.getAddress();case 6:if(s=e.sent,y=null!=(i=null==a?void 0:a.fillOrderWithNativeTokenInsteadOfWrappedToken)&&i,!("erc721Token"in t)){e.next=17;break}return o=ce.connect(t.erc721Token,d.signer),l=new p.Interface(yt),m=l.getFunction("safeTransferFromErc721Data"),c=l._encodeParams(m.inputs,[t,t.signature,y]),e.next=15,o["safeTransferFrom(address,address,uint256,bytes)"](s,d.exchangeProxy.address,null!=(u=null==a?void 0:a.tokenIdToSellForCollectionOrder)?u:n,c,null!=r?r:{});case 15:return e.abrupt("return",e.sent);case 17:if(!("erc1155Token"in t)){e.next=26;break}return k=oe.connect(t.erc1155Token,d.signer),f=new p.Interface(ut),A=f.getFunction("safeTransferFromErc1155Data"),x=f._encodeParams(A.inputs,[t,t.signature,y]),e.next=24,k.safeTransferFrom(s,d.exchangeProxy.address,null!=(T=null==a?void 0:a.tokenIdToSellForCollectionOrder)?T:n,null!=(b=t.erc1155TokenAmount)?b:"1",x,null!=r?r:{});case 24:return e.abrupt("return",e.sent);case 26:throw new Error("unknown order type");case 27:case"end":return e.stop()}}),e)})));return function(t,n,a,r){return e.apply(this,arguments)}}(),this.fillSignedCollectionOrder=function(){var e=b(I.mark((function e(t,n,a,r){return I.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.abrupt("return",d.fillSignedOrder(t,k({tokenIdToSellForCollectionOrder:n},a),k({},r)));case 1:case"end":return e.stop()}}),e)})));return function(t,n,a,r){return e.apply(this,arguments)}}(),this.isErc20NativeToken=function(e){return e.erc20Token.toLowerCase()===Ke},this.fillSignedOrder=function(){var e=b(I.mark((function e(t,n,a){var r,i,s,p,y,u,o,l,m,c;return I.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(r=t.direction===exports.TradeDirection.SellNFT,i=d.isErc20NativeToken(t),s=i&&r,p=d.getErc20TotalIncludingFees(t),!("erc1155Token"in t)){e.next=16;break}if(t.direction!==exports.TradeDirection.SellNFT){e.next=9;break}return e.abrupt("return",d.exchangeProxy.buyERC1155(t,t.signature,t.erc1155TokenAmount,"0x",k({value:s?p:void 0},a)));case 9:if(o=null!=(y=null==n?void 0:n.fillOrderWithNativeTokenInsteadOfWrappedToken)&&y,!(t.erc1155TokenProperties.length>0)){e.next=13;break}if(void 0!==(null==n?void 0:n.tokenIdToSellForCollectionOrder)){e.next=13;break}throw new Error("Collection order missing NFT tokenId to fill with. Specify in fillOrderOverrides.tokenIdToSellForCollectionOrder");case 13:return e.abrupt("return",d.exchangeProxy.sellERC1155(t,t.signature,null!=(u=null==n?void 0:n.tokenIdToSellForCollectionOrder)?u:t.erc1155TokenId,t.erc1155TokenAmount,o,"0x",k({},a)));case 14:e.next=26;break;case 16:if(!("erc721Token"in t)){e.next=26;break}if(t.direction!==exports.TradeDirection.SellNFT){e.next=21;break}return e.abrupt("return",d.exchangeProxy.buyERC721(t,t.signature,"0x",k({value:s?p:void 0},a)));case 21:if(c=null!=(l=null==n?void 0:n.fillOrderWithNativeTokenInsteadOfWrappedToken)&&l,!(t.erc721TokenProperties.length>0)){e.next=25;break}if(void 0!==(null==n?void 0:n.tokenIdToSellForCollectionOrder)){e.next=25;break}throw new Error("Collection order missing NFT tokenId to fill with. Specify in fillOrderOverrides.tokenIdToSellForCollectionOrder");case 25:return e.abrupt("return",d.exchangeProxy.sellERC721(t,t.signature,null!=(m=null==n?void 0:n.tokenIdToSellForCollectionOrder)?m:t.erc721TokenId,c,"0x",k({},a)));case 26:throw console.log("unsupported order",t),new Error("unsupport signedOrder type");case 28:case"end":return e.stop()}}),e)})));return function(t,n,a){return e.apply(this,arguments)}}(),this.postOrder=function(e,t,n){var a=parseInt(t.toString(10),10);return dt(e,a,n,{rootUrl:d.orderbookRootUrl})},this.getOrders=function(){var e=b(I.mark((function e(t){return I.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,lt(t,{rootUrl:d.orderbookRootUrl});case 2:return e.abrupt("return",e.sent);case 4:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}(),this.matchOrders=function(){var e=b(I.mark((function e(t,n,a){return I.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!("erc721Token"in t)||!("erc721Token"in n)){e.next=5;break}return e.next=3,d.exchangeProxy.matchERC721Orders(t,n,t.signature,n.signature,null!=a?a:{});case 3:return e.abrupt("return",e.sent);case 5:throw new Error("Only ERC721 Orders are currently supported for matching. Please ensure both the sellOrder and buyOrder are ERC721 orders");case 6:case"end":return e.stop()}}),e)})));return function(t,n,a){return e.apply(this,arguments)}}(),this.getMakerAsset=function(e){if(e.direction.toString(10)===exports.TradeDirection.BuyNFT.toString())return{tokenAddress:e.erc20Token,amount:e.erc20TokenAmount.toString(10),type:"ERC20"};if(e.direction.toString(10)===exports.TradeDirection.SellNFT.toString()){if("erc721Token"in e)return{tokenAddress:e.erc721Token,tokenId:e.erc721TokenId.toString(10),type:"ERC721"};if("erc1155Token"in e)return{tokenAddress:e.erc1155Token,tokenId:e.erc1155TokenId.toString(10),amount:e.erc1155TokenAmount.toString(10),type:"ERC1155"}}throw new Error("Unknown order direction "+e.direction)},this.getTakerAsset=function(e){if(e.direction.toString(10)===exports.TradeDirection.BuyNFT.toString()){if("erc721Token"in e)return{tokenAddress:e.erc721Token,tokenId:e.erc721TokenId.toString(10),type:"ERC721"};if("erc1155Token"in e)return{tokenAddress:e.erc1155Token,tokenId:e.erc1155TokenId.toString(10),amount:e.erc1155TokenAmount.toString(10),type:"ERC1155"}}else if(e.direction.toString(10)===exports.TradeDirection.SellNFT.toString())return{tokenAddress:e.erc20Token,amount:e.erc20TokenAmount.toString(10),type:"ERC20"};throw new Error("Unknown order direction "+e.direction)},this.validateSignature=function(){var e=b(I.mark((function e(t){return I.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!("erc721Token"in t)){e.next=6;break}return e.next=3,d.exchangeProxy.validateERC721OrderSignature(t,t.signature);case 3:return e.abrupt("return",!0);case 6:if(!("erc1155Token"in t)){e.next=12;break}return e.next=9,d.exchangeProxy.validateERC1155OrderSignature(t,t.signature);case 9:return e.abrupt("return",!0);case 12:throw new Error("Unknown order type (not ERC721 or ERC1155)");case 13:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}(),this.fetchBalanceForAsset=function(){var e=b(I.mark((function e(t,n,a){var r,i,s;return I.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:void 0===a&&(a=d.provider),e.t0=t.type,e.next="ERC20"===e.t0?4:"ERC721"===e.t0?6:"ERC1155"===e.t0?13:15;break;case 4:return r=le.connect(t.tokenAddress,a),e.abrupt("return",r.balanceOf(n));case 6:return i=ce.connect(t.tokenAddress,a),e.next=9,i.ownerOf(t.tokenId);case 9:if(e.sent.toLowerCase()!==n.toLowerCase()){e.next=12;break}return e.abrupt("return",u.BigNumber.from(1));case 12:return e.abrupt("return",u.BigNumber.from(0));case 13:return s=oe.connect(t.tokenAddress,a),e.abrupt("return",s.balanceOf(n,t.tokenId));case 15:throw new Error("Asset type unknown "+t.type);case 16:case"end":return e.stop()}}),e)})));return function(t,n,a){return e.apply(this,arguments)}}(),this.checkOrderCanBeFilledTakerSide=function(){var e=b(I.mark((function e(t,n){var a,r,i,s,p,y,u;return I.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r=d.getTakerAsset(t),e.next=3,d.loadApprovalStatus(r,n);case 3:return i=e.sent,e.next=6,d.fetchBalanceForAsset(d.getTakerAsset(t),n);case 6:return p=(s=e.sent).gte(null!=(a=r.amount)?a:1),y=i.contractApproved||i.tokenIdApproved||!1,u=p&&y,e.abrupt("return",{approvalStatus:i,balance:s.toString(),isApproved:y,hasBalance:p,canOrderBeFilled:u});case 11:case"end":return e.stop()}}),e)})));return function(t,n){return e.apply(this,arguments)}}(),this.checkOrderCanBeFilledMakerSide=function(){var e=b(I.mark((function e(t){var n,a,r,i,s,p,y,u;return I.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return a=t.maker,r=d.getMakerAsset(t),e.next=4,d.loadApprovalStatus(r,a);case 4:return i=e.sent,e.next=7,d.fetchBalanceForAsset(d.getMakerAsset(t),a);case 7:return p=(s=e.sent).gte(null!=(n=r.amount)?n:1),y=i.tokenIdApproved||i.contractApproved||!1,u=p&&y,e.abrupt("return",{approvalStatus:i,balance:s.toString(),isApproved:y,hasBalance:p,canOrderBeFilled:u});case 12:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}(),this.getTotalFees=function(e){var t=S;return e.fees.forEach((function(e){t=t.add(u.BigNumber.from(e.amount))})),t},this.getErc20TotalIncludingFees=function(e){var t=d.getTotalFees(e);return u.BigNumber.from(e.erc20TokenAmount).add(t)},this.provider=e,this.signer=n,this.chainId=a?parseInt(a.toString(10),10):this.provider._network.chainId;var l=ot[this.chainId],m=null!=(i=null==r?void 0:r.zeroExExchangeProxyContractAddress)?i:null==l?void 0:l.exchange;m||t(!1),this.exchangeProxyContractAddress=m,this.orderbookRootUrl=null!=(s=null==r?void 0:r.orderbookRootUrl)?s:"https://api.trader.xyz",this.appId=null!=(o=null==r?void 0:r.appId)?o:"314159",rt(this.appId),this.exchangeProxy=ye.connect(m,null!=n?n:e)}return e.prototype.buildOrder=function(e,t,n,a){if(!("ERC1155"!==t.type&&"ERC721"!==t.type||"ERC1155"!==e.type&&"ERC721"!==e.type))throw new Error("0x v4 only supports ERC721/ERC1155 <> ERC20. Currently 0x v4 does not support NFT<>NFT swaps, please use 0x v3 SDK for that.");if("ERC20"===e.type&&"ERC20"===t.type)throw new Error("0x v4 only supports ERC721/ERC1155 <> ERC20. Currently 0x v4 does not support NFT<>NFT swaps, please use 0x v3 SDK for that.");var r=exports.TradeDirection.SellNFT;"ERC20"===t.type&&(r=exports.TradeDirection.SellNFT),"ERC20"===e.type&&(r=exports.TradeDirection.BuyNFT);var i=r===exports.TradeDirection.BuyNFT?t:e,s=r===exports.TradeDirection.BuyNFT?e:t;return this.buildNftAndErc20Order(i,s,ct[r],n,a)},e}();exports.DIRECTION_MAPPING=ct,exports.EIP1155_DOMAIN_PARAMETERS=[{name:"name",type:"string"},{name:"version",type:"string"},{name:"chainId",type:"uint256"},{name:"verifyingContract",type:"address"}],exports.EIP712_DOMAIN_PARAMETERS=[{name:"name",type:"string"},{name:"version",type:"string"},{name:"chainId",type:"uint256"},{name:"verifyingContract",type:"address"}],exports.EIP712_TYPES=N,exports.ERC1155ORDER_STRUCT_ABI=We,exports.ERC1155ORDER_STRUCT_NAME="ERC1155Order",exports.ERC721ORDER_STRUCT_ABI=qe,exports.ERC721ORDER_STRUCT_NAME="ERC721Order",exports.ETH_ADDRESS_AS_ERC20=Ke,exports.FEE_ABI=je,exports.MAX_APPROVAL=Le,exports.NATIVE_TOKEN_ADDRESS_AS_ERC20="0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee",exports.NftSwap=He,exports.NftSwapV3=He,exports.NftSwapV4=kt,exports.OrderStatusCodeLookup=w,exports.PROPERTY_ABI=Qe,exports.SupportedChainsForV4OrderbookStatusMonitoring=bt,exports.V3ExchangeContract={__proto__:null},exports.V4ExchangeProxy={__proto__:null},exports.approveAsset=we,exports.buildOrder=Ie,exports.cancelOrder=ke,exports.cancelOrders=function(e,t,n){return e.batchCancelOrders(t,n)},exports.cancelOrdersUpToNow=function(e,t){void 0===t&&(t=V()),e.cancelOrdersUpTo(t)},exports.checkIfContractWallet=he,exports.convertAssetToInternalFormat=te,exports.convertAssetsToInternalFormat=ne,exports.convertDecodedAssetDataToUserFacingAssets=_e,exports.decodeAssetData=$,exports.decodeErc1155AssetData=Y,exports.decodeErc20AssetData=j,exports.decodeErc721AssetData=K,exports.decodeMultiAssetData=z,exports.encodeAssetData=J,exports.encodeErc1155AssetData=Z,exports.encodeErc20AssetData=W,exports.encodeErc721AssetData=Q,exports.encodeMultiAssetAssetData=X,exports.estimateGasForApproval=De,exports.estimateGasForFillOrder=Ne,exports.fillSignedOrder=Se,exports.getAmountFromAsset=ee,exports.getApprovalStatus=Ce,exports.getAssetsFromOrder=Pe,exports.getOrderInfo=fe,exports.getOrderStatus=Ae,exports.getSignatureTypeFromSignature=function(e){var t=a.hexDataLength(e);return a.hexDataSlice(e,t-1)},exports.hashOrder=xe,exports.prepareOrderSignatureFromContractWallet=Re,exports.prepareOrderSignatureFromEoaWallet=Oe,exports.signOrder=Ee,exports.signOrderWithEip1271=ge,exports.signOrderWithEoaWallet=ve,exports.verifyOrderSignature=Fe;
//# sourceMappingURL=nft-swap-sdk.cjs.production.min.js.map
